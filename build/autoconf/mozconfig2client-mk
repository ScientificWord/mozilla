#! /bin/sh
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Stephen Lamm <slamm@netscape.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

# mozconfig2client-mk - Translates .mozconfig into options for client.mk.
#    Prints defines to stdout.
#
# See mozconfig2configure for more details

print_header() {
  _mozconfig=${MOZCONFIG:-$HOME/.mozconfig}
  cat >> $tmp_file <<EOF
# gmake
# This file is automatically generated for client.mk.
# Do not edit. Edit $_mozconfig instead.
# To create a new .mozconfig file, you can visit,
#   http://webtools.mozilla.org/build/config.cgi

EOF
}

ac_add_options() {
  echo "# $* is used by configure (not client.mk)" >> $tmp_file
}

ac_add_app_options() {
  echo "# $* is used by configure (not client.mk)" >> $tmp_file
}

mk_add_options() {
  for _opt
  do
    # Escape shell characters, space, tab, dollar, quote, backslash,
    # and substitute '@<word>@' with '$(<word>)'.
    _opt=`echo "$_opt" | sed -e 's/\([\"\\]\)/\\\1/g; s/@\([^@]*\)@/\$(\1)/g;'`
    echo $_opt;
    opts="${opts:+$opts^}$_opt";
  done >> $tmp_file
}

mk_echo_options() {
  echo "Adding client.mk options from $MOZCONFIG:"
  IFS=^
  for _opt in $opts; do
    echo "    $_opt"
  done
}

# Main
#--------------------------------------------------

scriptdir=`dirname $0`
topsrcdir=$1
out_file=$2
tmp_file="$out_file-tmp$$"
opts=""

trap "rm -f $tmp_file; exit 1" 1 2 15

MOZCONFIG=`$scriptdir/mozconfig-find $topsrcdir`

print_header > $tmp_file

# If the path changes, configure should be rerun
echo "# PATH=$PATH" >> $tmp_file

if [ "$MOZCONFIG" ]
then
  . "$MOZCONFIG"
fi

if [ "$opts" ]; then
  mk_echo_options
fi

if test -f $out_file && cmp -s $tmp_file $out_file; then
  rm $tmp_file
else
  mv -f $tmp_file $out_file
fi
