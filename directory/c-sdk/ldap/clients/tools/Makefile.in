# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License Version 
# 1.1 (the "License"); you may not use this file except in compliance with 
# the License. You may obtain a copy of the License at 
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
# 
# The Original Code is Mozilla Communicator client code, released
# March 31, 1998.
# 
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998-1999
# the Initial Developer. All Rights Reserved.
# 
# Contributor(s):
# 
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK ***** 

MOD_DEPTH	= ../../..
srcdir		= @srcdir@
topsrcdir 	= @top_srcdir@
NSPR_LIBS   = @NSPR_LIBS@
NSPR_CFLAGS = @NSPR_CFLAGS@
NSS_LIBS   = @NSS_LIBS@
NSS_CFLAGS = @NSS_CFLAGS@
SVRCORE_LIBS   = @SVRCORE_LIBS@
SVRCORE_CFLAGS = @SVRCORE_CFLAGS@

include $(MOD_DEPTH)/config/autoconf.mk
include $(topsrcdir)/build.mk

INSTALLDIR     = $(DIST)/$(OBJDIR_NAME)/bin

INCLUDES	+= $(NSS_CFLAGS) \
		$(NSPR_CFLAGS) \
		-I$(DIST)/public/ldap \
		-I$(topsrcdir)/ldap/include

#ifeq ($(HAVE_CCONF), 1)
#COMPS_FROM_OBJDIR=1
#endif

#
# The "arg pin" feature depends on the server core library.
#
ifeq ($(HAVE_SVRCORE), 1)
LDAP_TOOL_ARGPIN=1
endif

ifeq ($(LDAP_TOOL_ARGPIN),1)
INCLUDES += $(SVRCORE_CFLAGS)
DEFS+=-DLDAP_TOOL_ARGPIN -DLDAP_TOOL_PKCS11
endif

ifdef HAVE_LIBNLS
INCLUDES	+= -I$(LIBNLS_INCLUDES)
endif

ifeq ($(OS_ARCH), WINNT)
DEFS		+= -DXP_WIN -DXP_WIN32
endif
DEFINES         += $(DEFS)

CXXSRCS		= convutf8.cpp

OBJDEST		= $(OBJDIR_NAME)
BINDIR		= $(OBJDIR_NAME)/bin
LIBDIR		= $(OBJDIR_NAME)/lib

ifeq ($(OS_ARCH), WINNT)
LDAPDELETE_OBJ		= $(addprefix $(OBJDEST)/, ldapdelete.obj)
LDAPMODIFY_OBJ		= $(addprefix $(OBJDEST)/, ldapmodify.obj)
LDAPSEARCH_OBJ		= $(addprefix $(OBJDEST)/, ldapsearch.obj)
LDAPCOMPARE_OBJ    	= $(addprefix $(OBJDEST)/, ldapcompare.obj)
LDAPCMP_OBJ     	= $(addprefix $(OBJDEST)/, ldapcmp.obj)
LDAPTOOLCOMMON_OBJ	= $(addprefix $(OBJDEST)/, common.obj) \
			  $(addprefix $(OBJDEST)/, convutf8.obj) \
			  $(addprefix $(OBJDEST)/, fileurl.obj) 
ifeq ($(LDAP_TOOL_ARGPIN),1)
LDAPTOOLCOMMON_OBJ	+= $(addprefix $(OBJDEST)/, argpin.obj) \
			   $(addprefix $(OBJDEST)/, ntuserpin.obj)
endif
else
LDAPDELETE_OBJ		= $(addprefix $(OBJDEST)/, ldapdelete.o)
LDAPMODIFY_OBJ		= $(addprefix $(OBJDEST)/, ldapmodify.o)
LDAPSEARCH_OBJ		= $(addprefix $(OBJDEST)/, ldapsearch.o)
LDAPCOMPARE_OBJ         = $(addprefix $(OBJDEST)/, ldapcompare.o)
LDAPCMP_OBJ     	= $(addprefix $(OBJDEST)/, ldapcmp.o)
ifeq ($(OS_ARCH), HP-UX)
LDAPTOOLCOMMON_OBJ	= $(addprefix $(OBJDEST)/, common.o) \
			  $(addprefix $(OBJDEST)/, fileurl.o) 
else
LDAPTOOLCOMMON_OBJ	= $(addprefix $(OBJDEST)/, common.o) \
			  $(addprefix $(OBJDEST)/, convutf8.o) \
			  $(addprefix $(OBJDEST)/, fileurl.o) 
endif
ifeq ($(LDAP_TOOL_ARGPIN),1)
LDAPTOOLCOMMON_OBJ	+= $(addprefix $(OBJDEST)/, argpin.o) \
			   $(addprefix $(OBJDEST)/, ntuserpin.o)
endif
endif

ifeq ($(OS_ARCH), HP-UX)
LDAPTOOLCPPCOMMON_OBJ   = $(addprefix $(OBJDEST)/, convutf8.o)
endif

CLIENT_OBJS= $(LDAPDELETE_OBJ) $(LDAPMODIFY_OBJ) \
	$(LDAPSEARCH_OBJ) $(LDAPCOMPARE_OBJ) $(LDAPCMP_OBJ) $(LDAPTOOLCOMMON_OBJ)

# For 'clean' target:
TARGETS=$(BINDIR) $(LIBDIR) $(CLIENT_OBJS)

LDAPDELETE = $(addsuffix $(EXE_SUFFIX), $(addprefix $(BINDIR)/, ldapdelete))
LDAPMODIFY = $(addsuffix $(EXE_SUFFIX), $(addprefix $(BINDIR)/, ldapmodify))
LDAPSEARCH = $(addsuffix $(EXE_SUFFIX), $(addprefix $(BINDIR)/, ldapsearch))
LDAPCOMPARE = $(addsuffix $(EXE_SUFFIX), $(addprefix $(BINDIR)/, ldapcompare))
LDAPCMP    = $(addsuffix $(EXE_SUFFIX), $(addprefix $(BINDIR)/, ldapcmp))

BINS=	 $(LDAPDELETE) $(LDAPMODIFY) $(LDAPSEARCH) $(LDAPCOMPARE) $(LDAPCMP)

LDAPTOOLS_NSS_LINK=$(NSSLINK)

# set common libs for all platforms
ifeq ($(OS_ARCH), WINNT)
EXTRA_LIBS = $(DIST)/$(OBJDIR_NAME)/lib/$(SSLDAP_LIBNAME).lib
EXTRA_LIBS += $(DIST)/$(OBJDIR_NAME)/lib/$(PRLDAP_LIBNAME).lib
EXTRA_LIBS += $(DIST)/$(OBJDIR_NAME)/lib/$(LDAP_LIBNAME).lib
EXTRA_LIBS += $(DIST)/$(OBJDIR_NAME)/lib/$(LBER_LIBNAME).lib
EXTRA_LIBS += $(DIST)/$(OBJDIR_NAME)/lib/$(LDIF_LIBNAME).lib
EXTRA_LIBS += $(DIST)/$(OBJDIR_NAME)/lib/$(UTIL_LIBNAME).lib
EXTRA_LIBS += $(SVRCORE_LINK)
EXTRA_LIBS += $(NSSLINK)
EXTRA_LIBS += $(NSPRLINK)
else
# ordering appears to be important, at least on some platforms with some
# linkers
EXTRA_LIBS = -L$(DIST)/$(OBJDIR_NAME)/lib -l$(SSLDAP_LIBNAME) \
	     -l$(PRLDAP_LIBNAME) -l$(LDAP_LIBNAME) -l$(LDIF_LIBNAME) \
             -L$(DIST)/lib $(SVRCORE_LINK) $(LDAPTOOLS_NSS_LINK) $(NSPRLINK)
endif

# set platform specific libs
ifeq ($(OS_ARCH), SunOS)
PLATFORMLIBS=-lthread -lposix4 -lsocket -lnls \
	     -ldl -lresolv -lgen 
endif

ifeq ($(OS_ARCH), WINNT)
PLATFORMLIBS =wsock32.lib kernel32.lib user32.lib gdi32.lib winspool.lib \
            comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib \
            rpcrt4.lib uuid.lib winmm.lib
endif

ifeq ($(OS_ARCH), OSF1)
PLATFORMLIBS = -lcxx -lpthread -lrt -lmach -lexc 
endif

ifeq ($(OS_ARCH), Linux)
PLATFORMLIBS=-ldl -lresolv -lpthread 
endif

ifeq ($(OS_ARCH), HP-UX)
PLATFORMLIBS = -ldld -lm -lpthread -lrt
endif

ifeq ($(OS_ARCH), AIX)
PLATFORMLIBS=-ldl -brtl -lpthreads -lc_r -lm
endif

ifeq ($(OS_ARCH), Darwin)
PLATFORMLIBS=-liconv
endif

ifdef HAVE_LIBNLS
ifeq ($(OS_ARCH), WINNT)
EXTRA_LIBS +=   $(LIBNLS_LIBDIR)/$(NSCNV_LIBNAME) \
		$(LIBNLS_LIBDIR)/$(NSJPN_LIBNAME) \
	        $(LIBNLS_LIBDIR)/$(NSCCK_LIBNAME) \
		$(LIBNLS_LIBDIR)/$(NSSB_LIBNAME)
else
ifeq ($(OS_ARCH), SunOS)
ifdef SOLARIS_USE_FORTE6
SOLARIS_CXX_LIB=Crun
else
ifeq ($(OS_RELEASE),5.6)
SOLARIS_CXX_LIB=C
else
SOLARIS_CXX_LIB=Crun
endif
endif
EXTRA_LIBS +=   $(LIBNLS_LIBDIR)/$(NSCNV_LIBNAME) -l$(SOLARIS_CXX_LIB) \
		$(LIBNLS_LIBDIR)/$(NSJPN_LIBNAME) \
	        $(LIBNLS_LIBDIR)/$(NSCCK_LIBNAME) \
		$(LIBNLS_LIBDIR)/$(NSSB_LIBNAME)
else
endif
EXTRA_LIBS +=   $(LIBNLS_LIBDIR)/$(NSCNV_LIBNAME) \
		$(LIBNLS_LIBDIR)/$(NSJPN_LIBNAME) \
	        $(LIBNLS_LIBDIR)/$(NSCCK_LIBNAME) \
		$(LIBNLS_LIBDIR)/$(NSSB_LIBNAME)
endif
endif

include $(topsrcdir)/config/rules.mk

###########################################################################

all::	$(OBJDEST) linklibnls libdir $(BINS)

libdir: linklibnls

linklibnls: FORCE
ifneq ($(COMPONENT_PULL_METHOD), FTP)
ifeq ($(HAVE_LIBNLS), 1)
	$(RM) -f $(LIBNLS_INCLUDES)
	$(RM) -f $(LIBNLS_LIBDIR)
	ln -s $(LIBNLS_INCLUDES_LOC) $(LIBNLS_INCLUDES)
	ln -s $(LIBNLS_LIB_LOC) $(LIBNLS_LIBDIR)
endif
else
ifeq ($(HAVE_LIBNLS), 1)
	@echo "Pulling libnls......"
# The following shell script recalculates $(NLS_INCLUDE), $(NLS_LIBPATH) and
# $(NLS_VERSION_FILE)
	sh ../../build/compver.sh $(LIBNLS_DIR) $(LIBNLS_RELDATE) \
	$(OBJDIR_NAME) ../../../../dist ldapsdk \
	$(LIBNLS_RELEASE_TREE)/libnls$(NLS_LIBVERSION)/$(LIBNLS_RELDATE)/$(OBJDIR_NAME) \
	libnls$(NLS_LIBVERSION) \
	"include lib conv$(NLS_LIBVERSION) locale$(NLS_LIBVERSION)" \
	../../../../../dist/libnls$(NLS_LIBVERSION)/$(OBJDIR_NAME)/locale$(NLS_LIBVERSION)/index.txt
endif
endif

$(LDAPTOOLCOMMON_OBJ):

ifeq ($(OS_ARCH), HP-UX)
$(LDAPTOOLCPPCOMMON_OBJ): convutf8.cpp
else
$(LDAPTOOLCPPCOMMON_OBJ):

endif

$(LDAPCOMPARE):	$(LDAPCOMPARE_OBJ) $(LDAPTOOLCOMMON_OBJ) \
		$(LDAPTOOLCPPCOMMON_OBJ) $(LDTOOLS_LIBS_DEP)
	$(LINK_EXE)

$(LDAPDELETE):	$(LDAPDELETE_OBJ) $(LDAPTOOLCOMMON_OBJ) \
		$(LDAPTOOLCPPCOMMON_OBJ) $(LDTOOLS_LIBS_DEP)
	$(LINK_EXE)

$(LDAPMODIFY):	$(LDAPMODIFY_OBJ) $(LDAPTOOLCOMMON_OBJ) \
		$(LDAPTOOLCPPCOMMON_OBJ) $(LDTOOLS_LIBS_DEP)
	$(LINK_EXE)

$(LDAPSEARCH):	$(LDAPSEARCH_OBJ) $(LDAPTOOLCOMMON_OBJ) \
		$(LDAPTOOLCPPCOMMON_OBJ) $(LDTOOLS_LIBS_DEP)
	$(LINK_EXE)

$(LDAPCMP):	$(LDAPCMP_OBJ) $(LDAPTOOLCOMMON_OBJ) \
		$(LDAPTOOLCPPCOMMON_OBJ) $(LDTOOLS_LIBS_DEP)
	$(LINK_EXE)

$(OBJDEST):	FORCE
	$(NSINSTALL) -D $(OBJDEST)
	$(NSINSTALL) -D $(BINDIR)
	$(NSINSTALL) -D $(LIBDIR)

export:: $(OBJDEST) libdir $(BINS)
	$(NSINSTALL) $(LDAPDELETE) $(INSTALLDIR)
	$(NSINSTALL) $(LDAPSEARCH) $(INSTALLDIR)
	$(NSINSTALL) $(LDAPMODIFY) $(INSTALLDIR)
	$(NSINSTALL) $(LDAPCOMPARE)	   $(INSTALLDIR)
	$(NSINSTALL) $(LDAPCMP)	   $(INSTALLDIR)


#
# Simple, local dependencies
#
LDAPTOOL_COMMON_DEPS = ldaptool.h Makefile
$(LDAPTOOLCOMMON_OBJ):	$(LDAPTOOL_COMMON_DEPS)
$(LDAPDELETE_OBJ):	$(LDAPTOOL_COMMON_DEPS)
$(LDAPMODIFY_OBJ):	$(LDAPTOOL_COMMON_DEPS) fileurl.h
$(LDAPSEARCH_OBJ):	$(LDAPTOOL_COMMON_DEPS) fileurl.h
$(LDAPCOMPARE_OBJ):		$(LDAPTOOL_COMMON_DEPS)
$(LDAPCMP_OBJ):		$(LDAPTOOL_COMMON_DEPS)

FORCE:
