# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License Version 
# 1.1 (the "License"); you may not use this file except in compliance with 
# the License. You may obtain a copy of the License at 
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
# 
# The Original Code is Mozilla Communicator client code, released
# March 31, 1998.
# 
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998-1999
# the Initial Developer. All Rights Reserved.
# 
# Contributor(s):
# 
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK ***** 

MOD_DEPTH	= ../../..
srcdir		= @srcdir@
topsrcdir 	= @top_srcdir@
NSPR_LIBS   = @NSPR_LIBS@
NSPR_CFLAGS = @NSPR_CFLAGS@
NSS_LIBS   = @NSS_LIBS@
NSS_CFLAGS = @NSS_CFLAGS@

include $(MOD_DEPTH)/config/autoconf.mk
include $(topsrcdir)/build.mk

SRCS		= clientinit.c \
		  ldapsinit.c \
		  errormap.c

REALOBJS        = $(SRCS:.c=.$(OBJ_SUFFIX))

SSLOBJDEST	= $(OBJDIR_NAME)
OBJS		= $(addprefix $(SSLOBJDEST)/, $(REALOBJS))

DISTHDIR	= $(DIST)/public/ldap
HDIR		= $(topsrcdir)/ldap/include

LIBSSLDAP	= $(addprefix $(SSLOBJDEST)/, $(LIB_PREFIX)$(SSLDAP_LIBNAME).$(LIB_SUFFIX))
DLLSSLDAP	= $(addprefix $(SSLOBJDEST)/, $(LIB_PREFIX)$(SSLDAP_LIBNAME).$(DLL_SUFFIX))

INSTALLDIR      = $(DIST)/$(OBJDIR_NAME)

RELEASE_LIBS	= $(DLLSSLDAP)

include $(topsrcdir)/config/rules.mk

GARBAGE 	+= $(LIBSSLDAP) $(DLLSSLDAP)

LOCAL_INCLUDES  = -I$(PUBLIC)/nspr
INCLUDES	+= -I$(DISTHDIR) -I$(HDIR) -I$(INSTALLDIR)/include \
		   -I$(DIST)/include \
			$(NSS_CFLAGS) \
			$(NSPR_CFLAGS)

DEFINES		+= $(DEFS)

PLATFORMCFLAGS	= -DUSE_WAITPID -DNEEDPROTOS
PLATFORMLIBS	=
THREADS		=
THREADSLIB	=

#
# shared library symbol export definitions
#
ifeq ($(USE_DLL_EXPORTS_FILE), 1)
ifeq ($(OS_ARCH), WINNT)
GENEXPORTS=cmd /c  $(PERL) $(topsrcdir)/ldap/build/genexports.pl
else
GENEXPORTS=$(PERL) $(topsrcdir)/ldap/build/genexports.pl
endif

# variable definitions for exported symbols
ifeq ($(OS_ARCH), WINNT)
        SSLDAP_EXPORT_DEFS= $(win_srcdir)/../msdos/winsock/nsldapssl32.def
else
        SSLDAP_EXPORT_DEFS= $(SSLOBJDEST)/libldap_ssl.exp
endif

SSLDAP_EXPORT_FLAGS=$(addprefix $(DLLEXPORTS_PREFIX), $(SSLDAP_EXPORT_DEFS))

GENEXPARGS=$(BUILD_DEBUG) $(SSLDAPVERS_SUFFIX) $(SSLDAPVERS)
endif # USE_DLL_EXPORTS_FILE

ifeq ($(OS_ARCH), SunOS)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME) 
# NSPR, NSS, etc. other mozilla components do not put their shared libs
# in dist_libdir but rather in $(DIST)/$(RELEASE_OBJDIR_NAME)/lib
EXTRA_LIBS += $(NSPRLINK)
endif

ifeq ($(OS_ARCH), WINNT)
ifdef NS_USE_GCC
EXTRA_DLL_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME) -l$(PRLDAP_LIBNAME) \
	$(NSSLINK) $(NSPRLINK)
else
EXTRA_LIBS =wsock32.lib kernel32.lib user32.lib gdi32.lib winspool.lib \
            comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib \
            rpcrt4.lib uuid.lib winmm.lib
EXTRA_LIBS += $(dist_libdir)/$(LDAP_LIBNAME).lib
EXTRA_LIBS += $(dist_libdir)/$(PRLDAP_LIBNAME).lib
EXTRA_LIBS += $(NSSLINK)
EXTRA_LIBS += $(NSPRLINK)
endif
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH),OS2)
EXTRA_LIBS = $(OS_LIBS)
EXTRA_LIBS += $(dist_libdir)/$(LDAP_LIBNAME).lib
EXTRA_LIBS += $(dist_libdir)/$(PRLDAP_LIBNAME).lib
EXTRA_LIBS += $(NSSLINK)
EXTRA_LIBS += $(NSPRLINK)
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), OSF1)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME)
EXTRA_LIBS += $(NSPRLINK)
EXTRA_LIBS += -lcxx -lpthread -lrt -lmach -lexc
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), AIX)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME)
EXTRA_LIBS += $(NSPRLINK)
EXTRA_LIBS += $(NSSLINK) -l $(PRLDAP_LIBNAME)
EXTRA_LIBS += -ldl -brtl -lpthreads -lc_r -lm
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), IRIX)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME)
EXTRA_LIBS += $(NSPRLINK)
EXTRA_LIBS += $(NSSLINK) -l $(PRLDAP_LIBNAME)
EXTRA_LIBS += $(OS_LIBS) -lc
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), Darwin)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME) -l$(PRLDAP_LIBNAME)
EXTRA_LIBS += $(NSSLINK) 
EXTRA_LIBS += $(NSPRLINK) 
EXTRA_LIBS += $(OS_LIBS)
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), BeOS)
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME) -l$(PRLDAP_LIBNAME)
EXTRA_LIBS += $(NSSLINK) 
EXTRA_LIBS += $(NSPRLINK) 
EXTRA_LIBS += $(OS_LIBS)
CUSTOM_LIBS=1
endif

ifeq ($(OS_ARCH), HP-UX)
CUSTOM_LIBS=1
endif

ifndef CUSTOM_LIBS
EXTRA_LIBS = -L$(dist_libdir) -l$(LDAP_LIBNAME) -l$(PRLDAP_LIBNAME)
EXTRA_LIBS += $(NSSLINK) 
EXTRA_LIBS += $(NSPRLINK) 
endif

OBJDEST = $(OBJDIR_NAME)

###########################################################################

ifeq ($(USE_DLL_EXPORTS_FILE), 1)
# recursive gmake rule to create exported symbols file
$(SSLDAP_EXPORT_DEFS):: ../libldap_ssl.ex
ifeq ($(OS_ARCH), WINNT)
	$(GENEXPORTS) Win32 Standard $< $(GENEXPARGS) > $@
else
	$(GENEXPORTS) $(OS_ARCH) Standard $< $(GENEXPARGS) > $@
endif
endif # USE_DLL_EXPORTS_FILE

versiont.c:	Makefile.client Version.c
	@$(RM) $@
	@(u="$${USER-root}" v="$(shell cat ../../build/version)" d="$(shell pwd)" \
	h="$(shell hostname)" t="$(shell date)"; $(SED) -e "s|%WHEN%|$${t}|" \
	-e "s|%WHOANDWHERE%|$${u}@$${h}:$${d}|" \
	-e "s|%VERSION%|$${v}|" \
	< Version.c > $@)

export::    $(OBJDEST) $(LIBDIR) $(OBJS) $(DLLSSLDAP)

$(LIBDIR):
	$(MKDIR) $(LIBDIR)

$(LIBSSLDAP): $(OBJS) $(LIBDIR) $(SSLDAP_EXPORT_DEFS)
	@echo ======= making $(LIBSSLDAP)
 ifdef SO_FILES_TO_REMOVE
	-$(RM) $(SO_FILES_TO_REMOVE)
 endif
	$(LINK_LIB) $(EXTRA_LIBS)

$(DLLSSLDAP): $(OBJS) $(LIBDIR) $(SSLDAP_EXPORT_DEFS)
	@echo ======= making $(DLLSSLDAP)
ifdef SO_FILES_TO_REMOVE
	-$(RM) $(SO_FILES_TO_REMOVE)
endif
	$(LINK_DLL) $(SSLDAP_EXPORT_FLAGS) $(EXTRA_LIBS)

veryclean:: clean

$(OBJDEST):
	$(MKDIR) $(OBJDEST)

export:: $(DLLSSLDAP)
ifeq ($(OS_ARCH), WINNT)
	$(INSTALL) -m 555 $(LIBSSLDAP) $(dist_libdir)
	$(INSTALL) -m 555 $(DLLSSLDAP) $(dist_libdir)
endif
ifdef MKSHLIB
	$(INSTALL) -m 555 $(DLLSSLDAP) $(dist_libdir)
	$(INSTALL) -m 444 $(DLLSSLDAP) $(dist_bindir)
endif
