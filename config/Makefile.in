#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Robert Ginda <rginda@netscape.com>
#   John Taylor <jtaylor@netscape.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

# For sanity's sake, we compile nsinstall without the wrapped system
# headers, so that we can use it to set up the wrapped system headers.
VISIBILITY_FLAGS =

ifneq (,$(CROSS_COMPILE)$(filter-out WINNT OS2,$(OS_ARCH)))
ifneq ($(OS_ARCH), WINCE)
HOST_PROGRAM	= nsinstall$(HOST_BIN_SUFFIX)
HOST_CSRCS	= nsinstall.c pathsub.c
endif
endif

PLSRCS		= nfspwd.pl revdepth.pl

TARGETS		= $(HOST_PROGRAM) $(PLSRCS:.pl=) $(SIMPLE_PROGRAMS)

# Generate the build number on the fly.
TARGETS		+= build_number nsBuildID.h

ifndef CROSS_COMPILE
ifdef USE_ELF_DYNSTR_GC
TARGETS		+= elf-dynstr-gc
endif
endif

# IMPORTANT: Disable NSBUILDROOT for this directory only, otherwise we have
# a recursive rule for finding nsinstall and the Perl scripts.
ifdef NSBUILDROOT
override NSBUILDROOT :=
endif

ifdef GNU_CC
MODULE_OPTIMIZE_FLAGS = -O3
endif

ifndef COMPILER_DEPEND
ifndef MOZ_NATIVE_MAKEDEPEND
DIRS		+= mkdepend
endif
endif

include $(topsrcdir)/config/config.mk

# Do not install util programs
NO_INSTALL=1

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_CONFIG),SunOS4.1)
NSPR_CFLAGS	+= -I$(srcdir)/../nsprpub/pr/include/md
endif

HEADERS = \
	nsBuildID.h \
	$(DEPTH)/mozilla-config.h \
	$(srcdir)/nsStaticComponents.h \
	$(NULL)

export:: $(TARGETS) $(HEADERS)
	$(INSTALL) $(IFLAGS1) $(HEADERS) $(DIST)/include
	-rm -f $(FINAL_LINK_COMPS) $(FINAL_LINK_LIBS) $(FINAL_LINK_COMP_NAMES)
	-rm -f $(DIST)/bin/chrome/chromelist.txt
	$(NSINSTALL) -t $(IFLAGS1) $(HEADERS) $(DIST)/sdk/include
ifdef HOST_PROGRAM
	$(INSTALL) $(HOST_PROGRAM) $(DIST)/bin
endif


# Copy NSPR to the SDK
ifndef LIBXUL_SDK
ifndef MOZ_NATIVE_NSPR
ABS_DIST = cd $(DIST) && pwd
ifeq (,$(CROSS_COMPILE)$(filter-out WINNT,$(OS_ARCH)))
ifdef CYGDRIVE_MOUNT
ABS_DIST = cygpath -w $(DIST) | sed -e 's|\\\\|/|g'
endif
endif
libs::
	_ABS_DIST=`$(ABS_DIST)`; \
	$(MAKE) -C $(DEPTH)/nsprpub install prefix=$$_ABS_DIST/sdk exec_prefix=$$_ABS_DIST/sdk bindir=$$_ABS_DIST/sdk/dummy includedir=$$_ABS_DIST/sdk/include libdir=$$_ABS_DIST/sdk/lib datadir=$$_ABS_DIST/sdk/dummy DESTDIR=
	$(RM) -rf $(DIST)/sdk/dummy
ifneq (,$(filter OS2 WINNT,$(OS_ARCH)))
	$(RM) -f $(DIST)/sdk/lib/$(DLL_PREFIX)nspr4$(DLL_SUFFIX) $(DIST)/sdk/lib/$(DLL_PREFIX)plc4$(DLL_SUFFIX) $(DIST)/sdk/lib/$(DLL_PREFIX)plds4$(DLL_SUFFIX)
	$(RM) -f $(DIST)/sdk/lib/$(LIB_PREFIX)nspr4_s.$(LIB_SUFFIX) $(DIST)/sdk/lib/$(LIB_PREFIX)plc4_s.$(LIB_SUFFIX) $(DIST)/sdk/lib/$(LIB_PREFIX)plds4_s.$(LIB_SUFFIX)
else
	$(RM) -f $(DIST)/sdk/lib/$(LIB_PREFIX)nspr4.$(LIB_SUFFIX) $(DIST)/sdk/lib/$(LIB_PREFIX)plc4.$(LIB_SUFFIX) $(DIST)/sdk/lib/$(LIB_PREFIX)plds4.$(LIB_SUFFIX)
endif
endif # MOZ_NATIVE_NSPR
endif # LIBXUL_SDK

ifdef WRAP_SYSTEM_INCLUDES
export::
	if test ! -d system_wrappers; then mkdir system_wrappers; fi
	$(PERL) $(topsrcdir)/nsprpub/config/make-system-wrappers.pl system_wrappers < $(srcdir)/system-headers
	$(INSTALL) system_wrappers $(DIST)/include
endif

# we don't use an explicit dependency here because then we would
# regenerate nsBuildID.h during the make install phase and that would
# be bad.
install::
	@if test ! -f nsBuildID.h; then\
		echo "You must have done at least a make export before trying to do a make install."; \
		echo "(nsBuildID.h is missing.)"; \
		exit 1; \
	fi;
	$(SYSINSTALL) $(IFLAGS1) nsBuildID.h $(DESTDIR)$(includedir)
	$(SYSINSTALL) $(IFLAGS1) $(DEPTH)/mozilla-config.h $(DESTDIR)$(includedir)

GARBAGE += build_number nsBuildID \
	$(FINAL_LINK_COMPS) $(FINAL_LINK_LIBS) $(FINAL_LINK_COMP_NAMES)

ifneq (,$(BUILD_OFFICIAL)$(MOZILLA_OFFICIAL))
_BN_OFFICIAL=1
else
_BN_OFFICIAL=
endif

build_number: FORCE
	$(PERL) -I$(srcdir) $(srcdir)/bdate.pl $@ $(_BN_OFFICIAL)

nsBuildID.h: nsBuildID.h.in build_number $(srcdir)/milestone.txt Makefile
	$(RM) $@
	MOZ_MILESTONE_RELEASE=$(MOZ_MILESTONE_RELEASE); \
	export MOZ_MILESTONE_RELEASE; \
	$(PERL) -I$(srcdir) $(srcdir)/aboutime.pl -m $(srcdir)/milestone.txt $@ build_number $(srcdir)/nsBuildID.h.in

ifndef CROSS_COMPILE
ifdef USE_ELF_DYNSTR_GC
elf-dynstr-gc: elf-dynstr-gc.c Makefile Makefile.in
	$(CC) $(COMPILE_CFLAGS) $(GLIB_CFLAGS) -o $@ $< $(LDFLAGS) $(GLIB_LIBS) 
endif
endif

FORCE:

ifdef MKDEPEND_DIR
clean clobber realclean clobber_all::
	cd $(MKDEPEND_DIR); $(MAKE) $@
endif
