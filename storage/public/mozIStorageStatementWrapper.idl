/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Oracle Corporation code.
 *
 * The Initial Developer of the Original Code is
 *  Oracle Corporation
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Vladimir Vukicevic <vladimir.vukicevic@oracle.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "mozIStorageStatement.idl"

[scriptable, uuid(02eeaf95-c3db-4182-9340-222c29f68f02)]
interface mozIStorageStatementRow : nsISupports {
  // magic interface we return that implements nsIXPCScriptable, to allow
  // for by-name access to rows
};

[scriptable, uuid(e65fe6e2-2643-463c-97e2-27665efe2386)]
interface mozIStorageStatementParams : nsISupports {
  // magic interface for parameter setting that implements nsIXPCScriptable.
};

[scriptable, uuid(eee6f7c9-5586-4eaf-b35c-dca987c4ffd1)]
interface mozIStorageStatementWrapper : nsISupports {
  /**
   * Initialize this wrapper with aStatement.
   */
  void initialize(in mozIStorageStatement aStatement);

  /**
   * The statement that is wrapped.
   */
  readonly attribute mozIStorageStatement statement;

  /**
   * Step, reset, and execute the wrapped statement.
   */
  void reset();
  boolean step();
  void execute();

  /**
   * The current row.  Throws an exception if no row is currently
   * available.  Useful only from script.  The value of this is only
   * valid while the statement is still executing, and is still on the
   * appropriate row.
   */
  readonly attribute mozIStorageStatementRow row;

  /**
   * The parameters; these can be set in lieu of using the call
   * notation on this.
   */
  readonly attribute mozIStorageStatementParams params;
};
