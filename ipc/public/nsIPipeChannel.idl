/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "MPL"); you may not use this file
 * except in compliance with the MPL. You may obtain a copy of
 * the MPL at http://www.mozilla.org/MPL/
 * 
 * Software distributed under the MPL is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the MPL for the specific language governing
 * rights and limitations under the MPL.
 * 
 * The Original Code is protoZilla.
 * 
 * The Initial Developer of the Original Code is Ramalingam Saravanan.
 * Portions created by Ramalingam Saravanan <svn@xmlterm.org> are
 * Copyright (C) 2000 Ramalingam Saravanan. All Rights Reserved.
 * 
 * Contributor(s):
 * 
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU General Public License (the "GPL"), in which case
 * the provisions of the GPL are applicable instead of
 * those above. If you wish to allow use of your version of this
 * file only under the terms of the GPL and not to allow
 * others to use your version of this file under the MPL, indicate
 * your decision by deleting the provisions above and replace them
 * with the notice and other provisions required by the GPL.
 * If you do not delete the provisions above, a recipient
 * may use your version of this file under either the MPL or the
 * GPL.
 */

#include "nsIChannel.idl"

interface nsIURI;
interface nsIPipeListener;

%{C++
#define NS_PIPECHANNEL_CLASSNAME  "Pipe Channel"
#define NS_PIPECHANNEL_CONTRACTID "@mozilla.org/process/pipe-channel;1"
     
#define NS_PIPECHANNEL_CID                       \
{ /* 8431e151-7ab1-11d4-8f02-006008948af5 */     \
   0x8431e151, 0x7ab1, 0x11d4,                   \
{0x8f, 0x02, 0x00, 0x60, 0x08, 0x94, 0x8a, 0xf5} }

%}

/**
 * The nsIPipeChannel interface executes a program in a new process and
 * communicates with the process using pipes.
 */

[scriptable, uuid(8431e150-7ab1-11d4-8f02-006008948af5)]
interface nsIPipeChannel : nsIChannel
{
    /**
     * Initialize PipeChannel
     */

    void init(in nsIURI aURI,
              in string executable,
              [array, size_is(argCount)] in string args,
              in unsigned long argCount,
              [array, size_is(envCount)] in string env,
              in unsigned long envCount,
              in unsigned long timeoutMS,
              in string killString,
              in boolean noMimeHeaders,
              in boolean mergeStderr,
              in boolean restricted,
              in nsIPipeListener console);
};

///////////////////////////////////////////////////////////////////////////////
