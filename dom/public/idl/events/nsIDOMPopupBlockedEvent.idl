/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIDOMEvent.idl"

interface nsIURI;

/**
 * The nsIDOMPopupBlockedEvent interface is the datatype for events
 * posted when a popup window is blocked.
 */

[scriptable, uuid(05be571f-c3ea-4959-a340-c57b1591ae4b)]
interface nsIDOMPopupBlockedEvent : nsIDOMEvent
{
  /**
   * The window object that attempted to open the blocked popup
   * (i.e. the window object on which open() was called).
   */
  readonly attribute nsIDOMWindow requestingWindow;


  /**
   * The URI of the window that was blocked.
   */
  readonly attribute nsIURI popupWindowURI;

  /**
   * The string of features passed to the window.open() call
   * (as the third argument)
   */
  readonly attribute DOMString popupWindowFeatures;

  /**
   * The window name passed to the window.open() call
   * (as the second argument)
   */
  readonly attribute DOMString popupWindowName;

  void initPopupBlockedEvent(in DOMString typeArg,
                             in boolean canBubbleArg,
                             in boolean cancelableArg,
                             in nsIDOMWindow requestingWindow,
                             in nsIURI popupWindowURI,
                             in DOMString popupWindowName,
                             in DOMString popupWindowFeatures);
};
