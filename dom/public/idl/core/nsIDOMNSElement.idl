/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Robert Sayre <sayrer@gmail.com> (original author)
 *
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "domstubs.idl"

interface nsIDOMNodeList;

[scriptable, uuid(cea6f919-7fe6-4bdd-9db6-158d9283f8d3)]
interface nsIDOMNSElement : nsISupports
{
  /*
   * Retrieve elements matching all classes listed in a
   * space-separated string.
   *
   * See <http://whatwg.org/specs/web-apps/current-work/>
   */
  nsIDOMNodeList getElementsByClassName(in DOMString classes);

  /*
   * Retrieve a list of rectangles, one for each CSS border-box associated with
   * the element. The coordinates are in CSS pixels, and relative to
   * the top-left of the document's viewport, unless the document
   * has an SVG foreignobject ancestor, in which case the coordinates are
   * relative to the top-left of the content box of the nearest SVG foreignobject
   * ancestor. The coordinates are calculated as if every scrollable element
   * is scrolled to its default position.
   *
   * Note: the boxes of overflowing children do not affect these rectangles.
   * Note: some elements have empty CSS boxes. Those return empty rectangles,
   * but the coordinates may still be meaningful.
   * Note: some elements have no CSS boxes (including display:none elements,
   * HTML AREA elements, and SVG elements that do not render). Those return
   * an empty list.
   */
  nsIDOMTextRectangleList getClientRects();
  /**
   * Returns the union of all rectangles in the getClientRects() list. Empty
   * rectangles are ignored, except that if all rectangles are empty,
   * we return an empty rectangle positioned at the top-left of the first
   * rectangle in getClientRects().
   */
  nsIDOMTextRectangle     getBoundingClientRect();
};
