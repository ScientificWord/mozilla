# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

######################################################################
# Mac verstion of nglayout.mak, the windows makefile
# EXPERIMENTAL
# EXPERIMENTAL
# EXPERIMENTAL
# comments to atotic@netscape.com for now
######################################################################

MOZ_TOP = mozilla
# This makefile is designed to make building the nglayout viewer
# application easy.

#
# Command macro defines
#

CVSCO = cvs -q co -P

# Branch tags we use
IMGLIB_BRANCH = MODULAR_IMGLIB_BRANCH
NETLIB_BRANCH = MODULAR_NETLIB_BRANCH
XPCOM_BRANCH = XPCOM_BRANCH
RAPTOR_BRANCH = RAPTOR_BRANCH

# CVS commands to pull the appropriate branch versions
CVSCO_XPCOM = {CVSCO} -r {XPCOM_BRANCH}
CVSCO_IMGLIB = {CVSCO} -r {IMGLIB_BRANCH}
CVSCO_NETLIB = {CVSCO} -r {NETLIB_BRANCH}
CVSCO_RAPTOR = {CVSCO}
CVSCO_LIZARD = {CVSCO}

# The list of directories that need to be built to build the
# standalone nglayout test program. The order is important. The
# DIST_DIRS need to be built before the RAPTOR_DIRS.

DIST_DIRS  = ¶
  nsprpub			¶
  include			¶
  jpeg				¶
  "modules/libreg"	¶
  xpcom				¶
  "modules/zlib"	¶
  "modules/libutil"	¶
  sun-java			¶
  nav-java			¶
  js				¶
  "modules/security/freenav"	¶
  "modules/libpref"	¶
  "modules/libimg"	¶
  base              ¶
  "lib/xp"			¶
  "lib/libnet"

# The list of directories to build the nglayout layout engine and
# related libraries.

RAPTOR_DIRS =			¶
  htmlparser			¶
  dom				¶
  gfx				¶
  view				¶
  widget			¶
  layout			¶
  webshell

# Main rules

all Ä all_dist all_nglayout

export Ä export_dist export_nglayout

libs Ä libs_dist libs_nglayout

install Ä install_dist install_nglayout

depend Ä depend_dist depend_nglayout

clobber Ä clobber_dist clobber_nglayout
	cd {MOZ_SRC}\{MOZ_TOP}
	-rd /s /q dist

clobber_all Ä clobber_all_dist clobber_all_nglayout
	cd {MOZ_SRC}\{MOZ_TOP}
	-rd /s /q dist

######################################################################

# Rule to build subdirectories

{DIST_DIRS} {RAPTOR_DIRS} Ä
#!if "{WINOS}" == "WIN95"
#    @echo +++ make: cannot recursively make on win95 using command.com, use w95make.
#!else
    echo +++ make: %MAKE_ARGS% in {MAKEDIR}\$@
	cd $@
	{NMAKE} -f {THAT_MAKEFILE} %%MAKE_ARGS%%
    cd {MAKEDIR} 
#!endif

######################################################################

# Rules for pulling the source from the cvs repository

pull_all Ä pull_lizard pull_xpcom pull_imglib pull_netlib pull_nglayout pull_mac

pull_lizard Ä
	cd {MOZ_SRC}
	{CVSCO_LIZARD} "{MOZ_TOP}/LICENSE"
	{CVSCO_LIZARD} "{MOZ_TOP}/LEGAL"
	{CVSCO_LIZARD} "{MOZ_TOP}/config"
	{CVSCO_LIZARD} "{MOZ_TOP}/lib/liblayer"
	{CVSCO_LIZARD} "{MOZ_TOP}/modules/zlib"
	{CVSCO_LIZARD} "{MOZ_TOP}/modules/libutil"
	{CVSCO_LIZARD} "{MOZ_TOP}/nsprpub"
	{CVSCO_LIZARD} "{MOZ_TOP}/sun-java"
	{CVSCO_LIZARD} "{MOZ_TOP}/nav-java"
	{CVSCO_LIZARD} "{MOZ_TOP}/js"
	{CVSCO_LIZARD} "{MOZ_TOP}/modules/security/freenav"
	{CVSCO_XPCOM} "{MOZ_TOP}/modules/libpref"

pull_xpcom Ä
	cd {MOZ_SRC}
	{CVSCO_XPCOM} "{MOZ_TOP}/modules/libreg"
	{CVSCO_XPCOM} "{MOZ_TOP}/xpcom"

pull_imglib Ä
	cd {MOZ_SRC}
	{CVSCO_IMGLIB} "{MOZ_TOP}/jpeg"
	{CVSCO_IMGLIB} "{MOZ_TOP}/modules/libutil"
	{CVSCO_IMGLIB} "{MOZ_TOP}/modules/libimg"

pull_netlib Ä
	cd {MOZ_SRC}
	{CVSCO_NETLIB} "{MOZ_TOP}/lib/xp"
	{CVSCO_NETLIB} "{MOZ_TOP}/lib/libnet"
	{CVSCO_NETLIB} "{MOZ_TOP}/include"

pull_nglayout Ä
	cd {MOZ_SRC}
	{CVSCO_RAPTOR} "{MOZ_TOP}/base"
	{CVSCO_RAPTOR} "{MOZ_TOP}/dom"
	{CVSCO_RAPTOR} "{MOZ_TOP}/gfx"
	{CVSCO_RAPTOR} "{MOZ_TOP}/htmlparser"
	{CVSCO_RAPTOR} "{MOZ_TOP}/layout"
	{CVSCO_RAPTOR} "{MOZ_TOP}/view"
	{CVSCO_RAPTOR} "{MOZ_TOP}/webshell"
	{CVSCO_RAPTOR} "{MOZ_TOP}/widget"
	
pull_mac Ä
	cd {MOZ_SRC}
	{CVSCO_LIZARD} "{MOZ_TOP}/build/mac"
	{CVSCO_LIZARD} "{MOZ_TOP}/cmd/macfe"
	{CVSCO_LIZARD} "{MOZ_TOP}/lib/mac/MacMemoryAllocator"
	{CVSCO_LIZARD} "{MOZ_TOP}/lib/mac/NSStdLib"
	{CVSCO_LIZARD} "{MOZ_TOP}/lib/mac/MoreFiles"
	{CVSCO_LIZARD} "{MOZ_TOP}/lib/mac/NSRuntime"

######################################################################

# Build rules for the "dist" portion. The "dist" contains those things
# which are imported by the nglayout test programs.

all_dist Ä
    @cd {MOZ_SRC}\{MOZ_TOP}
    {NMAKE} -f {THIS_MAKEFILE} export_dist
    {NMAKE} -f {THIS_MAKEFILE} libs_dist
    {NMAKE} -f {THIS_MAKEFILE} install_dist

export_dist Ä
    set MAKE_ARGS export

export_dist Ä {DIST_DIRS}

libs_dist Ä
    set MAKE_ARGS libs

libs_dist Ä {DIST_DIRS}

install_dist Ä
    set MAKE_ARGS install

install_dist Ä {DIST_DIRS}

depend_dist Ä
    set MAKE_ARGS depend

depend_dist Ä {DIST_DIRS}

clobber_dist Ä
    set MAKE_ARGS clobber

clobber_dist Ä {DIST_DIRS}

clobber_all_dist Ä
    set MAKE_ARGS clobber_all

clobber_all_dist Ä {DIST_DIRS}

######################################################################

# Build rules for the "nglayout" portion. This builds the nglayout software
# including the sample webshell viewer application.

all_nglayout Ä
    cd {MOZ_SRC}\{MOZ_TOP}
    {NMAKE} -f {THIS_MAKEFILE} export_nglayout
    {NMAKE} -f {THIS_MAKEFILE} libs_nglayout
    {NMAKE} -f {THIS_MAKEFILE} install_nglayout

export_nglayout Ä
	set MAKE_ARGS export

export_nglayout Ä {RAPTOR_DIRS}

libs_nglayout Ä
    set MAKE_ARGS libs

libs_nglayout Ä {RAPTOR_DIRS}

install_nglayout Ä
    set MAKE_ARGS install

install_nglayout Ä {RAPTOR_DIRS}

depend_nglayout Ä
    set MAKE_ARGS=depend

depend_nglayout Ä {RAPTOR_DIRS}

clobber_nglayout Ä
    set MAKE_ARGS=clobber

clobber_all_nglayout Ä
    set MAKE_ARGS=clobber_all

clobber_all_nglayout Ä {RAPTOR_DIRS}

######################################################################

# Build nglayout Doc++ documentation
DOCXX = {MOZ_TOOLS}\bin\docxx
DOCXX_RAPTOR = {DOCXX} -H -A -p -f -B c Ä\fake_banner-file_name -j -a
DOCXX_DESTDIR = {MOZ_SRC}\{MOZ_TOP}\dist\documentation

doc_nglayout Ä
    -rm -rf {DOCXX_DESTDIR}
    -@mkdir {DOCXX_DESTDIR}
    @for %d in (nglayout xpcom img dom netlib} do \
      {DOCXX_RAPTOR} -d {DOCXX_DESTDIR}\%d {MOZ_SRC}\{MOZ_TOP}\dist\public\%d\*.h
    @echo Documentation written to {DOCXX_DESTDIR}

######################################################################

# Build tarball
dummy=`beep`

DATE = `Date -d -s`

TAR = tar
ZIP = {MOZ_TOOLS}\bin\zip
GZIP = gzip

TARBALL = {MOZ_SRC}\win-{DATE}.tar
TARBALL_ZIP = {MOZ_SRC}\win-{DATE}.zip

TARFILES = mozilla README\\nglayout

tarballs Ä tarball_zip tarball_gz

tarball_zip Ä prepare_for_tarballing
    @echo Making {TARBALL_ZIP}
    cd {MOZ_SRC}
    rm -f {TARBALL_ZIP}
    {ZIP} -9 -r -q {TARBALL_ZIP} {TARFILES}

tarball_gz Ä prepare_for_tarballing
    @echo Making {TARBALL}
    cd {MOZ_SRC}
    rm -f {TARBALL} {TARBALL}.gz
    {TAR} cf {TARBALL} {TARFILES}
    @echo Making gzip of {TARBALL}
    {GZIP} -9 -q {TARBALL}

prepare_for_tarballing Ä
    {NMAKE} -f {THIS_MAKEFILE} clobber clobber_all
