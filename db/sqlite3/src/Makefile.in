#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is sqlite3 code.
#
# The Initial Developer of the Original Code is
#   sqlite3
# Portions created by the Initial Developer are Copyright (C) 2004
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Vladimir Vukicevic <vladimir.vukicevic@oracle.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE           = sqlite3
LIBRARY_NAME     = sqlite3_s
MODULE_NAME      = sqlite3
FORCE_STATIC_LIB = 1

EXPORTS = sqlite3.h sqlite3file.h

CSRCS = \
	alter.c \
	analyze.c \
	attach.c \
	auth.c \
	btree.c \
	build.c \
	callback.c \
	complete.c \
	date.c \
	delete.c \
	experimental.c \
	expr.c \
	func.c \
	hash.c \
	insert.c \
	legacy.c \
	main.c \
	opcodes.c \
	os.c \
	os_unix.c \
	os_win.c \
	os_os2.c \
	os_beos.c \
	pager.c \
	parse.c \
	pragma.c \
	prepare.c \
	printf.c \
	random.c \
	select.c \
	table.c \
	tokenize.c \
	trigger.c \
	update.c \
	utf.c \
	util.c \
	vacuum.c \
	vdbe.c \
	vdbeapi.c \
	vdbeaux.c \
	vdbefifo.c \
	vdbemem.c \
	where.c \
	$(NULL)

# REFEF_IO allows us to override IO functions, which is used in the AsyncIO
# -DSQLITE_SECURE_DELETE=1 will cause SQLITE to 0-fill delete data so we
# don't have to vacuum to make sure the data is not visible in the file.
DEFINES = -DSQLITE_ENABLE_REDEF_IO -DSQLITE_SECURE_DELETE=1 -DTHREADSAFE=1

ifdef ENABLE_TESTS
##LIBS = $(DIST)/lib/$(LIB_PREFIX)sqlite3_s.$(LIB_SUFFIX)
##SIMPLE_PROGRAMS = sqlite-shell
endif

include $(topsrcdir)/config/rules.mk

sqlite-shell.$(OBJ_SUFFIX): shell.c
	$(ELOG) $(CC) $(OUTOPTION)$@ -c $(COMPILE_CFLAGS) $(_VPATH_SRCS)

# next line allows use of MOZ_OBJDIR in .mozconfig with older gcc on BeOS, maybe others
LOCAL_INCLUDES += -I$(srcdir)
