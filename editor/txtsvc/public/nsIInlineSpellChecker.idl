/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Inline Spellchecking
 *
 * The Initial Developer of the Original Code is Neil Deakin.
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s): 
 *   Neil Deakin (enndeakin@sympatico.ca)
 *   Scott MacGregor (mscott@mozilla.org)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "domstubs.idl"

interface nsISelection;
interface nsIEditor;
interface nsIEditorSpellCheck;

[scriptable, uuid(f5d1ec9e-4d30-11d8-8053-da0cc7df1f20)]

interface nsIInlineSpellChecker : nsISupports
{
  readonly attribute nsIEditorSpellCheck spellChecker;

  [noscript] void init(in nsIEditor aEditor);
  [noscript] void cleanup(); 

  attribute boolean enableRealTimeSpell;

  void spellCheckAfterEditorChange(in long aAction,
                                   in nsISelection aSelection,
                                   in nsIDOMNode aPreviousSelectedNode,
                                   in long aPreviousSelectedOffset,
                                   in nsIDOMNode aStartNode,
                                   in long aStartOffset,
                                   in nsIDOMNode aEndNode,
                                   in long aEndOffset);

  void spellCheckRange(in nsIDOMRange aSelection);

  nsIDOMRange getMispelledWord(in nsIDOMNode aNode, in long aOffset);
  void replaceWord(in nsIDOMNode aNode, in long aOffset, in AString aNewword);
  void addWordToDictionary(in AString aWord);
  
  void ignoreWord(in AString aWord);
  void ignoreWords([array, size_is(aCount)] in wstring aWordsToIgnore, in unsigned long aCount);
};

%{C++

#define MOZ_INLINESPELLCHECKER_CONTRACTID "@mozilla.org/spellchecker-inline;1"

%}
