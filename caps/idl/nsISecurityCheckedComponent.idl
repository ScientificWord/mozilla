/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/*
 * Interface checked by caps to determine the capability needed to
 * call methods on a component from potentially untrusted code.
 *
 * See also foo, which advertises whether untrusted code can get
 * services and create instances.
*/

#include "nsISupports.idl"

/**
 * Each method of this interface should return a string representing the
 * script capability needed to perform the operation on the target component.
 *
 * Return values of 'allAccess' or 'noAccess' unconditionally allow or deny
 * access to the operation.
 */
[scriptable, uuid(0dad9e8c-a12d-4dcb-9a6f-7d09839356e1)]
interface nsISecurityCheckedComponent : nsISupports {
  string canCreateWrapper(in nsIIDPtr iid);
  string canCallMethod(in nsIIDPtr iid, in wstring methodName);
  string canGetProperty(in nsIIDPtr iid, in wstring propertyName);
  string canSetProperty(in nsIIDPtr iid, in wstring propertyName);
};

// could put %{ block here containing macro'ed implementations of this
// interface for component developers' convenience.
