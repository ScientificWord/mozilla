/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla browser.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications, Inc.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Travis Bogard <travis@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 * The nsIContentViewerEdit    
 */

/**
 * The nsIMarkupDocumentViewer
 * This interface describes the properties of a content viewer 
 * for a markup document - HTML or XML
 */

#include "nsISupports.idl"

interface nsIDOMNode;


[scriptable, uuid(18cbdb18-3917-42fd-9c4a-0b2112d41a6d)]
interface nsIMarkupDocumentViewer : nsISupports
{

	/*
	Scrolls to a given DOM content node. 
	*/
	void scrollToNode(in nsIDOMNode node);

	/** The amount by which to scale all text. Default is 1.0. */
	attribute float textZoom;

	/** Disable entire author style level (including HTML presentation hints) */
	attribute boolean authorStyleDisabled;

	/*
	XXX Comment here!
	*/
	attribute ACString defaultCharacterSet;

	/*
	XXX Comment here!
	*/
	attribute ACString forceCharacterSet;

	/*
	XXX Comment here!
	*/
	attribute ACString hintCharacterSet;

	/*
	XXX Comment here!
	*/
	attribute PRInt32 hintCharacterSetSource;

	/*
	character set from prev document 
	*/
	attribute ACString prevDocCharacterSet;

	//void GetCharacterSetHint(in wstring hintCharset, in PRInt32 charsetSource);

	/**
	* Tell the container to shrink-to-fit or grow-to-fit its contents
	*/
	void sizeToContent();

  /**
   * Options for Bidi presentation.
   *
   * Use these attributes to access the individual Bidi options.
   */

  /**
   * bidiTextDirection: the default direction for the layout of bidirectional text.
   *                    1 - left to right
   *                    2 - right to left
   */
  attribute octet bidiTextDirection;
  
  /**
   * bidiTextType: the ordering of bidirectional text. This may be either "logical"
   * or "visual". Logical text will be reordered for presentation using the Unicode
   * Bidi Algorithm. Visual text will be displayed without reordering. 
   *               1 - the default order for the charset
   *               2 - logical order
   *               3 - visual order
   */
  attribute octet bidiTextType;

  /**
   * bidiControlsTextMode: the order of bidirectional text in form controls.
   *                       1 - logical
   *                       2 - visual
   *                       3 - like the containing document
   */
  attribute octet bidiControlsTextMode;

  /**
   * bidiNumeral: the type of numerals to display. 
   *              1 - depending on context, default is Arabic numerals
   *              2 - depending on context, default is Hindi numerals
   *              3 - Arabic numerals
   *              4 - Hindi numerals
   */
  attribute octet bidiNumeral;

  /**
   * bidiSupport: whether to use platform bidi support or Mozilla's bidi support
   *              1 - Use Mozilla's bidi support
   *              2 - Use the platform bidi support
   *              3 - Disable bidi support
   */
  attribute octet bidiSupport;

  /**
   * bidiCharacterSet: whether to force the user's character set
   *                   1 - use the document character set
   *                   2 - use the character set chosen by the user
   */
  attribute octet bidiCharacterSet;  
  
  /**
   * Use this attribute to access all the Bidi options in one operation
   */
  attribute PRUint32 bidiOptions;
};
