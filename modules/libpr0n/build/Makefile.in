#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= imglib2
LIBRARY_NAME	= imglib2
EXPORT_LIBRARY = 1
IS_COMPONENT	= 1
MODULE_NAME	= nsImageLib2Module
GRE_MODULE	= 1
LIBXUL_LIBRARY = 1

PACKAGE_FILE = imglib2.pkg

REQUIRES	= xpcom \
		  string \
		  necko \
		  nkcache \
		  gfx \
		  $(JPEG_REQUIRES) \
		  $(PNG_REQUIRES) \
		  $(ZLIB_REQUIRES) \
		  $(NULL)

CPPSRCS = \
		nsImageModule.cpp \
		$(NULL)

LOCAL_INCLUDES	= \
		-I. \
		-I$(srcdir)/../src \
		$(foreach d,$(filter-out icon,$(MOZ_IMG_DECODERS)), \
			-I$(srcdir)/../decoders/${d}) \
		$(foreach d,$(MOZ_IMG_ENCODERS), \
			-I$(srcdir)/../encoders/${d}) \
		$(NULL)

SHARED_LIBRARY_LIBS = \
		../src/$(LIB_PREFIX)imglib2_s.$(LIB_SUFFIX) \
		$(foreach d,$(filter-out icon,$(MOZ_IMG_DECODERS)), \
			../decoders/${d}/$(LIB_PREFIX)img${d}_s.$(LIB_SUFFIX))\
		$(foreach d,$(MOZ_IMG_ENCODERS), \
			../encoders/${d}/$(LIB_PREFIX)img${d}e_s.$(LIB_SUFFIX))\
		$(NULL)

EXTRA_DSO_LIBS	= \
		gkgfx \
		$(NULL)

ifdef MOZ_ENABLE_CAIRO_GFX
EXTRA_DSO_LIBS	+= thebes
endif

EXTRA_DSO_LDOPTS = \
		$(LIBS_DIR) \
		$(JPEG_LIBS) \
		$(PNG_LIBS) $(ZLIB_LIBS) \
		$(EXTRA_DSO_LIBS) \
		$(MOZ_COMPONENT_LIBS) \
		$(NULL)

# Force a rebuild of nsImageModule when either of MOZ_IMG_{DE,EN}CODERS changes

GARBAGE += _img_list nsImgBuildDefines.h

export::
	@{ \
	$(foreach d,$(filter-out icon,$(MOZ_IMG_DECODERS)), \
		echo "#define IMG_BUILD_DECODER_${d}";) \
	$(foreach d,$(MOZ_IMG_ENCODERS), \
		echo "#define IMG_BUILD_ENCODER_${d}";) \
	} > nsImgBuildDefines.tmp
	@if `cmp -s nsImgBuildDefines.h nsImgBuildDefines.tmp`; then \
		rm -f nsImgBuildDefines.tmp; \
	else \
		rm -f nsImgBuildDefines.h; \
		mv nsImgBuildDefines.tmp nsImgBuildDefines.h; \
	fi

include $(topsrcdir)/config/rules.mk

