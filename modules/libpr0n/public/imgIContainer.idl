/** -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2001
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Stuart Parmenter <pavlov@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "gfxtypes.idl"
#include "gfxIFormats.idl"

interface gfxIImageFrame;
interface imgIContainerObserver;

/**
 * gfxIImageContainer interface
 *
 * @author Stuart Parmenter <pavlov@netscape.com>
 * @version 0.1
 * @see "gfx2"
 */
[scriptable, uuid(1a6290e6-8285-4e10-963d-d001f8d327b8)]
interface imgIContainer : nsISupports
{
  /**
   * Create a new \a aWidth x \a aHeight sized image container.
   *
   * @param aWidth The width of the container in which all the
   *               gfxIImageFrame children will fit.
   * @param aHeight The height of the container in which all the
   *                gfxIImageFrame children will fit.
   * @param aObserver Observer to send animation notifications to.
   */
  void init(in PRInt32 aWidth,
            in PRInt32 aHeight,
            in imgIContainerObserver aObserver);


  /* this should probably be on the device context (or equiv) */
  readonly attribute gfx_format preferredAlphaChannelFormat;

  /**
   * The width of the container rectangle.
   */
  readonly attribute PRInt32 width;

  /**
   * The height of the container rectangle.
   */
  readonly attribute PRInt32 height;


  /**
   * Get the current frame that would be drawn if the image was to be drawn now
   */
  readonly attribute gfxIImageFrame currentFrame;


  readonly attribute unsigned long numFrames;

  /**
   * Animation mode Constants
   *   0 = normal
   *   1 = don't animate
   *   2 = loop once
   */
  const short kNormalAnimMode   = 0;
  const short kDontAnimMode     = 1;
  const short kLoopOnceAnimMode = 2;

  attribute unsigned short animationMode;

  gfxIImageFrame getFrameAt(in unsigned long index);

  /**
   * Adds \a item to the end of the list of frames.
   * @param item frame to add.
   */
  void appendFrame(in gfxIImageFrame item);

  void removeFrame(in gfxIImageFrame item);

  /* notification when the current frame is done decoding */
  void endFrameDecode(in unsigned long framenumber, in unsigned long timeout);
  
  /* notification that the entire image has been decoded */
  void decodingComplete();
  
  void clear();

  void startAnimation();

  void stopAnimation();

  void resetAnimation();

  /* animation stuff */

  /**
   * number of times to loop the image.
   * @note -1 means forever.
   */
  attribute long loopCount;
};
