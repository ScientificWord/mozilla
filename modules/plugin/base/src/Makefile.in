#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= plugin
XPIDL_MODULE	= layout
LIBRARY_NAME	= gkplugin
EXPORT_LIBRARY = 1
IS_COMPONENT    = 1
MODULE_NAME	= nsPluginModule
GRE_MODULE	= 1
LIBXUL_LIBRARY = 1

PACKAGE_FILE = plugin.pkg
PACKAGE_VARS += MOZ_ENABLE_GTK

REQUIRES	= xpcom \
		  xpconnect \
		  string \
		  java \
		  pref \
		  necko \
		  caps \
		  intl \
		  uconv \
		  unicharutil \
		  dom \
		  gfx \
		  content \
		  widget \
		  mimetype \
		  oji \
		  exthandler \
		  docshell \
		  windowwatcher \
		  imglib2 \
		  layout \
		  js \
		  locale \
		  $(NULL)

ifneq (,$(filter gtk gtk2,$(MOZ_WIDGET_TOOLKIT)))
REQUIRES	+= gtkxtbin
endif
ifeq ($(MOZ_WIDGET_TOOLKIT),xlib)
REQUIRES	+= xlibxtbin xlibrgb
endif

CPPSRCS		= \
		ns4xPlugin.cpp \
		ns4xPluginInstance.cpp \
		nsPluginHostImpl.cpp \
		nsPluginModule.cpp \
		nsPluginInstancePeer.cpp \
		nsPluginDirServiceProvider.cpp \
		nsJSNPRuntime.cpp \
		$(NULL)

ifeq ($(OS_ARCH), BeOS)
	CPPSRCS += nsPluginsDirBeOS.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
else
ifneq (,$(filter WINNT WINCE,$(OS_ARCH)))
	CPPSRCS += nsPluginsDirWin.cpp
	CPPSRCS += nsPluginNativeWindowWin.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
	CPPSRCS += nsPluginsDirOS2.cpp
	CPPSRCS += nsPluginNativeWindowOS2.cpp
else
ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
	CPPSRCS += nsPluginsDirDarwin.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
	CPPSRCS += nsPluginsDirUnix.cpp
	CPPSRCS += nsPluginNativeWindowGtk2.cpp
else
	CPPSRCS += nsPluginsDirUnix.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
endif
endif
endif
endif
endif

ifneq (,$(filter WINNT Darwin,$(OS_ARCH)))
EXTRA_DSO_LIBS	+= gkgfx
endif

EXTRA_DSO_LDOPTS = \
		$(LIBS_DIR) \
		$(EXTRA_DSO_LIBS) \
		$(MOZ_NECKO_UTIL_LIBS) \
		$(MOZ_UNICHARUTIL_LIBS) \
		$(MOZ_COMPONENT_LIBS) \
		$(MOZ_JS_LIBS) \
		$(NULL)

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
EXTRA_DSO_LDOPTS += $(TK_LIBS)
endif

ifndef WINCE
ENABLE_CXX_EXCEPTIONS = 1
endif

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH),WINNT)
OS_LIBS		+= $(call EXPAND_LIBNAME,version)
endif

ifeq ($(OS_ARCH), OpenVMS)
DEFINES		+= -DGENERIC_MOTIF_REDEFINES
OS_CXXFLAGS	+= -Wc,warn=disa=NOSIMPINT
endif

ifeq ($(OS_ARCH),OS2)
ADD_TO_DEF_FILE = cat < $(srcdir)/extradefs.os2 >> $(DEF_FILE)
endif

ifdef MOZ_ENABLE_GTK
CXXFLAGS        += $(MOZ_GTK_CFLAGS)
CFLAGS          += $(MOZ_GTK_CFLAGS)
EXTRA_DSO_LDOPTS += -lgtkxtbin -lgtksuperwin $(XLDFLAGS) $(XT_LIBS) $(MOZ_GTK_LDFLAGS)
endif		#MOZ_ENABLE_GTK

ifdef MOZ_ENABLE_GTK2
CXXFLAGS        += $(MOZ_GTK2_CFLAGS)
CFLAGS          += $(MOZ_GTK2_CFLAGS)
EXTRA_DSO_LDOPTS += -lgtkxtbin $(XLDFLAGS) $(XT_LIBS) $(MOZ_GTK2_LIBS) $(XLIBS)
endif           #MOZ_ENABLE_GTK2

ifdef MOZ_ENABLE_XLIB
EXTRA_DSO_LDOPTS += -lxlibxtbin -lxlibrgb $(XLDFLAGS) $(XT_LIBS) $(XLIBS)
CXXFLAGS        += $(MOZ_XLIB_CFLAGS)
CFLAGS          += $(MOZ_XLIB_CFLAGS)
endif		#MOZ_ENABLE_XLIB

ifdef MOZ_ENABLE_QT
EXTRA_DSO_LDOPTS += $(MOZ_QT_LDFLAGS)
CXXFLAGS        += $(MOZ_QT_CFLAGS)
CFLAGS          += $(MOZ_QT_CFLAGS)
endif		#MOZ_ENABLE_QT

