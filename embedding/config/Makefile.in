# 
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is the Mozilla browser.
#
# The Initial Developer of the Original Code is
# Christopher Blizzard.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH           = ../..
topsrcdir       = @top_srcdir@
srcdir          = @srcdir@
VPATH           = @srcdir@

include $(DEPTH)/config/autoconf.mk
include $(topsrcdir)/config/rules.mk

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
  BASEBROWSER = basebrowser-mac-macho
  CLIENTMANIFEST = client-mac-macho
  _PLATFORM = unix
else
ifeq (windows,$(MOZ_WIDGET_TOOLKIT))
  BASEBROWSER = basebrowser-win
  BASEBROWSER_SUPP = basebrowser-win-supp
  CLIENTMANIFEST = client-win
  GREMANIFEST = gre-win
  GREMANIFEST_SUPP = gre-win-supp
  _PLATFORM = dos
  WINAPP=mfcembed
  #WINAPP=winembed
else
ifdef MINIMO
  BASEBROWSER = minimo-unix
else
  BASEBROWSER = basebrowser-unix
endif
  CLIENTMANIFEST = client-unix
  _PLATFORM = unix
endif
endif


embed_chrome: embed-jar.mn
ifneq (jar,$(MOZ_CHROME_FILE_FORMAT))
	$(PERL) -I$(srcdir) $(srcdir)/gen_mn.pl -manifest $(MOZILLA_DIR)/embedding/config/embed-jar.mn -mozpath $(MOZILLA_DIR) -chrome $(DIST)/bin/chrome > embed-tmp.mn
	$(PERL) -I$(MOZILLA_DIR)/config $(MOZILLA_DIR)/config/make-jars.pl -a -v -f $(MOZ_CHROME_FILE_FORMAT) -d $(DIST)/bin/chrome -s $(DIST)/bin/chrome < embed-tmp.mn
	-$(RM) -f embed-tmp.mn
else
	-$(RM) -rf $(DIST)/Embed/tmpchrome
	for f in $(DIST)/bin/chrome/*.jar; do \
		b=`basename $$f | sed -e 's|.jar$$||'` ; \
		echo "$$b" ; \
		$(NSINSTALL) -D $(DIST)/Embed/tmpchrome/$$b ;\
		$(UNZIP) -q -o -d $(DIST)/Embed/tmpchrome/$$b $$f ; \
	done
	$(PERL) -I$(srcdir) $(srcdir)/gen_mn.pl -manifest $(MOZILLA_DIR)/embedding/config/embed-jar.mn -mozpath $(MOZILLA_DIR) -chrome $(DIST)/Embed/tmpchrome > embed-tmp.mn
	$(PERL) -I$(MOZILLA_DIR)/config $(MOZILLA_DIR)/config/make-jars.pl -a -v -f $(MOZ_CHROME_FILE_FORMAT) -d $(DIST)/bin/chrome -s $(DIST)/Embed/tmpchrome -z $(ZIP) < embed-tmp.mn
	-$(RM) -f embed-tmp.mn
	-$(RM) -rf $(DIST)/Embed/tmpchrome
endif

embed_copy::
	-mkdir $(DIST)/Embed/defaults/
	-mkdir $(DIST)/Embed/defaults/pref
	-cp $(srcdir)/all.js $(DIST)/Embed/defaults/pref
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(srcdir)/$(BASEBROWSER) -o $(_PLATFORM) -v
ifeq ($(OS_ARCH),WINNT)
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(srcdir)/$(BASEBROWSER_SUPP) -o $(_PLATFORM) -v
endif
	if test -f "$(srcdir)/$(CLIENTMANIFEST)"; then \
		$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(srcdir)/$(CLIENTMANIFEST) -o $(_PLATFORM) -v; \
	fi
	$(NSINSTALL) -t $(srcdir)/installed-chrome.txt $(DIST)/Embed/chrome
	$(NSINSTALL) -t $(srcdir)/readme.html $(DIST)/Embed
ifndef MINIMO
	-$(NSINSTALL) -t $(DEPTH)/embedding/lite/$(LIB_PREFIX)embed_lite$(DLL_SUFFIX) $(DIST)/Embed/components
endif
ifeq ($(OS_ARCH),WINNT)
ifeq ($(WINAPP),mfcembed)
	$(NSINSTALL) -t $(DIST)/bin/mfcembed.exe $(DIST)/Embed
	$(NSINSTALL) -t $(DIST)/bin/mfcEmbedComponents.dll $(DIST)/Embed
else
ifeq ($(WINAPP),winembed)
	$(NSINSTALL) -t $(DIST)/bin/winembed.exe $(DIST)/Embed
endif
endif
ifdef MOZ_DEBUG
	$(NSINSTALL) -t $(DIST)/bin/windbgdlg.exe $(DIST)/Embed
endif
endif # WINNT

merge_xpt::
	$(XPIDL_LINK) $(DIST)/Embed/components/xpt_tmp $(DIST)/Embed/components/*.xpt
	$(RM) $(DIST)/Embed/components/*.xpt
	mv $(DIST)/Embed/components/xpt_tmp $(DIST)/Embed/components/all.xpt
libs::
	$(MAKE) embed_chrome
	$(MAKE) embed_copy

ifeq ($(OS_ARCH),WINNT)
gre_copy::
	$(PERL) -I$(srcdir) $(srcdir)/gre.pl gre < $(srcdir)/$(BASEBROWSER) > $(MOZILLA_DIR)/embedding/config/gre-win.tmp
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(MOZILLA_DIR)/embedding/config/gre-win.tmp -o $(_PLATFORM) -v
	-$(RM) -f $(MOZILLA_DIR)/embedding/config/gre-win.tmp
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(srcdir)/$(GREMANIFEST) -o $(_PLATFORM) -v
	$(PERL) -I$(srcdir) $(srcdir)/gre.pl gre_app_support < $(srcdir)/$(BASEBROWSER_SUPP) > $(MOZILLA_DIR)/embedding/config/gre-win-supp.tmp
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(MOZILLA_DIR)/embedding/config/gre-win-supp.tmp -o $(_PLATFORM) -v
	-$(RM) -f $(MOZILLA_DIR)/embedding/config/gre-win-supp.tmp
	$(PERL) $(topsrcdir)/xpinstall/packager/pkgcp.pl -s $(DIST)/bin -d $(DIST) --f $(srcdir)/$(GREMANIFEST_SUPP) -o $(_PLATFORM) -v
	$(NSINSTALL) -t $(srcdir)/installed-chrome.txt $(DIST)/gre_app_support/chrome
	test -d $(DIST)/gre_app_support/plugins || mkdir $(DIST)/gre_app_support/plugins
	test -d $(DIST)/gre_app_support/components || mkdir $(DIST)/gre_app_support/components

gre::
	$(MAKE) embed_chrome
	$(MAKE) gre_copy

endif # WINNT
