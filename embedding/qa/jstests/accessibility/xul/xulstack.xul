<?xml version="1.0"?>
<!-- Descrpt: Test nsIAccessible Interface attributes and methods
     for XUL STACK Node
     Author: dsirnapalli@netscape.com
     Created:05.30.02
     Last Updated:05.30.02.

   - ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Mozilla Communicator Test Cases.
   -
   - The Initial Developer of the Original Code is
   - Netscape Communications Corp.
   - Portions created by the Initial Developer are Copyright (C) 1999
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<window
  id="stack-window"
  title="XUL Stack"
  orient="vertical"
  xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <html:script src="http://www.mozilla.org/quality/embed/jstests/accessibility/jslib/accesslib.js"> </html:script>
  <html:script src="http://www.mozilla.org/quality/embed/jstests/accessibility/jslib/bridge.js"> </html:script>

  <html:script>
  <![CDATA[

  function getDomNodeStack()
  {
    try{
      netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserRead");
      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
  
      var node = document.getElementsByTagName("stack").item(0);
      return node;
    }
    catch(e){
      alert("Exception: " + e);
    }
  }  

  function executeTestCase()
  {
    var domNode = getDomNodeStack();
    accNode = getAccessibleNode(domNode);
    if(accNode == "Exception")
    {            
      temp = "<table border cols=2 width='70%'>";
      temp += "<tr>";
      temp += "<td> The Node you selected is not an Accessible Node </td>";
      temp += "<td> PASS </td>";
      temp += "</tr>";
      temp += "</table>";
      res = res + temp;
    }    
    WriteResults(res);    
  }
  
  ]]>
  </html:script>

  <description>
    <html:b> Testing XUL Stack for Accessibility.. </html:b>
  </description>
  <!-- The stack element is a simple box. It works like any other box but has the
  special property that its children are laid out all on top of each other.
  The first child of the stack is drawn at the bottom, the second child is drawn
  next and so on. Any number of elements may be stacked up in a stack.
  The size of the stack is determined by its largest child, but you can use the
  CSS properties width, height, min-width and other related properties on both the
  stack and its children. Note that events such as mouse clicks and keypresses are
  passed to the element on the top of the stack, that is,the last element in the stack -->
  <stack>
    <button label="Goblins" left="5" top="5"/>
    <button label="Trolls" left="60" top="20"/>
    <button label="Vampires" left="10" top="60"/>    
  </stack>  
    
  <html:script>
  <![CDATA[
    res = "<b><u> Results for XUL Stack Node:</u></b><br><br>";

    setTimeout("executeTestCase();", 2000);
  ]]>
  </html:script>  
</window>