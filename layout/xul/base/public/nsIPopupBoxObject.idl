/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   David W. Hyatt <hyatt@netscape.com>
 *   Ben Goodger <ben@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIBoxObject.idl"

interface nsIDOMElement;


[scriptable, uuid(116ffbea-336d-4ff1-a978-7335f54d11da)]
interface nsIPopupBoxObject : nsISupports
{
  void showPopup(in nsIDOMElement srcContent, in nsIDOMElement popupContent,
                 in long xpos, in long ypos,
                 in wstring popupType, in wstring anchorAlignment, 
                 in wstring popupAlignment);
  void hidePopup();


  /** 
   * Allow the popup to automatically position itself.
   */
  attribute boolean autoPosition;

  /**
   * Allow the popup to eat all key events
   */
  void enableKeyboardNavigator(in boolean enableKeyboardNavigator);

  /** 
   * Enable automatic popup dismissal. This only has effect when called
   * on an open popup.
   */
  void enableRollup(in boolean enableRollup);

  /**
   * Control whether the event that caused the popup to be automatically
   * dismissed ("rolled up") should be consumed, or dispatched as a
   * normal event.  This should be set immediately before calling showPopup()
   * if non-default behavior is desired.
   */
  const PRUint32 ROLLUP_DEFAULT = 0;   /* widget/platform default */
  const PRUint32 ROLLUP_CONSUME = 1;   /* consume the rollup event */
  const PRUint32 ROLLUP_NO_CONSUME = 2; /* don't consume the rollup event */
  void setConsumeRollupEvent(in PRUint32 consume);

  /** 
   * Size the popup to the given dimensions
   */
  void sizeTo(in long width, in long height);

  /**
   * Move the popup to a point on screen
   */
  void moveTo(in long left, in long top);

};

%{C++
nsresult
NS_NewPopupBoxObject(nsIBoxObject** aResult);

%}
