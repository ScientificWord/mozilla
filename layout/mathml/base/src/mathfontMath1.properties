# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Mozilla MathML Project.
#
# The Initial Developer of the Original Code is
# The University Of Queensland.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Roger B. Sidje <rbs@maths.uq.edu.au>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

#  LOCALIZATION NOTE: FILE
#  Do not translate anything in this file

# This file contains the list of all stretchy MathML chars that
# can be rendered with the indicated mathfont.
mathfont = Math1

#        [ T/L |  M  | B/R |  G  | size0 ... size{N-1} ]
\u0028 = \uF8FF\uFFFD\uF8FF\uF8FF\u0028 # (
\u0029 = \uF8FF\uFFFD\uF8FF\uF8FF\u0029 # )
\u005B = \uF8FF\uFFFD\uF8FF\uF8FF\u005B # [
\u005D = \uF8FF\uFFFD\uF8FF\uF8FF\u005D # ]
\u007B = \uF8FF\uF8FF\uF8FF\uF8FF\u007B # {
\u007D = \uF8FF\uF8FF\uF8FF\uF8FF\u007D # }
\u007C = \uFFFD\uFFFD\uFFFD\u007C\u007C # |
\u2190 = \u2190\uFFFD\uFFFD\uF8FF\u2190 # LeftArrow, larr, leftarrow
\u2191 = \u2191\uFFFD\uFFFD\uF8FF\u2191 # UpArrow, uarr, uparrow
\u2192 = \uFFFD\uFFFD\u2192\uF8FF\u2192 # RightArrow, rarr, rightarrow
\u2193 = \uFFFD\uFFFD\u2193\uF8FF\u2193 # DownArrow, darr, downarrow
\u2194 = \u2190\uFFFD\u2192\uF8FF\u2194 # LeftRightArrow, harr, leftrightarrow
\u2195 = \u2193\uFFFD\u2191\uF8FF\u2195 # UpDownArrow, updownarrow, varr
\u21D0 = \u21D0\uFFFD\uFFFD\uF8FF\u21D0 # DoubleLeftArrow, Leftarrow, lArr
\u21D1 = \u21D1\uFFFD\uFFFD\uF8FF\u21D1 # DoubleUpArrow, Uparrow, uArr
\u21D2 = \uFFFD\uFFFD\u21D2\uF8FF\u21D2 # DoubleRightArrow, Implies, Rightarrow, rArr
\u21D3 = \uFFFD\uFFFD\u21D3\uF8FF\u21D3 # DoubleDownArrow, Downarrow, dArr
\u21D4 = \u21D0\uFFFD\u21D2\uF8FF\u21D4 # DoubleLeftRightArrow, Leftrightarrow, hArr, iff
\u21D5 = \u21D1\uFFFD\u21D3\uF8FF\u21D5 # DoubleUpDownArrow, Updownarrow, vArr
\u222B = \u2320\uFFFD\u2321\uF8FF\u222B # Integral, int
\u230A = \uFFFD\uFFFD\u005B.B\u005B.G\u230A # LeftFloor, lfloor
\u230B = \uFFFD\uFFFD\u005D.B\u005D.G\u230B # RightFloor, rfloor
