/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIFactory.idl"
#include "nsICmdLineHandler.idl"

[ptr] native charArray(char*);
[scriptable, uuid(e34783f4-ac08-11d2-8d19-00805fc2500c)]
interface nsICmdLineService : nsISupports
{
    /**
     * initialize
     * Used to pass the original argv/argc from main()
     * Warning: This will hold a reference to the original argv
     * passed into Initialze();
     */
    [noscript] void initialize(in long argc, out string argv);

    /**
     * getCmdLineValue
     * returns the 2nd parameter, if any, to the parameter passed in
     * For example, getCmdLineValue "-edit" will return any url that
     * came after the -edit parameter
     */
    string getCmdLineValue(in string argv);

    /**
     * URLToLoad
     * The URL to load as passed to the command line
     */
    readonly attribute string URLToLoad;

    /**
     * programName
     *
     */
    readonly attribute string programName;

    /**
     * argc
     * The number of parameters passed in on the command line
     */
    readonly attribute long argc;

    /**
     * argv
     * returns a direct reference to the parameter array passed in
     * to initialize() - do NOT dereference this array!
     */
    [noscript] readonly attribute charArray argv;

    /**
     * Get the command line handler for the given parameter
     * @param param - can be any parameter, with or without leading
     *                "-" such as "-mail" or "edit" - Pass in a null
     *                string if you want the "default" handler
     */
    nsICmdLineHandler getHandlerForParam(in string param);
};
