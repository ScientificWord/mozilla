/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Dan Mosedale <dmose@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIAutoCompleteResults.idl"


typedef long AutoCompleteStatus;

[scriptable, uuid(4BA0A180-097C-11d4-A449-CD1A8B47ED7C)]
interface nsIAutoCompleteStatus {
    const long failed           = -1;
    const long noMatch          = 0;
    const long matchFound       = 1;
    const long ignored          = 2;

    // like failed, in that no successful matches were found, however,
    // results should be displayed anyway, because they contain info about  
    // the failure in question
    //
    const long failureItems     = 3;    
};

[scriptable, uuid(4BA0A181-097C-11d4-A449-CD1A8B47ED7C)]
interface nsIAutoCompleteListener : nsISupports {

    /* onStatus is called by the autocomplete session during the seach */
    void onStatus(in wstring statusText);

    /* onAutoComplete is called by the autocomplete session when the search is done or over */
    void onAutoComplete(in nsIAutoCompleteResults result, in AutoCompleteStatus status);
    
    /* private param used by the autocomplete widget */
    attribute nsISupports param;
};
