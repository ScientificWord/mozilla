#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= necko
LIBRARY_NAME	= necko
EXPORT_LIBRARY = 1
IS_COMPONENT	= 1
MODULE_NAME	= necko
GRE_MODULE	= 1
LIBXUL_LIBRARY = 1

PACKAGE_FILE = necko.pkg

ifdef ENABLE_TESTS
PACKAGE_FILE += necko-tests.pkg
endif

REQUIRES	= xpcom \
		  string \
		  nkcache \
		  pref \
		  mimetype \
		  locale \
		  intl \
		  uconv \
		  unicharutil \
		  $(ZLIB_REQUIRES) \
		  $(NULL)

CPPSRCS		= nsNetModule.cpp
EXPORTS		= nsNetCID.h

SHARED_LIBRARY_LIBS = \
		../base/src/$(LIB_PREFIX)neckobase_s.$(LIB_SUFFIX) \
		../dns/src/$(LIB_PREFIX)neckodns_s.$(LIB_SUFFIX) \
		../socket/base/$(LIB_PREFIX)neckosocket_s.$(LIB_SUFFIX) \
		../streamconv/src/$(LIB_PREFIX)nkconv_s.$(LIB_SUFFIX) \
		../streamconv/converters/$(LIB_PREFIX)nkcnvts_s.$(LIB_SUFFIX) \
		../mime/src/$(LIB_PREFIX)nkmime_s.$(LIB_SUFFIX) \
		../cache/src/$(LIB_PREFIX)nkcache_s.$(LIB_SUFFIX) \
		../protocol/about/src/$(LIB_PREFIX)nkabout_s.$(LIB_SUFFIX) \
		$(foreach d,$(filter-out about,$(NECKO_PROTOCOLS)), \
			../protocol/$(d)/src/$(LIB_PREFIX)nk$(d)_s.$(LIB_SUFFIX)) \
		$(NULL)

ifeq ($(OS_ARCH),WINNT)
    SHARED_LIBRARY_LIBS += \
        ../system/win32/$(LIB_PREFIX)neckosystem_s.$(LIB_SUFFIX)
endif

LOCAL_INCLUDES	= \
		-I$(srcdir)/../base/src \
		-I$(srcdir)/../dns/src \
		-I$(srcdir)/../socket/base \
		-I$(srcdir)/../streamconv/src \
		-I$(srcdir)/../streamconv/converters \
		-I$(srcdir)/../mime/src \
		-I$(srcdir)/../cache/src \
		-I$(srcdir)/../protocol/about/src \
		$(foreach d,$(filter-out about,$(NECKO_PROTOCOLS)), \
			-I$(srcdir)/../protocol/$(d)/src) \
		$(NULL)

ifeq ($(OS_ARCH),WINNT)
    LOCAL_INCLUDES += -I$(srcdir)/../system/win32
endif

ifdef NECKO_COOKIES
SHARED_LIBRARY_LIBS += \
		../cookie/src/$(LIB_PREFIX)neckocookie_s.$(LIB_SUFFIX) \
                $(NULL)
LOCAL_INCLUDES	+= -I$(srcdir)/../cookie/src
endif

EXTRA_DSO_LDOPTS = \
		$(LIBS_DIR) \
		$(EXTRA_DSO_LIBS) \
		$(MOZ_UNICHARUTIL_LIBS) \
		$(MOZ_COMPONENT_LIBS) \
		$(ZLIB_LIBS) \
		$(NULL)

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
EXTRA_DSO_LDOPTS += \
		$(TK_LIBS) \
	$(NULL)
endif

ifeq ($(OS_ARCH),AIX)
EXTRA_DSO_LDOPTS += -lodm -lcfg
endif

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH),WINNT)
OS_LIBS	+= $(call EXPAND_LIBNAME,ole32 shell32)
endif

DEFINES += -DIMPL_NS_NET
