# vim:set ts=8 sw=8 sts=8 noet:
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= nkcache
LIBRARY_NAME	= nkcache_s
FORCE_STATIC_LIB = 1
LIBXUL_LIBRARY  = 1

REQUIRES	= xpcom \
		  string \
		  necko \
		  pref \
		  $(NULL)

EXPORTS		= \
		nsCacheService.h \
		$(NULL)

CPPSRCS		= \
	nsCache.cpp \
	nsCacheEntry.cpp \
	nsCacheEntryDescriptor.cpp \
	nsCacheMetaData.cpp \
	nsCacheService.cpp \
	nsCacheSession.cpp \
	nsMemoryCacheDevice.cpp \
	$(NULL)

ifdef NECKO_DISK_CACHE
ifdef NECKO_DISK_CACHE_SQL
DEFINES		+= -DNECKO_DISK_CACHE_SQL
REQUIRES	+= storage
CPPSRCS += \
	nsDiskCacheDeviceSQL.cpp \
	$(NULL)
else
CPPSRCS += \
	nsDiskCacheBinding.cpp \
	nsDiskCacheBlockFile.cpp \
	nsDiskCacheDevice.cpp \
	nsDiskCacheEntry.cpp \
	nsDiskCacheMap.cpp \
	nsDiskCacheStreams.cpp \
	nsDeleteDir.cpp \
	$(NULL)
endif
endif

include $(topsrcdir)/config/config.mk


include $(topsrcdir)/config/rules.mk

DEFINES += -DIMPL_NS_NET
