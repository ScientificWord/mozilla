/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsICookie.idl"

interface nsIURI;
interface nsIHttpChannel;

[scriptable,uuid(F5A34F50-1F39-11d6-A627-0010A401EB10)]
interface nsICookieConsent : nsISupports
{
  /**
   * getConsent
   *
   * gives a decision on what should be done with a cookie, based on a site's
   * p3p policy and the user's preferences. the policy for the given URI and
   * channel is also returned.
   *
   * @param uri
   *        the URI to find the policy for
   * @param httpChannel
   *        the channel to extract the p3p headers from
   * @param isForeign
   *        true if the cookie originates from a third-party site. this is used
   *        to decide the cookie status based on user preferences.
   * @param policy
   *        the policy for the given URI, or nsICookie::POLICY_UNKNOWN if one
   *        cannot be found. valid values are defined in nsICookie.idl.
   *
   * @return nsCookieStatus value. valid values are defined in nsICookie.idl.
   */
  nsCookieStatus getConsent(in  nsIURI         uri,
                            in  nsIHttpChannel httpChannel,
                            in  boolean        isForeign,
                            out nsCookiePolicy policy);
};  

%{C++
#define NS_COOKIECONSENT_CONTRACTID "@mozilla.org/cookie-consent;1"
%}
