/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Don Cone <dcone@netscape.com>
 *   Jessica Blanco <jblanco@us.ibm.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIPrintSettings.idl"

%{ C++
struct nsFont;
%}

interface nsIStringEnumerator;

/**
 * Native types
 */
[ref] native nsNativeFontRef(nsFont);

/**
 * Print options interface
 *
 * Do not attempt to freeze this API - it still needs lots of work. Consult
 * John Keiser <jkeiser@netscape.com> and Roland Mainz
 * <roland.mainz@informatik.med.uni-giessen.de> for futher details.
 */
[scriptable, uuid(92597c2b-109b-40bb-8f93-9b9acfa31de8)]

interface nsIPrintOptions : nsISupports
{
  /**
   * Show Native Print Options dialog, this may not be supported on all platforms
   */
  void ShowPrintSetupDialog(in nsIPrintSettings aThePrintSettings);

  /**
   * Creates a new PrintSettnigs Object
   * and initializes it from prefs
   */
  nsIPrintSettings CreatePrintSettings();

  /**
   * Get a prefixed integer pref 
   */
  PRInt32 getPrinterPrefInt(in nsIPrintSettings aPrintSettings, in wstring
                            aPrefName);

  /**
   * display Printer Job Properties dialog
   */
  void displayJobProperties (in wstring aPrinter, in nsIPrintSettings
                             aPrintSettings, out boolean aDisplayed);

  /**
   * Native data constants
   */
  const short kNativeDataPrintRecord        = 0;

  [noscript] voidPtr GetNativeData(in short aDataType);
};

[scriptable, uuid(5e738fff-404c-4c94-9189-e8f2cce93e94)]

interface nsIPrinterEnumerator : nsISupports
{
  /**
   * The name of the system default printer. This name should also be
   * present in printerNameList below. This is not necessarily gecko's
   * default printer; see nsIPrintSettingsService.defaultPrinterName
   * for that.
   */
  readonly attribute wstring defaultPrinterName;

  /**
   * Initializes certain settings from the native printer into the PrintSettings
   * These settings include, but are not limited to:
   *   Page Orientation
   *   Page Size
   *   Number of Copies
   */
  void initPrintSettingsFromPrinter(in wstring aPrinterName, in nsIPrintSettings aPrintSettings);

  /**
   * The list of printer names
   */
  readonly attribute nsIStringEnumerator printerNameList;

  /*  takes printer selected and will display job properties dlg for that printer
   *  returns true if dialog displays
   */
  void displayPropertiesDlg(in wstring aPrinter, in nsIPrintSettings aPrintSettings);

};

