/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corp.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Mike Pinkerton
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIMenuBar;
interface nsMacWindow;
interface nsMacEventDispatchHandler;

//
// nsPIWidgetMac
//
// A private interface (unfrozen, private to the widget implementation) that
// gives us access to some extra features on a widget/window.
//
[scriptable, uuid(5DE488F0-C9B1-427C-938F-D3D13DEFF987)]
interface nsPIWidgetMac : nsISupports
{
    // Like OS ::BringToFront, but constrains the window to its z-level
  void ComeToFront ( ) ;
  
    // Recomputes the zoomed window size taking things such as window chrome,
    // dock position, menubar, and finder icons into account
  void CalculateAndSetZoomedSize ( );

    // Obtain the menubar for a window
  nsIMenuBar GetMenuBar ( );

    // Find the displayed child sheet (if aShown) or a child sheet that
    // wants to be displayed (if !aShown)
  nsMacWindow GetChildSheet ( in boolean aShown );

    // True if window is a sheet
  readonly attribute boolean isSheet;

    // The event dispatch handler associated with a window
  readonly attribute nsMacEventDispatchHandler eventDispatchHandler;
  
}; // nsPIWidgetMac

