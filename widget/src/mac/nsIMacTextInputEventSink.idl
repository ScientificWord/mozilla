/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

/* THIS IS A PUBLIC EMBEDDING API */


native OSStatus(OSStatus);

/**
 * The nsIMacTextInputEventSink is implemented internally by Gecko as the conduit
 * through which Macintosh Text Service Manager events travel into Gecko. Gecko stores the
 * nsIMacTextEventSink as the Refcon of the text input event
 * 
 * TO DO:
 * 1. We need to figure out how to pass in optional parameter
 * 2. We currently only defined the required in parameters and needed optional in parameters in
 *    the interface, once we decide to do 1, we should add them. see the comment for each method
 *    for details
 * 3. We need to figure out how to return optional return value
 * 4. We currently only defined the required return value in the interface, once we decide to do 3,
 *    we should add them. see the comment for each method
 * 5. We need to define method to pass in kEventTextInputShowhideBottomWindow and
 *                                        kEventTextInputGetSelectedText
 *
 * @status UNDER_REVIEW
 */
[uuid(87178C19-801F-4A21-A2F7-F453795C3F60)]
interface nsIMacTextInputEventSink : nsISupports
{
  /**
   * Entry point for kEventTextInputUpdateActiveInputArea events into Gecko for Unicode Document
   * (need more work later to pass in optional in parameter updateRng, clauseRng, pinRng)
   */   
  OSStatus HandleUpdateActiveInputArea(in AString text, in short script, in short language, 
                                       in long fixLen, in voidPtr hiliteRng);

  /**
   * Entry point for kEventTextInputUnicodeForKeyEvent events into Gecko for Unicode Document
   *
   */   

  OSStatus HandleUnicodeForKeyEvent ( in AString text, 
                                      in short script, in short language,
                                      in voidPtr keyboardEvent) ;
 
  /**
   * Entry point for kEventTextInputOffsetToPos events into Gecko for Unicode Document
   * (need more work later to return optional out parameter point, font, fmfont, pointSize, lineHeight, lineAscent)
   */   

  OSStatus HandleOffsetToPos ( in long offset, out short pointX, out short pointY);
  
  /**
   * Entry point for kEventTextInputPosToOffset events into Gecko for Unicode Document
   * (need more work later to pass in optional parameter dragging,
   *                   and to return optional out parameter leadingEdge)
   */   

  OSStatus HandlePosToOffset ( in short currentPointX, in short currentPointY, out long offset, out short regionClass);

  /**
   * Entry point for kEventTextInputGetSelectedText events into Gecko for Unicode Document
   */   

  OSStatus HandleGetSelectedText ( out AString selectedText);
  
};
