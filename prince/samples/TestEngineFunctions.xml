<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
"http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
xmlns:mml="http://www.w3.org/1998/Math/MathML">
<head>
<link href="TestEngineFunctions.css" rel="stylesheet" type="text/css"/>
<meta name="CREATED" content="Wednesday, January 28, 2004 20:22:52"/>
<meta name="REVISED" content="Friday, November 12, 2004 15:46:19"/>
<meta name="GENERATOR" content="Scientific Word"/>
<title>Test Engine Functions</title>
</head>
<body >
<p>
   Testing msiclass="enginefunction". These only work in MuPAD. Because of lack
   of : in SWP mathnames and real markup, the final file needs to be hand edited.
</p>
<h1 class="section">Some expressions to evaluate</h1>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">ithprime</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mn>100</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">ithprime</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mn>101</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">numlib::contfrac</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mfrac>
           <mml:mn>57</mml:mn>
           <mml:mn>55</mml:mn>
         </mml:mfrac>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">numlib::contfrac</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mi>&pi;</mml:mi>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">numlib::contfrac</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mrow>
           <mml:mi>&pi;</mml:mi>
           <mml:mo form="infix">,</mml:mo>
           <mml:mn>8</mml:mn>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">numlib::divisors</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mn>12</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">numlib::divisors</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mn>12345678</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">groebner::gbasis</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">[</mml:mo>
           <mml:mrow>
             <mml:mrow>
               <mml:msup>
                 <mml:mi>x</mml:mi>
                 <mml:mn>2</mml:mn>
               </mml:msup>
               <mml:mo form="infix">&minus;</mml:mo>
               <mml:msup>
                 <mml:mi>y</mml:mi>
                 <mml:mn>2</mml:mn>
               </mml:msup>
             </mml:mrow>
             <mml:mo form="infix">,</mml:mo>
             <mml:mrow>
               <mml:msup>
                 <mml:mi>x</mml:mi>
                 <mml:mn>2</mml:mn>
               </mml:msup>
               <mml:mo form="infix">+</mml:mo>
               <mml:mi>y</mml:mi>
             </mml:mrow>
           </mml:mrow>
           <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">]</mml:mo>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">groebner::gbasis</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="false">(</mml:mo>
         <mml:mrow>
           <mml:mrow>
             <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">[</mml:mo>
             <mml:mrow>
               <mml:mrow>
                 <mml:msup>
                   <mml:mi>x</mml:mi>
                   <mml:mn>2</mml:mn>
                 </mml:msup>
                 <mml:mo form="infix">&minus;</mml:mo>
                 <mml:msup>
                   <mml:mi>y</mml:mi>
                   <mml:mn>2</mml:mn>
                 </mml:msup>
               </mml:mrow>
               <mml:mo form="infix">,</mml:mo>
               <mml:mrow>
                 <mml:msup>
                   <mml:mi>x</mml:mi>
                   <mml:mn>2</mml:mn>
                 </mml:msup>
                 <mml:mo form="infix">+</mml:mo>
                 <mml:mi>y</mml:mi>
               </mml:mrow>
             </mml:mrow>
             <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">]</mml:mo>
           </mml:mrow>
           <mml:mo form="infix">,</mml:mo>
           <mml:mi mathcolor="gray" msiclass="enginefunction">LexOrder</mml:mi>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="false">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<h1 class="section">Some expressions to evaluate</h1>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">combinat::partitions::list</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mn>4</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">combinat::ribbons</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">[</mml:mo>
           <mml:mrow>
             <mml:mrow>
               <mml:mo form="prefix" fence="true" stretchy="false">[</mml:mo>
               <mml:mrow>
                 <mml:mn>2</mml:mn>
                 <mml:mo form="infix">,</mml:mo>
                 <mml:mn>3</mml:mn>
               </mml:mrow>
               <mml:mo form="postfix" fence="true" stretchy="false">]</mml:mo>
             </mml:mrow>
             <mml:mo form="infix">,</mml:mo>
             <mml:mrow>
               <mml:mo form="prefix" fence="true" stretchy="false">[</mml:mo>
               <mml:mrow>
                 <mml:mn>1</mml:mn>
                 <mml:mo form="infix">,</mml:mo>
                 <mml:mn>4</mml:mn>
               </mml:mrow>
               <mml:mo form="postfix" fence="true" stretchy="false">]</mml:mo>
             </mml:mrow>
           </mml:mrow>
           <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">]</mml:mo>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">combinat::tableaux::list</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="false">[</mml:mo>
           <mml:mrow>
             <mml:mn>3</mml:mn>
             <mml:mo form="infix">,</mml:mo>
             <mml:mn>2</mml:mn>
           </mml:mrow>
           <mml:mo form="postfix" fence="true" stretchy="false">]</mml:mo>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">combinat::trees::random</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mn>19</mml:mn>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<h1 class="section">Some expressions to evaluate</h1>
<p>
   Define
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi>g</mml:mi>
       <mml:mo form="infix">:=</mml:mo>
       <mml:mrow>
         <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::createRandomGraph</mml:mi>
         <mml:mo>&ApplyFunction;</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
           <mml:mrow>
             <mml:mn>5</mml:mn>
             <mml:mo form="infix">,</mml:mo>
             <mml:mn>12</mml:mn>
           </mml:mrow>
           <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
         </mml:mrow>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::printGraphInformation</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mi>g</mml:mi>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::maxFlow</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mrow>
           <mml:mi>g</mml:mi>
           <mml:mo form="infix">,</mml:mo>
           <mml:mrow>
             <mml:mo form="prefix" fence="true" stretchy="false">[</mml:mo>
             <mml:mn>1</mml:mn>
             <mml:mo form="postfix" fence="true" stretchy="false">]</mml:mo>
           </mml:mrow>
           <mml:mo form="infix">,</mml:mo>
           <mml:mrow>
             <mml:mo form="prefix" fence="true" stretchy="false">[</mml:mo>
             <mml:mn>5</mml:mn>
             <mml:mo form="postfix" fence="true" stretchy="false">]</mml:mo>
           </mml:mrow>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   Define
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi>s</mml:mi>
       <mml:mo form="infix">:=</mml:mo>
       <mml:mrow>
         <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::minimumSpanningTree</mml:mi>
         <mml:mo>&ApplyFunction;</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
           <mml:mi>g</mml:mi>
           <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
         </mml:mrow>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::printGraphInformation</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mi>s</mml:mi>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   Define
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi>u</mml:mi>
       <mml:mo form="infix">:=</mml:mo>
       <mml:mrow>
         <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::createRandomGraph</mml:mi>
         <mml:mo>&ApplyFunction;</mml:mo>
         <mml:mrow>
           <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
           <mml:mrow>
             <mml:mn>5</mml:mn>
             <mml:mo form="infix">,</mml:mo>
             <mml:mn>12</mml:mn>
             <mml:mo form="infix">,</mml:mo>
             <mml:mi mathcolor="gray" msiclass="enginefunction">Unidirected</mml:mi>
           </mml:mrow>
           <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
         </mml:mrow>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
<p>
   <mml:math display="inline">
     <mml:mrow>
       <mml:mi mathcolor="gray" msiclass="enginefunction">Graph::chromaticPolynomial</mml:mi>
       <mml:mo>&ApplyFunction;</mml:mo>
       <mml:mrow>
         <mml:mo form="prefix" fence="true" stretchy="true" symmetric="true">(</mml:mo>
         <mml:mrow>
           <mml:mi>u</mml:mi>
           <mml:mo form="infix">,</mml:mo>
           <mml:mi>x</mml:mi>
         </mml:mrow>
         <mml:mo form="postfix" fence="true" stretchy="true" symmetric="true">)</mml:mo>
       </mml:mrow>
     </mml:mrow>
   </mml:math>
</p>
</body>

</html>
