/* amsart.scss */


/************************/
/* Division header tags */
/************************/

@import "division_colors";
@import "division_headers";
@import "theorem_like";

$div_name: 'Part';
$counter_data: (
  counter_list: (
    (part),
  ),
  end: '. '
);
$ctr_set_reset: (inc: part);

part {
  display: inline;
  @include cnt-set-resets($ctr-set-reset);
  @include div_title_style {
    margin: 30pt 0 0 0;
    display: block;
    font-weight: bold;
    font-size: x-large;
    color: $part-title-color;
    @include counters($counter_data, 'Part ') {
      display: inline;
      font-size: x-large;
      font-weight: bold;
      color: $part-title-color;
    }
  }
}


/*Skip chapter for article styles*/

$div_name: 'Section';
$counter_data:  (
  counter_list: (
    (section),
  ),
  end: '.  '
);
$ctr_set_reset: (inc: section, reset: subsection);

section {
  display: block;
  @include cnt-set-resets($ctr-set-reset);
  @include handle_nonum;
  @include handle_open_closed((color:gray));
  @include default_title($div_name);
  @include div_title_style {
    display: block;
    text-align: center;
    font-weight: normal;
    font-size: large;
	font-variant: small-caps;
    color: $section-title-color;
    @include counters($counter_data) {
      display: inline;
      padding-right: 2pt;
      text-align: center;
    };
  }
}


$div_name: Subsection;
$counter_data:  (
  counter_list: (
    (section subsection)
  ),
  end: '.  '
);
$ctr_set_reset: (inc: subsection, reset: (subsubsection));

subsection {
  display: block;
  @include cnt-set-resets($ctr-set-reset);
  @include handle_nonum;
  @include handle_open_closed((color: blue));
  @include default_title($div_name);
  @include div_title_style {
    display: block;
    margin:10pt 10pt 0 0;
    font-size: large;
    font-weight: bold;
    color: $subsection-title-color;
    @include counters($counter_data);
  }
}


$div_name: Subsubsection;
$counter_data:  (
  counter_list: (
    (section,subsection,subsubsection)
  ),
  end: '.  '
);
$ctr_set_reset: (inc: subsubsection, reset: (paragraph));
subsubsection {
  display: block;
  @include cnt-set-resets($ctr-set-reset);
  @include handle_nonum;
  @include default_title($div_name);
  @include div_title_style {
    display: block;
    margin:10pt 10pt 0 0;
    font-size: medium;
    font-weight: bold;
    font-style: italic;
    color: $subsubsection-title-color;
    @include counters($counter_data);
  }
}

$div_name: '';
$ctr_set_reset: (inc: paragraph);
paragraph {
  display: block;
  @include cnt-set-resets($ctr-set-reset);
  @include handle_nonum;
  @include div_title_style {
    font-size: medium;
    font-weight: normal;
    font-style: italic;
    color: $paragraph-title-color;
  }
}

$div_name: '';
$counter_data:  (
  counter_list: (
  ),
  end: ''
);
$ctr_set_reset: (inc: subparagraph);
subparagraph {
  display: block;
  @include cnt-set-resets($ctr-set-reset);
  @include div_title_style {
    display: inline-block;
    margin:0 0 0 0;
    font-weight: normal;
    font-size: medium;
    color: $subparagraph-title-color;
    @include counters($counter_data) {
      display: inline-block;
	  padding-right: 12pt;
    };
  }
}

/*************************/
/* Front matter elements */
/*************************/

title {
  font-size: x-large;
  display: block;
  color: $title-color;
  margin-top: 12pt;
  text-align: center;
}

title > short {
   display: inline;
   padding: 0 0 0 20pt;
   color: #E1EEFD;
}

body[showshort='true'] shortTitle {
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] shortTitle:before {
  content: '[';
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] shortTitle:after {
  content: '] ';
  display: inline;
  color: rgb(128, 181, 247);
}

author {
  text-align: center;
  font-weight: normal;
  color: $author-color;
  display: block;
  padding-top: 10pt;
}

authorid {
  display: none;
}

body[showshort='true'] authorid {
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] authorid:before {
  content: '[';
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] authorid:after {
  content: '] ';
  display: inline;
  color: rgb(128, 181, 247);
}

address {
  display: block;
  color: $address-color;
}

curraddr {
  text-align: center;
  display: block;
  color: $address-color;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-curraddr");
  -moz-user-select: text;
}

email {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $address-color;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-email");
  -moz-user-select: text;
}

urladdr {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $address-color;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-urladdr");
  -moz-user-select: text;
}

thanks {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $address-color;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-thanks");
  -moz-user-select: text;
}

date {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $date-color;
  padding-top: 2pt;
}

translator {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $date-color;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-translator");
  -moz-user-select: text;
}

subjclass {
  text-align: center;
  font-weight: normal;
  color: $date-color;
  display: block;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-subjclass");
  -moz-user-select: text;
}

subjclassyear {
  display: none;
}

body[showshort='true'] subjclassyear {
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] subjclassyear:before {
  content: '[';
  display: inline;
  color: rgb(128, 181, 247);
}

body[showshort='true'] subjclassyear:after {
  content: '] ';
  display: inline;
  color: rgb(128, 181, 247);
}

keywords {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $date-color;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-keywords");
  -moz-user-select: text;
}

dedicatory {
  text-align: center;
  font-weight: normal;
  display: block;
  color: $date-color;
  padding-top: 2pt;
  -moz-binding: url("chrome://prince/content/bindings/amscls.xml#fmtag-dedicatory");
  -moz-user-select: text;
}

abstract {
  display: block;
  margin-top: 10pt;
  margin-left: 0pt;
  margin-right: 0pt;
  margin-bottom: 10pt;
  padding-left: 15pt;
  padding-right: 15pt;
  padding-top: 15pt;
  padding-bottom: 15pt;
  font-size: small;
  border: thin solid black;
  background-color: $abstract-background-color;
  -moz-border-radius: 5px;
}

abstract:before {
  content: "Abstract";
  display: block;
  text-align: center;
  font-size: 100%; 
  font-weight: bold;
  color: $abstract-title-color;
  -moz-user-select: -moz-none;
}

/* Hide buttons from print */
@media print {

  address>button[class=frontmattertag] {
    display: none;
  }

  curraddr>button[class=frontmattertag] {
    display: none;
  }

  email>button[class=frontmattertag] {
    display: none;
  }

  urladdr>button[class=frontmattertag] {
    display: none;
  }

  thanks>button[class=frontmattertag] {
    display: none;
  }

  translator>button[class=frontmattertag] {
    display: none;
  }

  subjclass>button[class=frontmattertag] {
    display: none;
  }

  keywords>button[class=frontmattertag] {
    display: none;
  }

  dedicatory>button[class=frontmattertag] {
    display: none;
  }

}

/**********************/
/* Main text elements */
/**********************/

p {
  display: block;
  margin: 10pt 10pt 5pt 5pt;
}

math {
  direction: ltr;
}

bodyText {
  display: block;
  margin: 10pt 0 5pt 0;
}

rtlBodyText {
  display: block;
  direction: rtl;
  unicode-bidi: bidi-override;
  margin: 10pt 10pt 5pt 5pt;
}

bodyMath {
  display: block;
  margin: 0 10pt 0 5pt;
  color: $bodyMath-color;
}

/****************/
/* Environments */
/****************/

shortQuote {
  display: block;
  margin-left: 20pt;
  margin-right: 20pt;
}

longQuotation {
  display: block;
  margin-left: 20pt;
  margin-right: 20pt;
}

centeredEnv, centered {
  display: block;
  margin: 10pt 10pt 5pt 5pt;
  text-align: center;
}

flushright {
  display: block;
  margin: 10pt 10pt 5pt 5pt;
  text-align: right;
}

flushleft {
  display: block;
  margin: 10pt 10pt 5pt 5pt;
  text-align: left;
}

emphasized {
  font-style: italic;
  color: rgb(9,62,125)
}

emphasized .inlineMath {
  color: rgb(255,0,255)
}

roman {
  font-family: Times New Roman;
  color: rgb(0,0,255)
}

calligraphic {
  font-family: monotype corsiva;
  color: rgb(0,0,255)
}

bold {
  font-weight: 700
}

italics {
  font-style: italic
}

slanted {
  font-style: italic;
  font-weight: 400;
  color: rgb(9,62,125)
}

sansSerif {
  font-family: Arial;
  font-weight: 400;
  color: rgb(9,62,125)
}

smallCaps {
  font-variant: small-caps;
  color: rgb(0,0,0)
}

typewriter {
  font-family: Courier New;
  font-weight: 700
}

tiny {
  font-size: 50%
}

scriptsize {
  font-size: 67%
}

footnotesize {
  font-size: 75%
}

small {
  font-size: 83%
}

normalsize {
  font-size: 100%
}

large {
  font-size: 117%
}

Large {
  font-size: 133%
}

LARGE {
  font-size: 150%
}

huge {
  font-size: 167%
}

Huge {
  font-size: 183%
}


/*****************************/
/* Theorem-like environments */
/*****************************/

// Each theorem-like object is numbered independently.

@import "_theorem_like";

$env-list: Acknowledgement Acknowledgment Algorithm Assertion Assumption Axiom Case Claim Conclusion Condition
  Conjecture Convention Corollary Criterion Definition Example Exercise Hypothesis Lemma Notation "Note[texnote]"
  Observation Problem Property Proposition Question Remark Solution Summary Theorem;

@each $name in $env-list {
  $lc_name: null; // Make variable available within this scope
  @if str-index($name, "[") == null {
    $lc_name: to_lower-case($name);
  }
  @else {
      $start: str-index($name, "[") + 1; 
      $end: 	str-index($name, "]") - 1;
      $lc_name: unquote(str-slice($name, $start, $end));
      $end: 	str-index($name, "[") - 1;
	  $name: 	str-slice($name, 1, $end);
  }
//  body {
//  counter-reset: $lc_name;
//}
  #{$lc_name} {
    counter-increment: $lc_name;
    @include theorem_like($name, $lc_name);
  }
}



/////$only_theorem_counter: 0;
/////
/////@import "_theorem_like.scss";
/////
/////$env-with-inc-list: Acknowledgement Algorithm Assertion Assumption Axiom Case Claim Conclusion Condition
/////Conjecture Convention Corollary Criterion Definition Example Exercise Hypothesis Lemma Notation
/////Observation Problem Property Proposition Question Remark Solution Summary;
/////
/////@each $name in $env-with-inc-list {
/////  $lc_name: to_lower-case($name);
/////  #{$lc_name} {
/////    @include theorem_like($name, (counter_list:((#{$lc_name}))), #{$lc_name});
/////  }
/////}
/////
