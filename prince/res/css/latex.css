@namespace mml url("http://www.w3.org/1998/Math/MathML");
@namespace sw url("http://www.sciword.com/namespaces/sciword");

texlogo {
  font-family: Times, "Times New Roman", serif;
  font-variant: small-caps;
  letter-spacing: 1px;
}


texlogo sup {
  font-size: 0.85em;
  vertical-align: 0.15em;
  margin-left: -0.36em;
  margin-right: -0.15em;
}


texlogo sub {
  vertical-align: -0.5ex;
  margin-left: -0.1667em;
  margin-right: -0.125em;
  font-size: 1em;
}


caption {
  background-color: rgb(250,240,240);
  margin-top: 3pt;
  margin-bottom: 3pt;
}

table {
  margin: 0px 5px;
  border-collapse: collapse;
}

table:focus {
  border-collapse: separate;
}

/*table {
  border-collapse: collapse;
  border-style: solid;
  border-color: #BBBBBB;
  border-width: thin;
}*/

td {
  border: 0.9px solid #BBBBBB;

}

td[lines="none"] {
  border-style: none;
}

td[lines="solid"] {
  border: thin solid black;
}

td[lines="double"] {
  border: medium double black;
}

td[line-left="none"] {
  border-left-style: none;
}

td[line-left="solid"] {
  border-left: thin solid black;
}

td[line-left="double"] {
  border-left: medium double black;
}


td[line-right="none"] {
  border-right-style: none;
}

td[line-right="solid"] {
  border-right: thin solid black;
}

td[line-right="double"] {
  border-right: medium double black;
}


td[line-top="none"] {
  border-top-style: none;
}

td[line-top="solid"] {
  border-top: thin solid black;
}

td[line-top="double"] {
  border-top: medium double black;
}


td[line-bottom="none"] {
  border-bottom-style: none;
}

td[line-bottom="solid"] {
  border-bottom: thin solid black;
}

td[line-bottom="double"] {
  border-bottom: medium double black;
}

button[class="msi"]::-moz-selection{
  background: blue;
} 

button[class="msi"]{
  position: relative;
  left: 0px;
  bottom: 0.1em;
}


hspace {
/*  -moz-binding: url("chrome://prince/content/bindings/latex.xml#hspace"); */
  display: inline-block;
}

hspace * {
  visibility: hidden;
}

body[showinvis="true"] hspace {
  visibility: visible;
  color: green;
  border-bottom: thin solid;
}

body[showinvis="true"] hspace[type="noIndent"]:before {
  border-bottom-style: none;
  content: "â˜’";
}

body[showinvis="true"] hspace[type="noIndent"] {
  position: relative;
  left: -2.5em;
  width: 0;
  border-bottom-style: none;
}

hspace[type="emSpace"] {
  min-width: 1em;
}

hspace[type="twoEmSpace"] {
  min-width: 2em;
}

hspace[type="thinSpace"] {
  min-width: 0.17em;
}

hspace[type="thickSpace"] {
  min-width: 0.5em;
}

hspace[type="italicCorrectionSpace"] {
  min-width: 0.083em;
}

hspace[type="requiredSpace"] {
  min-width: 0.5em;
  /*display: inline;*/
}

hspace[type="nonBreakingSpace"] {
  display: inline;
  white-space: nowrap;
}

/*
hspace[type="negativeThinSpace"] {
  min-width: 0.0em;
}

hspace[type="zeroSpace"] {
  min-width: 0.0em;
}

hspace[type="noIndent"] {
  min-width: 0.0em;
} */

vspace {
/*  -moz-binding: url("chrome://prince/content/bindings/latex.xml#vspace"); */
  display: inline-block;
	max-width: 2px;
/*  overflow: hidden;  */
  max-width: 1px;
  white-space: pre;
/*  position: relative;  */
}

vspace[type="smallSkip"] {
  height: 3pt;
	vertical-align: -3pt;
}

vspace[type="mediumSkip"] {
  height: 6pt;
	vertical-align: -6pt;
}

vspace[type="bigSkip"] {
  height: 12pt;
	vertical-align: -12pt;
}

vpsace[type="strut"] {
  line-height: 100%;
}

vspace[type="mathStrut"] {
  line-height: 100%;
}

vspace[type="customSpace"] {
  vertical-align: -100%;
}


*[showinvis="true"] vspace {
  border-left: thin solid green;
}

msirule {
/*  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msirule"); */
  display: inline-block;
}

msibreak[type="customNewLine"]
{
	display: block;
	width: 2px;
}

msibreak[type="customNewLine"]:after {
  white-space: pre;
  content: "\A";
  -moz-user-select: -moz-none;
}

*[showinvis="true"] msibreak {
	width: 2px;
}

*[showinvis="true"] msibreak[type="customNewLine"] {
	background-color: green;
}

msibreak[type="newPage"]:after {
  white-space: pre;
  content: "\A";
  -moz-user-select: -moz-none;
}

phantom {
  color: transparent;
}

inserted, math inserted {
  color: blue;
  text-decoration: underline;
}

deleted {
  color: red;
  text-decoration: line-through;
}


centeredEnv, centered {
  text-align: center;
  -moz-user-select: text;
}

newPageRule {
	display: inline-block;
	position: absolute;
	left: 0;
	bottom: auto;
	height: 1px;
	width: 100%;
	border-bottom: 2px dashed green;
}

/* invis {
  display: none;
}

*[showinvis="true"] sw|invis {
  display: inline;
}  */

otfont {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#otfont");
}

fontsize {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fontsize");
}

fontcolor {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fontcolor");
}


/* paragraph indenting rule -- don't indent the first paragraph in a division */
bodyText {
  margin-bottom: 0;
  line-height: 1.3em; 
}

/* ... but indent the following paragraphs */
bodyText + bodyText {
  text-indent: 1.5em;
  margin-top: 0 
}

td bodyText {
  text-indent: 0
}

img {
  -moz-force-broken-image-icon: 1;
  min-height: 6px; min-width: 6px;
}


/*graph {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#graph");
}*/

/*graph {
  display:block;
  cursor: pointer;
}*/

plotwrapper {
  display: block;
	top: 0;
	left: 0;
  text-indent: 0pt;
  text-align: center;
  -moz-user-select: all;
  -moz-user-focus: normal;
  cursor: pointer;
}

/*plotcaption {
  display: block;
  text-align: center;
  -moz-box-flex: 1;
  min-height: 20px;
}*/

/*object {
}
*/


mml|mi [msimathname="true"] {color: gray; }



mml|mi[tempinput="true"]::before
{
  content: "[";
  color: green;
}


mml|mi[tempinput="true"]::after
{
  content: "]";
  color: green;
}

mml|mi[tempinput="true"]
{
  letter-spacing: 0; /*-0.015em;*/
  -moz-user-select: text;
  color: red;
}

#rotateleft{
  list-style-image: url("chrome://prince/skin/icons/vc-rotateleft.png");
}

mml|mrow[id] {
  position: fixed;
  top: auto;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  z-index: 0;

}
mml|mrow[id]:after {
  content: "[#" attr(id) "]" ;
  position: fixed;
  top: auto;
  right: 0;
  margin-right: 0;
  z-index: 1;
  left: auto;
  color: black;
  background-color:rgb(180,180,180);
  -moz-user-select: -moz-none;
}


.collapsible {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#collapsible");
}

/* The following is a generic set of rules to control opening and closing
   sections. They are repeated for each structure that can be closed. Also
   implement the switch between numbered and not numbered*/

chapter>sectiontitle:first-child, chapter>sectiontitle {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#collapsible");
}

chapter>sectiontitle:before {
  -moz-user-select: none;
}

/* Keep counters from incrementing on unnumbered structures */

chapter[nonum="true"] {
  counter-increment: none;
}

/* Suppress	title for nonnumbered sections */
chapter[nonum="true"]>sectiontitle:first-child {
  content: "";
}

chapter[nonum="true"]>sectiontitle:before {
  content: "";
}

chapter[open="false"]>* {
  display: none;
}

chapter[open="false"]>sectiontitle:first-child {
  display: block;
}

chapter[open="false"]>sectiontitle:first-child {
  display: block;
}

section>sectiontitle:first-child, section>sectiontitle{
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#collapsible");
}

section>sectiontitle:before {
  -moz-user-select: none;
}

section[open="false"]>sectiontitle {
  display: block;
}

section[nonum="true"]>sectiontitle:first-child:before {
  content: "";
}

section[nonum="true"]>sectiontitle:before {
  content: "";
}

section[nonum="true"] {
  counter-increment: none;
}


section[open="false"]>* {
  display: none;
}

section[open="false"]>sectiontitle:first-child {
  display: block;
}

section[open="false"]>sectiontitle {
  display: block;
}

section[open="false"]>button.expander {
  display: inline;
}

subsection>sectiontitle:before {
  -moz-user-select: none;
}

subsection[open="false"]>sectiontitle {
  display: block;
}

subsection[open="false"]>* {
  display: none;
}

subsection>sectiontitle:first-child, subsection>sectiontitle {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#collapsible");
}


subsection[nonum="true"] {
  counter-increment: none;
}

subsection[nonum="true"]>sectiontitle:first-child:before, subsection[nonum="true"]>sectiontitle:before {
  content: "";
}

subsubsection>sectiontitle:before {
  -moz-user-select: none;
}

subsubsection[nonum="true"] {
  counter-increment: none;
}

subsubsection[nonum="true"]>sectiontitle:first-child:before {
  content: "";
}


subsubsection[nonum="true"]>sectiontitle:before {
  content: "";
}


subsubsection[open="false"]>* {
  display: none;
}

subsubsection[open="false"]>sectiontitle:first-child {
  display: block;
}

subsubsection[open="false"]>sectiontitle {
  display: block;
}

subsubsection[open="false"]>button.expander {
  display: inline;
}


paragraphsectiontitle:before {
  -moz-user-select: none;
}

paragraph[nonum="true"] {
  counter-increment: none;
}

paragraph[nonum="true"]>sectiontitle:first-child:before {
  content: "";
}

paragraph[nonum="true"]>sectiontitle:before {
  content: "";
}


*[showinvis="true"] sectiontitle:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}


*[showinvis="true"] p:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}


*[showinvis="true"] bodyText:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}

*[showinvis="true"] bodyMath:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}


*[showinvis="true"] title:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}


*[showinvis="true"] shortQuote:after {
  content: "\B6";
  display: inline;
  font-family: Courier New;
  color: green;
  font-weight: bold;
  -moz-user-select: -moz-none;
}


frontmatter, mainmatter, backmatter {
  display: block;
  position: relative;
  margin-left: 100px;
  padding: 10px 0px;
  border: thin solid black;
  background-color: #EEE8E0;
  -moz-border-radius: 10px;
}

preface {
  display: block;
  margin-top: 30pt;
  border: thin solid black;
  -moz-border-radius: 20px;
}

*[showinvis="true"] preface:before {
  content: "Preface";
  display: block;
  font-size: medium; font-weight: bold;
  color: green;
  -moz-user-select: -moz-none;
}


/* ordinary breaks -- emulate behavior of <br/>*/

msibr:before {
  content: "\A";
  white-space: pre;
  -moz-user-select: -moz-none;
}

*[showinvis="true"] msibr:before {
  content: "\AC\A";
  white-space: pre;
  color: green;
  -moz-user-select: -moz-none;
}

button[class="frontmattertag"] {
  display: none;
  -moz-user-select: none;
  -moz-user-focus: none;
}

*[showfmbuttons="true"] button[class="frontmattertag"] {
  position: absolute;
  left: 5px;
  font-family: sans-serif;
  font-style: normal;
  opacity: 0.7;
  display: inline;
}

/* Selection rules */

body {
  -moz-user-select: -moz-none; /* -moz-none can be overridden */
  counter-reset: eqnnumber subeqnnumber chapter part section ftnotectr;
  display: block;
  position: relative;
  font-family: Georgia;
  font-size: 12pt;
  line-height: 14pt;
  margin-left: 10px;
}

/* selection is possible in paragraph and front matter tags */

bodyText, rtlBodyText, p, bodyMath, sectiontitle, shortQuote, longQuotation, epigraph, title, line,
  dialogbase, bulletListItem, numberedListItem, descriptionListItem, verbatim,
  abstract, address, author, date, title {
  -moz-user-select: text;
}

/* maketitle, maketoc, makelot, makelof { 
  -moz-appearance: button;
  margin: 1px 5px 2px 5px;
  min-width: 6.3em;
  border: 3px solid;
  -moz-border-top-colors: transparent ThreeDHighlight ThreeDLightShadow;
  -moz-border-right-colors: transparent ThreeDDarkShadow ThreeDShadow;
  -moz-border-bottom-colors: transparent ThreeDDarkShadow ThreeDShadow;
  -moz-border-left-colors: transparent ThreeDHighlight ThreeDLightShadow;
  background-color: ThreeDFace;
} */

/* front matter tags */
address {
  display:block;
  text-align: center;
}

author {
  display:block;
  text-align: center;
}

date {
  display:block;
  text-align: center;
}



/* Key to the entries below for msidisplay:
    i) msidisplay with no "numbering" attribute will be assumed to be numbered automatically as a single equation.
         What's displayed will depend on the "marker", "subEquationNumbers", and "subEquationContinuation" attributes, but
         a number (with marker if available) will be displayed. Uses #msidisplaynumbered or #msidisplaysubnumbered binding.
   ii) msidisplay with "numbering=eqns" means the numbering is on the individual equations within an mtable.
         No marker will be displayed at the level of the msidisplay; the individual rows (that is, mtr content) will
         set the text of markers and numbers. Use #msidisplaybase.
  iii) msidisplay with "numbering=none" means either a single equation with no numbering or containing individual equations
       which are all unnumbered.
         If a marker is present, these will display the marker; otherwise nothing at the top level. Individual rows with markers
         will still show them. Use #msidisplaybase without a marker, or #msidisplaymarker if one is present.

  Key to the entries for individual equations, coded as msidisplay>math>mtable>mtr or msidisplay>math>mstyle>mtable>mtr:
    i) Equation with no "numbering" attribute will be assumed to be numbered automatically. As above, what's displayed will depend
         on "subEquationNumbers" and "subEquationContinuation" attributes. Use #msidisplayrownumbered or #msidisplayrowsubnumbered binding.
   ii) Equation with "numbering=none", but with a marker. Use #msidisplayrowmarker binding.
  iii) Equation with "numbering=none" but no marker; no binding needed?

  Counters:
    i) Generally, "counter-increment" is "eqnnumber" or "subeqnnum" depending on whether a button is "class=eqnnum" or
         "class=subeqnnum". Also, each "class=eqnnum" button will have a "counter-reset=subeqnnum".
   ii) Also, an msidisplay with "subEquationNumbers=true" and "numbering" not equal to "none" but without "subEquationContinuation=true" will add "counter-increment=eqnnumber".
  iii) The one difficult case is "subEquationContinuation=true". Here the msidisplay will only increment "eqnnumber" counter if
         its "subEquationReset" attribute is "true"; managing this attribute will have to be done dynamically, and it will (attempt to)
         track whether previous display has "subEquationContinuation=true" and "subEquationNumbers=true".
*/

msidisplay {
 -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplaynumbered");
  position: relative;
  display: block;
}

msidisplay[subEquationNumbers="true"] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplaysubnumbered");
}

msidisplay[numbering="none"], msidisplay[numbering="eqns"], msidisplay[numbering="eqns"][subEquationNumbers="true"] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplaybase");
}

msidisplay[numbering="none"][marker] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplaymarker");
}

msidisplay[numbering="eqns"] mtable[type="eqnarray"]>mtr {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplayrownumbered");
}

msidisplay mtable[type="eqnarray"]>mtr[numbering="none"] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplayrowbase");
}

msidisplay mtable[type="eqnarray"]>mtr[numbering="none"][marker] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplayrowmarker");
}

msidisplay[numbering="eqns"][subEquationNumbers="true"] mtable[type="eqnarray"]>mtr {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#msidisplayrowsubnumbered");
}


msidisplay[subEquationNumbers="true"] {
  counter-increment: eqnnumber;
  counter-reset: subeqnnum;
}

msidisplay[subEquationNumbers="true"][numbering="none"], msidisplay[subEquationNumbers="true"][subEquationContinuation="true"] {
  counter-increment: none;
  counter-reset: none;
}

msidisplay[subEquationNumbers="true"][subEquationContinuation="true"][subEquationReset="true"] {
  counter-increment: eqnnumber;
  counter-reset: subeqnnum;
}

mtd[class="eqnmarker"],mml|mtd[class="eqnmarker"]
{
  padding-left: 50px;
  text-align: right;
  border-top-style:  hidden;
  border-right-style: hidden;
  border-bottom-style: hidden;
  border-left-style: none;
}

button[class="eqnnum"]{
  counter-increment: eqnnumber;
/*  counter-reset: subeqnnum; */
  position: absolute;
  right: 0px;
  top: 0px;
  font-style: normal;
  color: red;
  -moz-user-select: -moz-none ! important;
}

button[class="subeqnnum"]{
  counter-increment: subeqnnum;
  counter-reset: none;
  position: absolute;
  right: 20px;
  font-style: normal;
  color: blue;
  -moz-user-select: -moz-none ! important;
}

button[class="eqnmarker"]{
  position: absolute;
  right: 0px;
  font-style: normal;
  color: red;
  -moz-user-select: -moz-none ! important;
}

mtr button[class="eqnnum"], mtr button[class="subeqnnum"], mtr button[class="eqnmarker"] {
  display: inline;
  right: 0px;
}

button[class="eqnnum"]:after{
  content: "  " counter(section) "." counter(eqnnumber);
  -moz-user-modify: read-only ! important;
}

button[class="eqnnum"][customLabel]:after{
  content: "  " attr(customLabel);
  -moz-user-modify: read-only ! important;
}

button[class="subeqnnum"]:after{
  content: "  " counter(section) "." counter(eqnnumber) "." counter(subeqnnum,lower-latin);
  -moz-user-modify: read-only ! important;
}

button[class="subeqnnum"][customLabel]:after{
  content: "  " attr(customLabel);
  -moz-user-modify: read-only ! important;
}


title {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fmtag-title");
}

author {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fmtag-author");
}

address {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fmtag-address");
}

date {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#fmtag-date");
}

maketitle {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#maketitle");
}

maketoc {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#maketoc");
}

makelof {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#makelof");
}

makelot {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#makelot");
}

appendix {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#appendix");
}

line {
  display: block;
}

/*
*[showinvis="true"] numberedlist {
  padding: 10px;
  border: 2px solid rgb(220,220,220);
  -moz-border-radius: 8px;
}

*[showinvis="true"] bulletlist {
  padding: 10px;
  border: 2px solid rgb(220,220,220);
  -moz-border-radius: 8px;
}

*[showinvis="true"] descriptionlist {
  padding: 10px;
  border: 2px solid rgb(220,220,220);
  -moz-border-radius: 8px;
}  */

*[showinvis="true"] numberedListItem {
  border: 2px solid rgb(220,210,220);
  -moz-border-radius: 8px;
}

*[showinvis="true"] bulletListItem {
  border: 2px solid rgb(220,210,220);
  -moz-border-radius: 8px;
}

*[showinvis="true"] descriptionListItem {
  border: 2px solid rgb(220,210,220);
  -moz-border-radius: 8px;
}

*[showinvis="true"] numberedListItem + numberedListItem {
  margin-top: -5px;
}

/* In the AMS-sanctioned classification of theorem environments, we have the breakdown:
    Plain      - assertion, conjecture, corollary, criterion, lemma, proposition, theorem
    Definition - algorithm, assumption, axiom, condition, definition, example,
                 exercise, hypothesis, problem, property, question
				 Add solution to this group, it is a standard theorem-like environment in Version 5.x shells (gp).
    Remark     - acknowledgment (not encouraged), case, claim, conclusion, notation,
                 note (we would use the tag "texnote", but no support currently),
                 remark, summary
  The CSS properties for these should be:
    Plain lead-in      - normal bold
    Plain content      - italic normal
    Definition lead-in - normal bold
    Definition content - normal normal
    Remark lead-in     - normal normal (but we use bold on-screen, per George)
    Remark content     - italic normal
*/

assertion > sectiontitle:first-child::before, conjecture > sectiontitle:first-child::before,
corollary > sectiontitle:first-child::before, criterion > sectiontitle:first-child::before,
lemma > sectiontitle:first-child::before, proposition > sectiontitle:first-child::before, theorem > sectiontitle:first-child::before
{
  font-style: normal;
  font-weight: bold;
  -moz-user-select: -moz-none;
}

assertion, conjecture, corollary, criterion, lemma, proposition, theorem {
  display: block;
  font-style: italic;
  counter-increment: theorem;
}

assertion > sectiontitle:first-child::before {
  content: 'Assertion ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

assertion[numbering="none"] > sectiontitle:first-child::before {
  content: 'Assertion ';
  -moz-user-modify: read-only;
}

conjecture > sectiontitle:first-child::before {
  content: 'Conjecture ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

conjecture[numbering="none"] > sectiontitle:first-child::before {
  content: 'Conjecture ';
  -moz-user-modify: read-only;
}

corollary > sectiontitle:first-child::before {
  content: 'Corollary ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

corollary[numbering="none"] > sectiontitle:first-child::before {
  content: 'Corollary ';
  -moz-user-modify: read-only;
}

criterion > sectiontitle:first-child::before {
  content: 'Criterion ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

criterion[numbering="none"] > sectiontitle:first-child::before {
  content: 'Criterion ';
  -moz-user-modify: read-only;
}

lemma > sectiontitle:first-child::before {
  content: 'Lemma ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

lemma[numbering="none"] > sectiontitle:first-child::before {
  content: 'Lemma ';
  -moz-user-modify: read-only;
}

proposition > sectiontitle:first-child::before {
  content: 'Proposition ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

proposition[numbering="none"] > sectiontitle:first-child::before {
  content: 'Proposition ';
  -moz-user-modify: read-only;
}

theorem > sectiontitle:first-child::before {
  content: 'Theorem ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

theorem[numbering="none"] > sectiontitle:first-child::before {
  content: 'Theorem ';
  -moz-user-modify: read-only;
}

algorithm > sectiontitle:first-child::before, assumption > sectiontitle:first-child::before,
axiom > sectiontitle:first-child::before, condition > sectiontitle:first-child::before,
definition > sectiontitle:first-child::before, example > sectiontitle:first-child::before,
exercise > sectiontitle:first-child::before, hypothesis > sectiontitle:first-child::before,
problem > sectiontitle:first-child::before, property > sectiontitle:first-child::before,
question > sectiontitle:first-child::before, solution > sectiontitle:first-child::before
{
  font-style: normal;
  font-weight: bold;
  -moz-user-modify: read-only;
}

algorithm, assumption, axiom, condition, definition, example, exercise, hypothesis,
problem, property, question, solution
{
  display: block;
  font-style: normal;
  counter-increment: theorem;
}

algorithm > sectiontitle:first-child::before {
  content: 'Algorithm ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

algorithm[numbering="none"] > sectiontitle:first-child::before {
  content: 'Algorithm ';
  -moz-user-modify: read-only;
}

assumption > sectiontitle:first-child::before {
  content: 'Assumption ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

assumption[numbering="none"] > sectiontitle:first-child::before {
  content: 'Assumption ';
  -moz-user-modify: read-only;
}

axiom > sectiontitle:first-child::before {
  content: 'Axiom ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

axiom[numbering="none"] > sectiontitle:first-child::before {
  content: 'Axiom ';
  -moz-user-modify: read-only;
}

condition > sectiontitle:first-child::before {
  content: 'Condition ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

condition[numbering="none"] > sectiontitle:first-child::before {
  content: 'Condition ';
  -moz-user-modify: read-only;
}

definition > sectiontitle:first-child::before {
  content: 'Definition ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

definition[numbering="none"] > sectiontitle:first-child::before {
  content: 'Definition ';
  -moz-user-modify: read-only;
}

example > sectiontitle:first-child::before {
  content: 'Example ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

example[numbering="none"] > sectiontitle:first-child::before {
  content: 'Example ';
  -moz-user-modify: read-only;
}

exercise > sectiontitle:first-child::before {
  content: 'Exercise ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

exercise[numbering="none"] > sectiontitle:first-child::before {
  content: 'Exercise ';
  -moz-user-modify: read-only;
}

hypothesis > sectiontitle:first-child::before {
  content: 'Hypothesis ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

hypothesis[numbering="none"] > sectiontitle:first-child::before {
  content: 'Hypothesis ';
  -moz-user-modify: read-only;
}

problem > sectiontitle:first-child::before {
  content: 'Problem ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

problem[numbering="none"] > sectiontitle:first-child::before {
  content: 'Problem ';
  -moz-user-modify: read-only;
}

property > sectiontitle:first-child::before {
  content: 'Property ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

property[numbering="none"] > sectiontitle:first-child::before {
  content: 'Property ';
  -moz-user-modify: read-only;
}

question > sectiontitle:first-child::before {
  content: 'Question ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

question[numbering="none"] > sectiontitle:first-child::before {
  content: 'Question ';
  -moz-user-modify: read-only;
}

solution > sectiontitle:first-child::before {
  content: 'Solution ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

solution[numbering="none"] > sectiontitle:first-child::before {
  content: 'Solution ';
  -moz-user-modify: read-only;
}

acknowledgment > sectiontitle:first-child::before, case > sectiontitle:first-child::before, claim > sectiontitle:first-child::before,
conclusion > sectiontitle:first-child::before, notation > sectiontitle:first-child::before,
remark > sectiontitle:first-child::before, summary > sectiontitle:first-child::before
{
  font-style: italic;
  font-weight: bold;
  -moz-user-modify: read-only;
}

acknowledgment, case, claim, conclusion, notation, remark, summary {
  display: block;
  font-style: normal;
  counter-increment: theorem;
}

acknowledgment > sectiontitle:first-child::before {
  content: 'Acknowledgment ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

acknowledgment[numbering="none"] > sectiontitle:first-child::before {
  content: 'Acknowledgment ';
  -moz-user-modify: read-only;
}

case > sectiontitle:first-child::before {
  content: 'Case ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

case[numbering="none"] > sectiontitle:first-child::before {
  content: 'Case ';
  -moz-user-modify: read-only;
}

claim > sectiontitle:first-child::before {
  content: 'Claim ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

claim[numbering="none"] > sectiontitle:first-child::before {
  content: 'Claim ';
  -moz-user-modify: read-only;
}

conclusion > sectiontitle:first-child::before {
  content: 'Conclusion ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

conclusion[numbering="none"] > sectiontitle:first-child::before {
  content: 'Conclusion ';
  -moz-user-modify: read-only;
}

notation > sectiontitle:first-child::before {
  content: 'Notation ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

notation[numbering="none"] > sectiontitle:first-child::before {
  content: 'Notation ';
  -moz-user-modify: read-only;
}

remark > sectiontitle:first-child::before {
  content: 'Remark ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

remark[numbering="none"] > sectiontitle:first-child::before {
  content: 'Remark ';
  -moz-user-modify: read-only;
}

summary > sectiontitle:first-child::before {
  content: 'Summary ' counter(section) "." counter(theorem) ' ';
  -moz-user-modify: read-only;
}

summary[numbering="none"] > sectiontitle:first-child::before {
  content: 'Summary ';
  -moz-user-modify: read-only;
}

proof > sectiontitle:first-child::before {
  content: 'Proof ';
  -moz-user-modify: read-only;
  background-color: lightgray;
  font-weight: bold;
}

assertion[leadInType="custom"],
conjecture[leadInType="custom"],
corollary[leadInType="custom"],
criterion[leadInType="custom"],
lemma[leadInType="custom"],
proposition[leadInType="custom"],
theorem[leadInType="custom"],
algorithm[leadInType="custom"],
assumption[leadInType="custom"],
axiom[leadInType="custom"],
condition[leadInType="custom"],
definition[leadInType="custom"],
example[leadInType="custom"],
exercise[leadInType="custom"],
hypothesis[leadInType="custom"],
problem[leadInType="custom"],
property[leadInType="custom"],
question[leadInType="custom"],
solution[leadInType="custom"],
acknowledgment[leadInType="custom"],
case[leadInType="custom"],
claim[leadInType="custom"],
conclusion[leadInType="custom"],
notation[leadInType="custom"],
remark[leadInType="custom"],
summary[leadInType="custom"],
proof[leadInType="custom"] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#theoremWithCustomLeadin");
}

assertion > envLeadIn,
conjecture > envLeadIn,
corollary > envLeadIn,
criterion > envLeadIn,
lemma > envLeadIn,
proposition > envLeadIn,
theorem > envLeadIn,
algorithm > envLeadIn,
assumption > envLeadIn,
axiom > envLeadIn,
condition > envLeadIn,
definition > envLeadIn,
example > envLeadIn,
exercise > envLeadIn,
hypothesis > envLeadIn,
problem > envLeadIn,
property > envLeadIn,
question > envLeadIn,
solution > envLeadIn,
acknowledgment > envLeadIn,
case > envLeadIn,
claim > envLeadIn,
conclusion > envLeadIn,
notation > envLeadIn,
remark > envLeadIn,
summary > envLeadIn {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#theoremLeadin");
}

assertion[numbering="none"],
conjecture[numbering="none"],
corollary[numbering="none"],
criterion[numbering="none"],
lemma[numbering="none"],
proposition[numbering="none"],
theorem[numbering="none"],
algorithm[numbering="none"],
assumption[numbering="none"],
axiom[numbering="none"],
condition[numbering="none"],
definition[numbering="none"],
example[numbering="none"],
exercise[numbering="none"],
hypothesis[numbering="none"],
problem[numbering="none"],
property[numbering="none"],
question[numbering="none"],
solution[numbering="none"],
acknowledgment[numbering="none"],
case[numbering="none"],
claim[numbering="none"],
conclusion[numbering="none"],
notation[numbering="none"],
remark[numbering="none"],
summary[numbering="none"] {
  counter-increment: none;
}

assertion > envLeadIn+bodyText,
conjecture > envLeadIn+bodyText,
corollary > envLeadIn+bodyText,
criterion > envLeadIn+bodyText,
lemma > envLeadIn+bodyText,
proposition > envLeadIn+bodyText,
theorem > envLeadIn+bodyText,
algorithm > envLeadIn+bodyText,
assumption > envLeadIn+bodyText,
axiom > envLeadIn+bodyText,
condition > envLeadIn+bodyText,
definition > envLeadIn+bodyText,
example > envLeadIn+bodyText,
exercise > envLeadIn+bodyText,
hypothesis > envLeadIn+bodyText,
problem > envLeadIn+bodyText,
property > envLeadIn+bodyText,
question > envLeadIn+bodyText,
solution > envLeadIn+bodyText,
acknowledgment > envLeadIn+bodyText,
case > envLeadIn+bodyText,
claim > envLeadIn+bodyText,
conclusion > envLeadIn+bodyText,
notation > envLeadIn+bodyText,
remark > envLeadIn+bodyText,
summary > envLeadIn+bodyText,
proof > envLeadIn+bodyText {
  display: inline;
}

/* "texnote" would be intended to represent the AMSTeX \note, as we already have a <note> tag.
  It's commented out as the benefits are probably fewer than the hazards.
  "solution" isn't in the AMS-canonized list.
texnote > sectiontitle:first-child::before {
  content: 'Note ' counter(section) "." counter(theorem) ' ';
}

solution > sectiontitle:first-child::before {
  content: 'Solution ' counter(section) "." counter(theorem) ' ';
}

texnote, solution {
  display: block;
  font-style: normal;
  font-weight: normal;
}

texnote[leadInType="custom"], solution[leadInType="custom"] {
  -moz-binding: url("chrome://prince/content/bindings/latex.xml#theoremWithCustomLeadin");
}
*/

rawTeX {
 color: #6600cc;
}

htmlfield { 
  background-color: #ccccff;
}

smallbox {
	border: 1px solid black;
}

*[hilite] {
	background-color: rgb(255,255,186);
}

/* These are the tags that polyglossia introduces for right-to-left languages */
Arabic, textarabic, coptic, textcoptic, divehi, textdivehi, farsi, textfarsi, hebrew, texthebrew, syriac, textsyriac, urdu, texturdu
{
	direction: rtl;
	text-align: right; }

  /***********************/
  /* Tagged run elements */
  /***********************/

emphasized {
  font-style: italic;
  color: rgb(9,62,125)
}

emphasized span.inlineMath {
  color: rgb(255,0,255)
}

roman {
  font-family: Times New Roman, serif;
  color: rgb(0,0,255)
}

calligraphic{
  font-family: Apple Chancery, monotype corsiva;
  color: rgb(0,0,255)
}

alt {
  color: rgb(0,255,0)
}

bold {
  font-weight: 700
}

blackboardBold {
  font-weight: 700
}

fraktur {
  font-family: MathJax_Fraktur;
  font-weight: 700
}

italics {
  font-style: italic
}

slanted {
  font-style: italic;
  font-weight: 700;
  color: rgb(9,62,125)
}

sansSerif {
  font-family: Arial;
  font-weight: 400;
  color: rgb(9,62,125)
}

smallCaps {
  font-variant: small-caps;
  color: rgb(0,0,0)
}

typewriter {
  font-family: Courier New;
  font-weight: 300
}

ltxframe {
  border: thin solid black;
}

rtl {
  color: rgb(100,50,0);
  direction: rtl;
  unicode-bidi: bidi-override
}

tiny {
  font-size: 50%
}

scriptsize {
  font-size: 67%
}

footnotesize {
  font-size: 75%
}

small {
  font-size: 83%
}

normalsize {
  font-size: 100%
}

large {
  font-size: 117%
}

Large {
  font-size: 133%
}

LARGE {
  font-size: 150%
}

huge {
  font-size: 167%
}

Huge {
  font-size: 183%
}

underline {
  text-decoration: underline;
}

td bodyText, note bodyText {
  margin-top: 0;
  margin-bottom: 0
}
