<?xml version="1.0"?>

<xbl:bindings id="latexbindings"
	xmlns:xbl="http://www.mozilla.org/xbl" 
  xmlns:sw="http://www.sciword.com/namespaces/sciword"
  xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml" >


	<xbl:binding id="latex">
	  <xbl:resources>
	    <xbl:stylesheet  src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>
	  <xbl:content>
      <!-- we include the children invisibly. Omitting the children doesn't work. The tag generally will contain the 
      text 'LaTeX' so it displays something approximated correct when this xbl file is not available. -->
      <sw:invis><xbl:children/></sw:invis>
      <sw:latex2>L<sw:latexa>A</sw:latexa><sw:latext>T</sw:latext><sw:latexe>E</sw:latexe>X</sw:latex2> 
    </xbl:content>
  </xbl:binding>

	<xbl:binding id="tex">
	  <xbl:resources>
	    <xbl:stylesheet   src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>

	  <xbl:content>
      <sw:invis><xbl:children/></sw:invis>
      <sw:tex2>T<sw:texe>E</sw:texe>X</sw:tex2>
    </xbl:content>
  </xbl:binding>

	<xbl:binding id="texb">
	  <xbl:resources>
	    <xbl:stylesheet   src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>

	  <xbl:content>
      <sw:button class="texbutton">
        <html:label>
          <sw:tex2>T<sw:texe>E</sw:texe>X</sw:tex2>
        </html:label>
      </sw:button>
      <sw:texbdata anonid = "data" ><xbl:children/></sw:texbdata>
    </xbl:content>
    
    <xbl:implementation>
      <xbl:property name="value"      onset="this.textContent = val; return val;"
                                  onget="return this.textContent;"/>
      <xbl:property name="role" readonly="true"  onget="return 'texbutton';"/>

    </xbl:implementation>    
  </xbl:binding>

	<xbl:binding id="latexstyleb">
	  <xbl:resources>
	    <xbl:stylesheet   src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>

	  <xbl:content>
      <sw:button class="texbutton">
        <sw:latex2>L<sw:latexa>A</sw:latexa><sw:latext>T</sw:latext><sw:latexe>E</sw:latexe>X</sw:latex2> style:
        <xbl:children includes="styleprop" />
      </sw:button>
      <sw:texbdata anonid = "styledata" ><xbl:children includes="styledata" /></sw:texbdata>
    </xbl:content>
    
    <xbl:implementation>
      <xbl:property name="value"      onset="this.getElementsByTagName('styledata')[0].textContent = val; return val;"
                                  onget="return this.getElementsByTagName('styledata')[0].textContent;"/>
      <xbl:property name="value2"      onset="this.getElementsByTagName('styledata')[1].textContent = val; return val;"
                                  onget="return this.getElementsByTagName('styledata')[1].textContent;"/>
      <xbl:property name="prop"       onget="return this.getElementsByTagName('styleprop')[0].textContent;"/>
      <xbl:property name="role" readonly="true"  onget="return 'latexstylebutton';"/>

    </xbl:implementation>    
  </xbl:binding>

	<xbl:binding id="hspace">
	  <xbl:resources>
	    <xbl:stylesheet   src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>
	  <xbl:content>
      <sw:invis><xbl:children/></sw:invis>
      <sw:space xbl:inherits="flex,dim,fillWith"/>
    </xbl:content>
    <xbl:implementation>
      <xbl:constructor>
        <![CDATA[
        var theDim = this.getAttribute("dim");
        if (theDim != null && theDim.length > 0)
        {
          var spaceObj = document.getAnonymousNodes(this)[1];
          var spanObj = document.createElement("span");
          spanObj.setAttribute("style","width: " + theDim + ";");
          spaceObj.appendChild(spanObj);
        }
        else
        {
          var theFlex = this.getAttribute("flex");
          if (theFlex != null && theFlex.length > 0)
          {
            var spaceObj = document.getAnonymousNodes(this)[1];
            /*var sepObj = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "spacer");
            sepObj.setAttribute("flex", theFlex);  */
            var theFill = this.getAttribute("fillWith");
            var theStyle = "";  /*may need to set this to -moz-box-flex: + theFlex? Depends on whether the attribute takes.*/
            if (theFill == "line")
              theStyle += "border-bottom-width: thin; border-bottom-style: solid;"
            else if (theFill == "dots")
              theStyle += "border-bottom-width: medium; border-bottom-style: dotted;"
            if (theStyle.length > 0)
              spaceObj.setAttribute("style", theStyle);
            /*  sepObj.setAttribute("style", theStyle);
              spaceObj.appendChild(sepObj); */
          }
          dump("XBL hspace content doesn't have dim attribute!\n");
        }
        ]]>
      </xbl:constructor>
    </xbl:implementation>
  </xbl:binding>

	<xbl:binding id="vspace">
	  <xbl:resources>
	    <xbl:stylesheet   src="resource://app/res/css/latex_internal.css"/>
	  </xbl:resources>
	  <xbl:content>
      <sw:invis><xbl:children/></sw:invis>
      <sw:vertspace xbl:inherits="dim,lineHt"/>
    </xbl:content>
    <xbl:implementation>
      <xbl:constructor>
        <![CDATA[
        var theDim = this.getAttribute("dim");
        var theLineHeight = this.getAttribute("lineHt");
        var styleAttr = "";
        if (theDim != null && theDim.length > 0)
          styleAttr = "padding-bottom: " + theDim + ";";
        if (theLineHeight != null && theLineHeight.length > 0)
          styleAttr += "line-height: " + theLineHeight + ";";
        if (styleAttr.length > 0)
        {
          var spaceObj = document.getAnonymousNodes(this)[1];
          var spanObj = document.createElement("span");
          spanObj.setAttribute("class", "vertspace");
          spanObj.setAttribute("style", styleAttr);
          var textObj = document.createTextNode(" ");
          spanObj.appendChild(textObj);
          spaceObj.appendChild(spanObj);
          /* spaceObj.setAttribute("style", styleAttr); */
        }
        else
          dump("XBL vspace content doesn't have dim or lineHt attribute!\n");
        ]]>
      </xbl:constructor>
    </xbl:implementation>
  </xbl:binding>
  
  <xbl:binding id="OTFont">
	  <xbl:content>
      <html:span anonid="fontspan"><xbl:children/></html:span>
    </xbl:content>
    <xbl:implementation>
      <xbl:constructor>
        <![CDATA[
          var style = "font-family: " + this.getAttribute("fontname"); 
          var span = document.getAnonymousElementByAttribute(this, "anonid", "fontspan");
          span.setAttribute("style", style);  
          this.addEventListener("DOMAttrModified", attrChanged, false);
          function attrChanged { this.fontname = this.getAttribute("fontname");}
      ]]></xbl:constructor>
      <xbl:property name="fontname">   
        <xbl:getter><![CDATA[
          return this.getAttribute("fontname");
        ]]></xbl:getter>
        <xbl:setter><![CDATA[
          this.setAttribute("fontname", val);
          var style = "font-family: " + val; 
          dump("Setting font to " + style + "\n");
          var span = document.getAnonymousElementByAttribute(this, "anonid", "fontspan");
          span.setAttribute("style", style);  
        ]]></xbl:setter>
      </xbl:property>
    </xbl:implementation>
  </xbl:binding>



</xbl:bindings>

			