<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://prince/skin/editor.css" type="text/css"?>
<?xml-stylesheet href="chrome://prince/skin/EditorDialog.css" type="text/css"?>
<?xml-stylesheet href="chrome://prince/content/frame.css" type="text/css"?>
#include ../productname.inc

<?xul-overlay href="chrome://prince/content/keyEntryOverlay.xul"?>

<!DOCTYPE dialog SYSTEM "chrome://prince/locale/Minipage.dtd">
<overlay id="msiFrameOverlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:html="http://www.w3.org/1999/xhtml">
  <script type="application/x-javascript" src="chrome://prince/content/msiFrameOverlay.js"/>
  <script type="application/x-javascript" src="chrome://prince/content/msiEdDialogCommon.js"/>
#include ../editorkeys.inc



  <tab id="msiFrameTab" label="&FrameTab.label;" oncommand="redrawDiagram();"/>
  <tab id="msiPlacementTab" label="&Placementtab.label;"/>
  <vbox id="units" >
    <label id   = "frameUnitLabel"
      control   = "frameUnitMenulist"
      accesskey = "&unitLabel.accesskey;"
      value     = "&unitLabel.label;" />
    <hbox>
      <menulist id = "frameUnitMenulist" style="width: 8em"
        persist="value selectedIndex" value="pt" selectedIndex="2"
        oncommand="setNewUnit(this);" >
        <menupopup id = "unitList">
          <menuitem value="in" label="&inch;"/>        <!--menuitem value="pct" label="percent"/  -->
          <menuitem value="cm" label="&centimeter;"/>
          <menuitem value="pt" label="&point;"/>
          <menuitem value="mm" label="&millimeter;"/>
          <menuitem value="pc" label="&pica;"/>
          <menuitem value="px" label="&pixel;"/>
        </menupopup>
      </menulist>
      <spacer flex = "1"/>
    </hbox>
<!--     hidden text boxes to take advantage of unithandler auto unit changes
 -->
    <textbox
      id        = "truewidth"
      value     = "0"
      hidden    = "true"/>
    <textbox
      id        = "trueheight"
      value     = "0"
      hidden    = "true"/>

  </vbox>
  <vbox id="msiFrame" align="start" onfocus="redrawDiagram();">
    <broadcaster id="lengthwithunits"
      class     = "medwidth"
      unit      = "px"
      type      = "number"
      decimalplaces = "2"
      increment = "1"
      />
    <hbox>
      <vbox id="illustration" pack="start" width="220px"
         outer="false"> <!-- the illustration -->
        <hbox flex="1"/>
        <hbox>
          <vbox width="60px" />
          <hbox class="page" height="30px" style="background-color:rgb(90,90,90);width:150px;"/>
        </hbox>
        <hbox>
          <hbox id="leftspacer" height="1px" width="60px"/> <!-- width is 60 + left margin -->
          <hbox id="leftpage" height="1px" class="page" style="background-color:rgb(90,90,90); width: 0px"/>
            <!-- width is max(0,leftmargin) (scaled, of course)
            or, when on the right, it is 100 - contentwidth - mx -px -bx -->
          <hbox id="leftspace" class="page" style="background-color:transparent;" width="0px"/>
          <vbox id="frame" style="border-style:solid; border-width:0"><!-- border and padding are those of the frame-->
            <vbox id="content" style="" /><!-- height and width are those of the content of the frame -->
          </vbox>
          <vbox id="rightspace" class="page" style="background-color:transparent;" width="0px"/>
          <vbox id="rightpage" class="page" style="background-color:rgb(90,90,90);" width="150px"/><!-- width is 150 - contentwidth - mx - px - bx,
            where mx is the sum of the left and right margins, and px and bx are the same for the padding and border -->
        </hbox >
        <hbox>
          <vbox width="60px" height="1px"/>
          <hbox class = "page" style="background-color:rgb(90,90,90);width:150px; height:34px"/><!-- height is 90 - contentheight - my -py -by -->
        </hbox>
        <vbox flex="1"/>
      </vbox>
      <vbox align="center">
        <groupbox>
          <caption>Colors</caption>
          <hbox>
            <vbox align="center">
              <label value="&Minipage.borderLabel;"/>
              <msibutton id="colorButton" class="color-button" oncommand="getColorAndUpdate('colorWell');">
                <spacer persist="style" id="colorWell" class="color-well"
                  style="background-color: black"/>
              </msibutton>
            </vbox>
            <vbox align="center">
              <label value="&Minipage.backgroundLabel;" align="center"/>
               <msibutton id="bgcolorButton" class="color-button"
                    oncommand="getColorAndUpdate('bgcolorWell');">
                <spacer persist="style" id="bgcolorWell" class="color-well"
                  style="background-color: white"/>
              </msibutton>
            </vbox>
          </hbox>
        </groupbox>
        <groupbox>
          <caption label="&Minipage.textAlignmentLabel;"/>
          <hbox align="center">
            <menulist id = "textAlignment" value = "left" style="width: 10em" persist="value">
              <menupopup id = "alignments" >
                <menuitem value="center" label="&Minipage.textCentered;"/>
                <menuitem value="justify" label="&Minipage.textJustified;"/>
                <menuitem value="left" label="&Minipage.textLeft;"/>
                <menuitem value="right" label="&Minipage.textRight;"/>
                <menuitem value="inner" label="&Minipage.textInside;"/>
                <menuitem value="outer" label="&Minipage.textOutside;"/>
              </menupopup>
            </menulist>
          </hbox>
        </groupbox>
      </vbox>
    </hbox>
    <grid>
      <columns>
        <column/>
        <column flex="1"/>
        <column flex="1"/>
        <column flex="1"/>
        <column flex="1"/>
      </columns>
      <rows>
        <row>
          <hbox/>
          <hbox>
            <description value="&Minipage.descLeft;" observes="role-textframe"/>
            <description value="&Minipage.descToText;" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="&Minipage.descRight;" observes="role-textframe"/>
            <description value="&overhang;" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="&Minipage.descTop;" observes="role-textframe"/>
            <description value="&Minipage.descTopBottom;" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="&Minipage.descBottom;" observes="role-textframe"/>
          </hbox>
        </row>
        <row>
          <label value="&margin;"/>
          <hbox>
            <textbox
              id        = "marginLeftInput"
              min       = "-1000"
              value     = "0"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"
              persist   = "value"/>
            <button class="extend" oncommand="extendInput('margin')"
                observes="role-textframe"/>
          </hbox>
          <textbox
            id        = "marginRightInput"
            min       = "-1000"
            value     = "0"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            persist   = "value"/>
          <textbox
            id        = "marginTopInput"
            value     = "0"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            persist   = "value"/>
          <hbox  observes="role-textframe">
          <textbox
            id        = "marginBottomInput"
            value     = "0"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            persist   = "value"/>
          </hbox>
        </row>
        <row>
          <label value="&Minipage.borderLabel;"/>
          <hbox>
            <textbox
              id        = "borderLeftInput"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"
              value     = "0"
              persist   = "value"/>
            <button class="extend" observes="role-textframe" oncommand="extendInput('border')"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderRightInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
        </row>
        <row>
          <label value="&padding;"/>
          <hbox>
            <textbox
              id        = "paddingLeftInput"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"
              value     = "0"
              persist   = "value"/>
            <button class="extend" observes="role-textframe" oncommand="extendInput('padding')"/>
          </hbox>
          <hbox  observes="role-textframe">
          <textbox
            id        = "paddingRightInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "paddingTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "paddingBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"
            value     = "0"
            persist   = "value"/>
          </hbox>
        </row>
      </rows>
    </grid>
  </vbox>
  <vbox id = "msiFrameSize">
    <groupbox>
      <caption label="&sizeTab.label;"/>
      <radiogroup id="sizeRadio">
        <hbox flex="1" visibility = "hidden">
          <vbox >
            <radio id="actual" value="actual" label="&sizeTab.actualSize;" oncommand="gSizeState.selectActualSize();" radioGroup="sizeRadio"/>
          </vbox>
          <vbox >
            <radio id="custom" value="custom" label="&sizeTab.custom;" oncommand="gSizeState.selectCustomSize();" radioGroup="sizeRadio"/>
          </vbox>
          <vbox >
            <checkbox id="constrainCheckbox"    oncommand ="gSizeState.setPreserveAspectRatio(this.checked);"
                checked="false" label="Preserve aspect ratio"/>
          </vbox>
        </hbox>
      </radiogroup>
      <hbox>
        <radiogroup id='autoDims' orient="horizontal"/>
        <grid>
          <columns>
            <column/>
            <column/>
          </columns>
          <rows>
            <row>
              <label value="&width;" id="frameWidthLabel"/>
              <label value="&height;" id="frameHeightLabel"/>
             </row>
            <row>
              <textbox
                id        = "frameWidthInput"
                type      = "number"
                decimalplaces = "2" increment=".10"
                onchange= "frameWidthChanged(this, event);"
                onload    = "frameWidthChanged(this, event);"
                value     = ""
                style     = "width: 1.0in;"/>
              <textbox
                id        = "frameHeightInput"
                type      = "number"
                decimalplaces = "2" increment=".10"
                onchange = "frameHeightChanged(this, event);"
                onload    = "frameHeightChanged(this, event);"
                value     = ""
                style     = "width: 1.0in;"/>
           </row>
          </rows>
        </grid>
      </hbox>
#ifndef PROD_SNB
      <hbox id="rotate" align="center">
        <label value="&sizeTab.rotateContents;"/>
        <menulist id = "rotationList" value="rot0" persist="value" sizetopopup="always">
          <menupopup id = "rotationsList">
            <menuitem value="rot0" label="&sizeTab.rotate0;"/>
            <menuitem value="rot90" label="&sizeTab.rotate90;" />
            <menuitem value="rot270" label="&sizeTab.rotate270;"/>
          </menupopup>
        </menulist>
      </hbox>
#endif
      <!-- /vbox -->
    </groupbox>
  </vbox>
  <vbox id="placementGroup">
    <groupbox>
      <caption label="&Placementtab.label;"/>
      <grid style="width: 140px">
        <columns>
          <column flex="1"/>
          <column flex="1" />
        </columns>
        <rows>
          <row>
            <label  observes="locationEnabled" control="locationList">Location</label>
            <menulist id="locationList" observes="locationEnabled" oncommand="locationChanged()" >
              <menupopup>
                <menuitem  id="floating" label="&floating;" selected="true" value="floating"/>
                <menuitem  id="inline" label="&inline.label;"  value="inline" observes="forplots"/>
                <menuitem  id="center" label="&display.label;" value="center"/>
                <menuseparator/>
                <menuitem  id="L" label="&left.label;" value="L"  observes="forplots"/>
                <menuitem  id="left" label="&leftfloating.label;" value="left"  observes="forplots"/>
                <menuitem  id="R" label="&right.label;" value="R" observes="forplots"/>
                <menuitem  id="right" label="&rightfloating.label;" value="right" observes="forplots"/>
                <menuitem  id="I" label="&inside.label;" value="I" observes="forplots"/>
                <menuitem  id="inside" label="&insidefloating.label;" value="inside" observes="forplots"/>
                <menuitem  id="O" label="&outside.label;" value="O" observes="forplots"/>
                <menuitem  id="outside" label="&outsidefloating.label;" value="outside" observes="forplots"/>
              </menupopup>
            </menulist>
          </row>
          <row observes="forplots">
            <description value="&inlineOffset;" id="frameInlineOffsetLabel" observes="inlineOffsetEnabled"/>
            <textbox id = "frameInlineOffsetInput" class="medwidth" type = "number" value = "0"   decimalplaces = "3" min="-Infinity" persist = "value" observes="inlineOffsetEnabled"/>
          </row>
          <row flex="1">
            <label control="floatList" observes="floatEnabled">Float</label>
            <menulist id="floatList" observes="floatEnabled" oncommand="floatPropertyChanged();">
              <menupopup selectedIndex="0">
                <menuitem id="floatlistNone" label="&none;"  type="checkbox" value=""/>
                <menuitem id="ltxfloat_forceHere"    type="checkbox" label="&placement.forceHere;"    value="H"/>
                <menuitem id="ltxfloat_here"         type="checkbox" label="&placement.here;"         value="h"/>
                <menuitem id="ltxfloat_pageOfFloats" type="checkbox" label="&placement.pageOfFloats;" value="p"/>
                <menuitem id="ltxfloat_topPage"      type="checkbox" label="&placement.topPage;"      value="t"/>
                <menuitem id="ltxfloat_bottomPage"   type="checkbox" label="&placement.bottomPage;"   value="b"/>
              </menupopup>
            </menulist>
          </row>
          <row flex="1">
            <label control="baselineList">Baseline
            </label>
            <menulist id="baselineList" oncommand="TablePropertyChanged('TableBaselineRadioGroup');">
              <menupopup>
                <menuitem label="&baseline.label;" value="baseline"/>
                <menuitem label="&sameastoprow.label;"  value="top"/>
                <menuitem label="&atverticalcenter.label;" value="middle"/>
                <menuitem label="&sameasbottomrow.label;" value="bottom"/>
              </menupopup>
            </menulist>
          </row>
          <row flex="1">
            <label observes = "captionEnabled">Caption</label>
            <menulist id="captionLocation" oncommand="captionPropertyChanged();" tooltiptext="&Caption.tooltip;" observes="captionEnabled" >
              <menupopup>
                <menuitem label="&none;" value="none"/>
                <menuitem label="&above;" value="top"/>
                <menuitem label="&below;" value="bottom"/>
              </menupopup>
            </menulist>
          </row>
          <row flex="1" observes="keyEnabled">
              <label id="keyInputLabel" observes="keyEnabled" value="&Key.label;"/>
              <vbox id="keyEntryTextbox"/>
          </row>
        </rows>
      </grid>
    </groupbox>
  </vbox>
  <broadcasterset id="frameoverlayBroadcasters">
    <broadcaster id="floatEnabled" disabled="true"/>
    <broadcaster id="forplots" hidden="false"/>
    <broadcaster id="inlineOffsetEnabled" disabled="true"/>
    <broadcaster id="locationEnabled" />
    <broadcaster id="captionEnabled" />
    <broadcaster id="keyEnabled"/>

    <broadcaster id="wrapOption" disabled="true"/>
    <broadcaster id="textwidth" width="52"/> <!-- = 100 + overhang - notedata.width - sidemargin -->
    <broadcaster id="noteheight" height="40"/>
    <broadcaster id="reducedleftmargin" width="40"   /> <!-- 60 - overhang -->
    <broadcaster id="sidemargin" width="8"/>
    <broadcaster id="topmargin" height="8"/>
    <broadcaster id="notedata" width="60" color="#000000" bwidth="2" bstyle="solid" pwidth="1"/>
    <broadcaster id="role-image" hidden="false"/>
    <broadcaster id="customSize" disabled="true"/>
  </broadcasterset>

</overlay>
