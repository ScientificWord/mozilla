<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://prince/skin/editor.css" type="text/css"?>
<?xml-stylesheet href="chrome://prince/skin/EditorDialog.css" type="text/css"?>
<?xml-stylesheet href="chrome://prince/content/Frame.css" type="text/css"?>
<!DOCTYPE dialog SYSTEM "chrome://prince/locale/Frame.dtd">
 
<overlay id="msiFrameOverlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:html="http://www.w3.org/1999/xhtml">
  <script type="application/x-javascript" src="chrome://prince/content/msiFrameOverlay.js"/>
  <!-- script type="application/x-javascript" src="chrome://prince/content/msiEditorDefinitions.js"/ -->
  <!-- script type="application/x-javascript" src="chrome://prince/content/msiEditorUtilities.js"/ -->
  <script type="application/x-javascript" src="chrome://prince/content/msiEdDialogCommon.js"/>


  <tab id="msiFrameTab" label="Frame"/>
  <tab id="msiPlacementTab" label="Placement"/>
  <vbox id="units" >
    <label id   = "frameUnitLabel"
      control   = "frameUnitMenulist"
      accesskey = "&unitLabel.accesskey;"
      value     = "&unitLabel.label;" />
    <hbox> <menulist id = "frameUnitMenulist"
      width=".75in"
      oncommand  = "setNewUnit(this);" >
      <menupopup id = "unitList" selectedIndex="2" persist="selectedIndex">
        <menuitem value="in" label="&inch;"/>
        <!--menuitem value="pct" label="percent"/  -->
        <menuitem value="cm" label="&centimeter;"/>
        <menuitem value="pt" label="&point;" selected="true" />
        <menuitem value="mm" label="&millimeter;"/>
        <menuitem value="pc" label="&pica;"/>
        <menuitem value="px" label="&pixel;"/>
      </menupopup>
    </menulist><spacer flex = "1"/></hbox>
    <spacer flex="1"/>
  </vbox>
  <vbox id="msiFrame" align="start">
    <spacer flex="1"/>
    <broadcaster id="lengthwithunits"
      class     = "medwidth"
      unit      = "px"
      type      = "number"
      increment = "1"
      decimalplaces = "0"/>
      
    <hbox>
      <vbox id="illustration" pack="start" width="220px" 
         outer="false"> <!-- the illustration -->
        <hbox flex="1"/>
        <hbox>
          <vbox width="60px" />
          <hbox class="page" height="30px" style="background-color:rgb(90,90,90);width:150px;"/>
        </hbox>
        <hbox>
          <hbox id="leftspacer" height="1px" width="60px"/> <!-- width is 60 + min(0, left margin) -->
          <hbox id="leftpage" height="1px" class="page" style="background-color:rgb(90,90,90); width: 0px"/> 
            <!-- width is max(0,leftmargin) (scaled, of course)
            or, when on the right, it is 100 - contentwidth - mx -px -bx -->
          <box id="leftspace" class="page" style="background-color:transparent;" width="0px"/>
          <vbox id="frame" style="border-style:solid; border-width:0" ><!-- border and padding are those of the frame-->
            <vbox id="content" style="background-color:rgb(150,150,150); "/><!-- height and width are those of the content of the frame --> 
          </vbox>
          <box id="rightspace" class="page" style="background-color:transparent;" width="0px"/>
          <box id="rightpage" class="page" style="background-color:rgb(90,90,90);" width="150px"/><!-- width is 150 - contentwidth - mx - px - bx,
            where mx is the sum of the left and right margins, and px and bx are the same for the padding and border -->
        </hbox >
        <hbox>
          <vbox width="60px" height="1px"/>
          <hbox class = "page" style="background-color:rgb(90,90,90);width:150px; height:34px"/><!-- height is 90 - contentheight - my -py -by -->
        </hbox>
        <vbox flex="1"/>
      </vbox>
    </hbox>
    <spacer flex="1"/>
    <grid>
      <columns>
        <column/>
        <column flex="1"/>
        <column flex="1"/>
        <column flex="1"/>
        <column flex="1"/>
      </columns>
      <rows>
        <row>
          <hbox/>
          <hbox>
            <description value="Left" observes="role-textframe"/>
            <description value="To text" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="Right" observes="role-textframe"/>
            <description value="Overhang" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="Top" observes="role-textframe"/>
            <description observes="role-image">Top/Bottom</description>
          </hbox>
          <hbox>
            <description value="Bottom" observes="role-textframe"/>
          </hbox>
        </row>
        <row>
          <label value="Margin"/>
          <hbox>
            <textbox
              id        = "marginLeftInput"
              min       = "-1000"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"/>
            <button class="extend" oncommand="extendInput('margin')"
                observes="role-textframe"/>
          </hbox>
          <textbox
            id        = "marginRightInput"
            min       = "-1000"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          <textbox
            id        = "marginTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          <hbox  observes="role-textframe">
          <textbox
            id        = "marginBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/></hbox>
        </row>
        <separator/>
        <row>
          <label value="Border"/>
          <hbox>
            <textbox
              id        = "borderLeftInput"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"/>
            <button class="extend" observes="role-textframe" oncommand="extendInput('border')"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderRightInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "borderBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          </hbox>
        </row>
        <row>
          <label value="Padding"/>
          <hbox>
            <textbox
              id        = "paddingLeftInput"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"/>
            <button class="extend" observes="role-textframe" oncommand="extendInput('padding')"/>
          </hbox>
          <hbox  observes="role-textframe">
          <textbox
            id        = "paddingRightInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "paddingTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          </hbox>
          <hbox observes="role-textframe">
          <textbox
            id        = "paddingBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/></hbox>
        </row>
        <separator/>
        <row>
          <hbox/>
          <hbox>
            <description value="Left" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="Right" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="Top" observes="role-image"/>
          </hbox>
          <hbox>
            <description value="Bottom" observes="role-image"/>
          </hbox>
        </row>
        <row>
          <label value="Crop"/>
          <hbox>
            <textbox
              id        = "cropLeftInput"
              observes  = "lengthwithunits"
              onkeypress= "handleChar(event, this.id);"
              onchange  = "update(this.id);"/>
            <button class="extend" oncommand="extendInput('crop')"/>
          </hbox>
          <textbox
            id        = "cropRightInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          <textbox
            id        = "cropTopInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
          <textbox
            id        = "cropBottomInput"
            observes  = "lengthwithunits"
            onkeypress= "handleChar(event, this.id);"
            onchange  = "update(this.id);"/>
        </row>
        <row>
          <label value="Border color"/>
          <msibutton id="colorButton" class="color-button" oncommand="getColorAndUpdate();">
            <spacer persist="style" id="colorWell" class="color-well" style="background-color: black"/>
          </msibutton>
        </row>
      </rows>
    </grid>    
  </vbox>
  <vbox id = "msiFrameSize">
    <groupbox>
      <caption label="Size"/>
      <!-- vbox observes="hasNaturalSize" -->
        <radiogroup id="sizeRadio" observes="role-image">
          <hbox flex="1">
            <vbox>
              <radio id="actual" label="Actual size" radioGroup="sizeRadio"/>
            </vbox>
            <vbox>
              <radio id="custom" label="Custom" radioGroup="sizeRadio"/>
            </vbox>
          </hbox>
        </radiogroup>
        <hbox>
          <grid>
            <columns>
              <column flex="1" width=".75in"/>
              <column width="12px"/>
              <column flex="1" width=".75in"/>
              <column flex="1"/>
              <column observes="hasNaturalSize" width = "12px" />
            </columns>
            <rows>
              <row>
                <label value="Width"/>
                <label value="Auto" control="autoWidth"/>
                <label value="Height"/>
                <label value="Auto" control="autoHeight"/>
                <label observes="hasNaturalSize" value="Constrain" control="constrainCheck"/>
              </row>
              <row>
                <textbox
                  id        = "frameWidthInput"
                  type      = "number"
                  onkeypress= ""
                  onchange  = "frameWidthChanged(this);"
                  onload    = "frameWidthChanged(this);"/>
                <checkbox id="autoWidth" oncommand ="document.getElementById('frameWidthInput').setAttribute('disabled',this.checked);"/>
                <textbox
                  id        = "frameHeightInput"
                  type      = "number"
                  onkeypress= ""
                  onchange  = "frameHeightChanged(this);"
                  onload    = "frameHeightChanged(this);"/>
                <checkbox id="autoHeight" oncommand ="document.getElementById('frameHeightInput').setAttribute('disabled',this.checked);"/>
                <checkbox observes="hasNaturalSize" id="Constrain" oncommand ="setConstrainMode(this);"/>
              </row>
            </rows>
          </grid>
        </hbox>
        <hbox align="center">
          <label value="Rotate contents"/>
          <menulist id = "rotationList">
            <menupopup id = "rotationsList">
              <menuitem value="rot0" label="None"/>
              <menuitem value="rot90" label="90 degrees CW" />
              <menuitem value="rot270" label="90 degrees CCW"/>
            </menupopup>
          </menulist>
        </hbox>
      <!-- /vbox -->
    </groupbox>
  </vbox>

  <vbox id="msiPlacement">
    <spacer flex="1"/>
    <groupbox >
      <caption label="Placement"/>
      <radiogroup id="placementRadioGroup" oncommand="enableFloating(this);">
      <hbox flex="1">
        <vbox>
          <radio id="inline" label="In line" radioGroup="placementRadioGroup"/>
        </vbox>
        <vbox>
          <radio id="display" label="Displayed" radioGroup="placementRadioGroup"/>
        </vbox>
        <vbox>
          <radio id="float" label="Floating" radioGroup="placementRadioGroup" oncommand="enableHere(this);"/>
          <vbox>
            <checkbox id="placeForceHereCheck" label="Force here" observes="floatingPlacement"/>
            <checkbox id="placeHereCheck" label="Here" observes="floatingPlacement"/>
            <checkbox id="placeFloatsCheck" label="On a page of floats" observes="floatingPlacement"/>
            <checkbox id="placeTopCheck" label="Top of page" observes="floatingPlacement"/>
            <checkbox id="placeBottomCheck" label="Bottom of page" observes="floatingPlacement"/>
          </vbox>
        </vbox>
        <vbox>
          <radiogroup id="herePlacementRadioGroup" align="vertical" value="left" oncommand="enableHere(this);">
            <radio id="hereLeftRadio" label="Left" value="left" observes="herePlacement" />
            <radio id="hereRightRadio" label="Right" value="right" observes="herePlacement"/>
            <radio id="hereInsideRadio" label="Inside" value="inside" observes="herePlacement" />
            <radio id="hereOutsideRadio" label="Outside" value="outside" observes="herePlacement" />
            <radio id="hereFullWidthRadio" label="Full width" value="full" observes="herePlacement" />
          </radiogroup>
        </vbox>
      </hbox>
      </radiogroup>
    </groupbox>
    <broadcasterset>
      <broadcaster id="floatingPlacement" disabled="true"/>
      <broadcaster id="herePlacement" disabled="true"/>
      <broadcaster id="textwidth" width="52"/> <!-- = 100 + overhang - notedata.width - sidemargin -->
      <broadcaster id="noteheight" height="40"/>
      <broadcaster id="reducedleftmargin" width="40"   /> <!-- 60 - overhang -->        
      <broadcaster id="sidemargin" width="8"/>         
      <broadcaster id="topmargin" height="8"/>
      <broadcaster id="notedata" width="60" color="#000000" bwidth="2" bstyle="solid" pwidth="1"/>
      <broadcaster id="hasNaturalSize" hidden="true"/>        
    </broadcasterset>
  </vbox>

</overlay>
