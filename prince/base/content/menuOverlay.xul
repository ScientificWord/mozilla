<?xml version="1.0"?> 
<!-- Copyright (c) 2004 MacKichan Software, Inc.  All Rights Reserved. -->

<?xml-stylesheet href="chrome://prince/skin/toolbarsOverlay.css" type="text/css"?>

<!DOCTYPE overlay [
<!ENTITY % DTD SYSTEM "chrome://prince/locale/menuOverlay.dtd">
%DTD;                                     
<!ENTITY % toolbarDTD SYSTEM "chrome://prince/locale/toolbarsOverlay.dtd" >
 %toolbarDTD;
<!ENTITY % inspectorDTD SYSTEM "chrome://inspector/locale/tasksOverlay.dtd" >
 %inspectorDTD;
]>

<overlay id="menuOverlay"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <script type="application/x-javascript"  src="chrome://prince/content/toolbarsOverlay.js"/>
  <!-- script type="application/x-javascript" src="chrome://prince/content/msiEditor.js"/ -->
  <!--script type="application/x-javascript"  src="chrome://venkman/content/venkman-overlay.js"/ -->
  <script type="application/x-javascript"  src="chrome://inspector/content/hooks.js"/>
  <script type="application/x-javascript" src="chrome://global/content/viewZoomOverlay.js"/>
  <script type="application/x-javascript" src="chrome://help/content/contextHelp.js"/>
  
  <menu id="fileMenu" label="&fileMenu.label;" accesskey="&filemenu.accesskey;">
    <menupopup id="menu_FilePopup" onpopupshowing="msiEditorInitFileMenu();">
      <menuitem id="menu_newDocument" label="&newDocument.label;" 
                accesskey="&newDocument.accesskey;" key="key_newDocument"
                observes="cmd_newDocument"/>
      <menuitem id="openMenuitem" accesskey="&fileopen.accesskey;"
                  key="openeditorkb"
                  observes="cmd_open" 
                  label="&openFileCmd.label;"/>
      <menuitem observes="cmd_openTeX" label="&importTeXCmd.label;" accesskey="&importTeX.accesskey;"/>
      <menuitem observes="cmd_exportTeX" label="&exportTeXCmd.label;" accesskey="&exportTeX.accesskey;"/>
      <menuitem observes="cmd_exportToWeb" label="&exporttowebCmd.label;" accesskey="&exporttoweb.accesskey;"/>
     <menu id="menu_RecentFiles" accesskey="&filerecentmenu.accesskey;" label="&fileRecentMenu.label;"
            onpopupshowing="BuildRecentFilesMenu();">
        <menupopup id="menupopup_RecentFiles" oncommand="msiEditPage(event.target.getAttribute('value'), window, false);"/>
          <!-- menuitems appended at runtime -->
      </menu>
      <menuitem accesskey="&fileclose.accesskey;" key="closekb" observes="cmd_close"
          label="&closeCmd.label;"/>
      <menuseparator/>
      <menuitem id="saveMenuitem" accesskey="&filesave.accesskey;" key="savekb" observes="cmd_save"
        label="&saveCmd.label;" />
      <menuitem accesskey="&filesaveas.accesskey;" 
        label="&saveAsCmd.label;" observes="cmd_saveAs"/>
      <menuitem accesskey="&filesavecopyas.accesskey;" 
        label="&saveCopyAsCmd.label;" observes="cmd_saveCopyAs"/>
      <menuitem accesskey="&filerevert.accesskey;" observes="cmd_revert"
        label="&fileRevert.label;" />
      <menuseparator/>
      <menuitem id="printSetupMenuItem" observes="cmd_printSetup" label="&printSetupCmd.label;"
            accesskey="fileprintsetup.accesskey;"/>
      <menu id="printPreviewMenuItem" 
            accesskey="&fileprintpreview.accesskey;" 
            key="printpreviewkb" 
            label="&printPreviewCmd.label;" 
            persist="defcomp previewCommand" 
            oncommand="msiGoDoCommand(this.getAttribute('previewCommand'));">
        <observes id="printPreviewMenuObs" element="defaultCompiler" attribute="defcomp" />
        <observes element="defaultCompiler" attribute="previewCommand"/>
        <menupopup id="printPreviewMenu" tooltiptext="" >
          <menuitem id="printPreviewMenuItem1" label="&printPreviewToolbarCmd.label;" persist="default" default="true"
                    oncommand="msiGoDoCommand('cmd_previewDirect');event.stopPropagation();" for="" onbroadcast="setDefaultmenu(this);" >
            <observes id="ppmObs1" element="defaultCompiler" attribute="defcomp" />
          </menuitem>        
          <menuitem id="printPreviewMenuItem1pdf" label="&pdfpreviewButton.label;" persist="default" default="false"
                    oncommand="msiGoDoCommand('cmd_previewPdf'); event.stopPropagation();"  for="pdf" onbroadcast="setDefaultmenu(this);">
            <observes id="ppmObs2" element="defaultCompiler" attribute="defcomp"  />
          </menuitem>        
          <menuitem id="printPreviewMenuItem1dvi" label="&dvipreviewButton.label;" persist="default" default="false"
                    oncommand="msiGoDoCommand('cmd_previewDvi');;event.stopPropagation();"  for="dvi" onbroadcast="setDefaultmenu(this);">
            <observes id="ppmObs3" element="defaultCompiler" attribute="defcomp"  />
          </menuitem>        
          <menuseparator/>
          <menu id="chooseDefPrinter3" label="&chooseDefPrinter.label;" >
	          <menupopup id="menuChooseDefPrinterPopup3">
	            <menuitem id="directMode3" label="&direct;" checked="true" 
                oncommand="return setDefaultPrinter('',event);" for="" onbroadcast="setDefaultmenu(this);">
                <observes id="ppmObs3" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	            <menuitem id="pdfMode3" label="&pdf;" 
                oncommand="return setDefaultPrinter('pdf',event);" for="pdf" onbroadcast="setDefaultmenu(this);">
                <observes id="ppmObs4" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	            <menuitem id="dviMode3" label="&dvi;" 
                oncommand="return setDefaultPrinter('dvi',event);" for="dvi" onbroadcast="setDefaultmenu(this);">
                 <observes id="ppmObs5" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	          </menupopup>
          </menu>
        </menupopup>
      </menu>
      <menu id="printMenuItem" 
            accesskey="&fileprint.accesskey;" 
            key="printkb" 
            label="&printCmd.label;"
            oncommand="msiGoDoCommand(this.getAttribute('printCommand'));">
        <observes id="printPreviewMenuObs" element="defaultCompiler" attribute="defcomp" />
        <observes element="defaultCompiler" attribute="printCommand"/>
        <menupopup id="printMenuPop" tooltiptext="" >
          <menuitem id="printMenuItem1" label="&printButton.label;" persist="default" default="true"
                    oncommand="msiGoDoCommand('cmd_printDirect');event.stopPropagation();" for="" onbroadcast="setDefaultmenu(this);">
            <observes id="ppmObs7" element="defaultCompiler" attribute="defcomp" />
          </menuitem>        
          <menuitem id="printMenuItem1pdf" label="&pdfprintButton.label;" persist="default" default="false"
                    oncommand="msiGoDoCommand('cmd_printPdf');event.stopPropagation();"  for="pdf" onbroadcast="setDefaultmenu(this);">
            <observes id="ppmObs8" element="defaultCompiler" attribute="defcomp" />
          </menuitem>        
          <menuitem id="printMenuItem1dvi" label="&dviprintButton.label;" persist="default" default="false"
                    oncommand="msiGoDoCommand('cmd_printDvi');event.stopPropagation();"  for="dvi" onbroadcast="setDefaultmenu(this);" >
            <observes id="ppmObs9" element="defaultCompiler" attribute="defcomp"  />
          </menuitem>        
          <menuseparator/>
          <menu id="chooseDefPrinter4" label="&chooseDefPrinter.label;" >
	          <menupopup id="menuChooseDefPrinterPopup10">
	            <menuitem id="directMode7" label="&direct;" checked="true" 
                oncommand="return setDefaultPrinter('',event);" for="" onbroadcast="setDefaultmenu(this);">
                <observes id="ppmObs10" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	            <menuitem id="pdfMode7" label="&pdf;" 
                oncommand="return setDefaultPrinter('pdf',event);" for="pdf" onbroadcast="setDefaultmenu(this);">
                <observes id="ppmObs11" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	            <menuitem id="dviMode7" label="&dvi;" 
                oncommand="return setDefaultPrinter('dvi',event);" for="dvi" onbroadcast="setDefaultmenu(this);">
                 <observes id="ppmObs12" element="defaultCompiler" attribute="defcomp" />
              </menuitem>        
	          </menupopup>
          </menu>
        </menupopup>
      </menu>
      <menuseparator/>
      <menuitem id="docInfoMenuItem" accesskey="&docInfo.accesskey;"
        observes="cmd_documentInfo" label="&docInfo.label;"/>
      <menuitem id="docStyleItem" accesskey="&docStyle.accesskey;"
        observes="cmd_documentStyle" label="&docStyle.label;"/>
      <menuseparator id="menu_FileQuitSeparator"/>
      <menuitem id="menu_FileQuitItem" accesskey="&fileexit.accesskey;" key="key_quit" 
        observes="cmd_quit" label="&exitCmd.label;"/>
    </menupopup>
  </menu>
  
  <menu id="editMenu" label="&editMenu.label;" accesskey="&editmenu.accesskey;" onpopupshowing="msiEditorInitFormatMenu(event, this);" 
        onpopuphidden="msiCleanUpPropertiesMenu(event, this, 'propertiesMenu');">
    <menupopup id="edEditMenuPopup">
      <menuitem id="menu_undo"
                label="&undoCmd.label;"
                key="key_undo"
                accesskey="&undoCmd.accesskey;"
                observes="cmd_undo"/>
      <menuitem id="menu_redo"
                label="&redoCmd.label;"
                key="key_redo"
                accesskey="&redoCmd.accesskey;"
                observes="cmd_redo"/>
      <menuseparator id="edEditMenuSep1" />
      <menu id="propertiesMenu" label="&propertiesMenu.label;" accesskey="&propertiesMenu.accesskey;" oncommand="msiSelectPropertiesMenu(event, this);">
        <menupopup id="propertiesMenuPopup" onpopuphidden="msiPropMenuCloseup(event, this);">
          <menuitem id="objectProperties" observes="cmd_objectProperties"/>
        </menupopup>
      </menu>
      <menuitem id="menu_cut"
                label="&cutCmd.label;"
                key="key_cut"
                accesskey="&cutCmd.accesskey;"
                observes="cmd_cut"/>
      <menuitem id="menu_copy"
                label="&copyCmd.label;"
                key="key_copy"
                accesskey="&copyCmd.accesskey;"
                observes="cmd_copy"/>
      <menuitem id="menu_paste"
                label="&pasteCmd.label;"
                key="key_paste"
                accesskey="&pasteCmd.accesskey;"
                observes="cmd_paste"/>
      <menuitem id="menu_pastenoformatting"
                label="&pasteNoFormattingCmd.label;"
                key="key_paste"
                accesskey="&pasteNoFormattingCmd.accesskey;"
                observes="cmd_pasteNoFormatting"/>
      <menuitem id="menu_delete"
                label="&deleteCmd.label;"
                key="key_delete"
                accesskey="&deleteCmd.accesskey;"
                observes="cmd_delete"/>
      <menuseparator id="edEditMenuSep2" />
      <menuitem id="menu_selectAll"
                label="&selectAllCmd.label;"
                key="key_selectAll"
                accesskey="&selectAllCmd.accesskey;"
                observes="cmd_selectAll"/>
      <menuseparator id="sep_find"/>
      <menuitem id="menu_find"           
                label="&findCmd.label;"
                key="findkb"
                accesskey="&editfind.accesskey;"
                observes="cmd_find" />
      <menuitem id="menu_findnext"       
                accesskey="&editfindnext.accesskey;"        
                key="findnextkb"     
                observes="cmd_findNext" 
                acceltext="&editfindnext.acceltext;"/>
      <menuitem id="menu_findprev"       
                accesskey="&editfindprev.accesskey;"        
                key="findprevkb"     
                observes="cmd_findPrev" 
                acceltext="&editfindprev.acceltext;"/>
#      <menuitem id="menu_replace"       accesskey="&editreplace.accesskey;"        key="findprevkb"     observes="cmd_findPrev"/>
      <menuseparator id="sep_checkspelling"/>
      <menuitem id="menu_checkspelling" 
                accesskey="&editcheckspelling.accesskey;"
                key="checkspellingkb"   
                observes="cmd_spelling" 
                label="&checkSpellingCmd.label;"/>
      <menuitem id="menu_countwords" 
                accesskey="&countWords.accesskey;"
                key="countwordskb"   
                observes="cmd_countwords" 
                disabled="false"
                label="&countWords.label;"/>
    </menupopup>
  </menu>

  <!-- Insert menu -->
  <menu id="insertMenu" >
    <menupopup id="insertMenuPopup">
      <menuitem id="insertImage" 
                accesskey="&insertimage.accesskey;"      
                observes="cmd_image"       
                label="&insertImageCmd.label;"/>
      <menuitem id="insertTable" 
                accesskey="&inserttable.accesskey;"      
                observes="cmd_InsertTable" 
                label="&insertTableCmd.label;"/>
      <!--menu     accesskey="&insertformmenu.accesskey;"   id="insertFormMenu"        label="&insertFormMenu.label;">
        <menupopup>
          <menuitem accesskey="&insertform.accesskey;"        command="cmd_form"        label="&insertFormCmd.label;"/>
          <menuseparator/>
          <menuitem accesskey="&insertinputtag.accesskey;"    command="cmd_inputtag"    label="&insertInputTagCmd.label;"/>
          <menuitem accesskey="&insertinputimage.accesskey;"  command="cmd_inputimage"  label="&insertInputImageCmd.label;"/>
          <menuitem accesskey="&inserttextarea.accesskey;"    command="cmd_textarea"    label="&insertTextAreaCmd.label;"/>
          <menuitem accesskey="&insertselect.accesskey;"      command="cmd_select"      label="&insertSelectCmd.label;"/>
          <menuitem accesskey="&insertbutton.accesskey;"      command="cmd_button"      label="&insertButtonCmd.label;"/>
          <menuitem accesskey="&insertlabel.accesskey;"       command="cmd_label"       label="&insertLabelCmd.label;"/>
          <menuitem accesskey="&insertfieldset.accesskey;"    command="cmd_fieldset"    label="&insertFieldSetCmd.label;"/>
          <menuseparator/>
          <menuitem accesskey="&insertisindex.accesskey;"     command="cmd_isindex"     label="&insertIsIndexCmd.label;"/>
        </menupopup>
      </menu>
      <menuitem id="insertLink" accesskey="&insertlink.accesskey;"       observes="cmd_link"        label="&insertLinkCmd.label;"   key="insertlinkkb"/>
      <menuitem id="insertAnchor" accesskey="&insertanchor.accesskey;"     observes="cmd_anchor"      label="&insertAnchorCmd.label;"/ -->
      <menuitem id="insertLine" 
                accesskey="&insertline.accesskey;"      
                observes="cmd_msiInsertRules"       
                label="&insertLine.label;"/>
			<menuitem id="insertFrame" 
			          accesskey="&insertframe.accesskey;"      
			          observes="cmd_frame"       
                label="&insertFrame.label;"/>
      <menuitem accesskey="&insertBreaks.accesskey;"               
                observes="cmd_msiInsertBreaks"                
                label="&insertBreaks.label;"/>
      <!-- menuitem id="insertHTMLSource" accesskey="&insertHTMLCmd.accesskey;"   observes="cmd_insertHTMLWithDialog"  key="inserthtmlkb"/>
      <menuitem accesskey="&insertchars.accesskey;"      observes="cmd_insertChars" id="insertChars"/>
      <menu id="insertTOC" label="&tocMenu.label;" accesskey="&tocMenu.accesskey;">
        <menupopup onpopupshowing="InitTOCMenu()">
          <menuitem id="insertTOCMenuitem"
                    label="&insertTOC.label;"
                    accesskey="&insertTOC.accesskey;"
                    oncommand="UpdateTOC()"/>
          <menuitem id="updateTOCMenuitem"
                    label="&updateTOC.label;"
                    accesskey="&updateTOC.accesskey;"
                    oncommand="UpdateTOC()"/>
          <menuitem id="removeTOCMenuitem"
                    label="&removeTOC.label;"
                    accesskey="&removeTOC.accesskey;"
                    oncommand="RemoveTOC()"/>
        </menupopup>
      </menu>
      <menu id="insertSmartWidgetsMenu" label="&insertSmartWidgetsMenu.label;">
        <menupopup id="insertSmartWidgetsMenuPopup">
          <menuitem label="&insertCalendarSW.label;"
                    oncommand="addCalendarSmartWidget();"/>
        </menupopup>
      </menu-->
      <menu accesskey="&insertSpacingObjects.accesskey;"   id="insertSpacesMenu"        label="&insertSpacingObjects.label;">
        <menupopup>
          <menuitem accesskey="&insertHorizontalSpaces.accesskey;"      
                    observes="cmd_insertHorizontalSpaces"      
                    label="&insertHorizontalSpaces.label;"/>
          <menuitem accesskey="&insertVerticalSpaces.accesskey;"        
                    observes="cmd_insertVerticalSpaces"        
                    label="&insertVerticalSpaces.label;"/>
        </menupopup>
      </menu>
<!--  <menuseparator id="insertMenuSeparator"/>
     Activate this after Enter key inserts P tag and not BR
      <menuitem accesskey="&insertbreak.accesskey;"      observes="cmd_insertBreak"      label="&insertBreakCmd.label;"/>
      <menuitem id="insertBreakAll" accesskey="&insertbreakall.accesskey;"   observes="cmd_insertBreakAll"   label="&insertBreakAllCmd.label;"/>
-->
    </menupopup>
  </menu>
  <menu id="goMenu" label="&gomenu.label;" accesskey="&gomenu.accesskey;">
    <menupopup id="goPopup">
      <menuitem label="&gomenuPrevSection.label;" 
                id="gomenuPrevSection" 
                observes="cmd_unimp" 
                accesskey="&gomenuPrevSection.accesskey;"/>
      <menuitem label="&gomenuNextSection.label;" 
                id="gomenuNextSection" 
                observes="cmd_unimp" 
                accesskey="&gomenuNextSection.accesskey;"/>
      <menuitem label="&gomenuLinks.label;" 
                id="gomenuLinks" 
                observes="cmd_unimp" 
                accesskey="&gomenuLinks.accesskey;"/>
      <menuseparator id="goMenuSeparator1"/>
      <menuitem label="&gomenuMarker.label;" 
                id="gomenuMarker" 
                observes="cmd_unimp" 
                accesskey="&gomenuMarker.accesskey;"/>
      <menuitem label="&gomenuParagraph.label;" 
                id="gomenuParagraph" 
                observes="cmd_gotoparagraph" 
                accesskey="&gomenuParagraph.accesskey;"/>
      <menuseparator id="goMenuSeparator2"/>
      <menuitem label="&gomenuViewHistory.label;" 
                id="gomenuViewHistory" 
                observes="cmd_unimp" 
                accesskey="&gomenuViewHistory.accesskey;"/>
      <menuitem label="&gomenuHistoryBack.label;" 
                id="gomenuHistoryBack" 
                observes="cmd_unimp" 
                accesskey="&gomenuHistoryBack.accesskey;"/>
      <menuitem label="&gomenuHistoryForward.label;" 
                id="gomenuHistoryForward" 
                observes="cmd_unimp" 
                accesskey="&gomenuHistoryForward.accesskey;"/>
    </menupopup>
  </menu>
  
  <menu id="tagMenu" label="&tagmenu.label;" accesskey="&tagmenu.accesskey;">
    <menupopup id="tagPopup">
      <menuitem label="&tagmenuAppearance.label;" 
                id="tagmenuAppearance" 
                observes="Cascades" 
                accesskey="&tagmenuAppearance.accesskey;"/>
      <menuitem label="&tagmenuFunctionKeys.label;" 
                id="tagmenuFunctionKeys" 
                observes="cmd_tagkeyassignments" 
                accesskey="&tagmenuFunctionKeys.accesskey;"/>
      <menu id="menutagadvanced" label="&tagmenuAdvanced.label;" accesskey="&tagmenuAdvanced.accesskey;">
        <menupopup>
          <menuitem label="&tagmenuFont.label;" 
                    id="tagmenuFont" 
                    observes="cmd_otfont" 
                    accesskey="&tagmenuFont.accesskey;"/>
          <menuitem label="&tagmenuFontSize.label;" 
                    id="tagmenuFontSize" 
                    observes="cmd_fontsize" 
                    accesskey="&tagmenuFontSize.accesskey;"/>
  		    <menuitem label="&tagmenuColor.label;" 
  		              id="tagmenuColor" 
  		              observes="cmd_color" 
  		              accesskey="&tagmenuColor.accesskey;"/>
        </menupopup>
      </menu>
    </menupopup>
  </menu>
  <menu id="tableMenu"/>  
  <menu id="MSITypesetMenu"/>
  <menu id="toolsMenu" label="&toolsmenu.label;" accesskey="&toolsmenu.accesskey;">
    <menupopup id="menu_ToolsPopup">
      <menuitem label="&toolsmenuJavaScriptdebugger.label;" 
                accesskey="&toolsmenuJavaScriptdebugger.accesskey;"
                id="venkmanName" 
                oncommand="start_venkman();"/>
      <menuitem id="menu_inspector" 
                label="DOM Inspector" 
                accesskey="&inspectorTaskCmd.accesskey;" 
                command="Tasks:Inspector"/>
      <menuitem label="&toolsmenuExtensions.label;" 
                accesskey="&toolsmenuExtensions.accesskey;" 
                id="menu_extensions" 
                observes="Tools:Extensions"/>
      <menuitem label="&toolsmenuThemes.label;" 
                accesskey="&toolsmenuThemes.accesskey;" 
                id="menu_themes" 
                observes="Tools:Themes"/>
      <menuseparator id="toolsMenuSeparator"/>
      <menuitem label="&autoSubstituteDlg.label;" 
                accesskey="&autoSubstituteDlg.accesskey;" 
                observes="cmd_MSIAutoSubDlg"/>
      <menuseparator id="menu_PrefsSeparator"/>
      <menuitem id="menu_preferences"
                label="&Options.label;" 
                accesskey="&Options.accesskey;" 
                oncommand='openDialog("chrome://prince/content/preferences.xul","chrome,titlebar,toolbar,centerscreen,modal");'/>
    </menupopup>
  </menu>
  <menu id="windowMenu" label="&windowmenu.label;"  accesskey="&windowmenu.accesskey;" oncommand="switchFocus(event.target);">
    <menupopup id="window-menupopup" datasources="rdf:window-mediator" ref="NC:WindowMediatorRoot">
      <template>
        <rule>
          <menuitem uri="rdf:*" label="rdf:http://home.netscape.com/NC-rdf#Name"/>
        </rule>
      </template>
    </menupopup>
  </menu>          

  <menu id="helpmenu" label="&helpmenu.label;" accesskey="&helpmenu.accesskey;">
    <menupopup id="helpPopup">
      <menuitem id="helpmenuContents" 
                label="&helpmenuContents.label;" 
                accesskey="&helpmenuContents.accesskey;" 
                key="keyhelpcontents" 
                oncommand="openHelp('swp-doc','chrome://prince/locale/helpfiles/swp.rdf');"/>
      <menuitem id="helpmenuSearch" 
                label="&helpmenuSearch.label;" 
                accesskey="&helpmenuSearch.accesskey;" 
                observes="cmd_unimp"/>
      <menuitem id="helpmenuIndex" 
                label="&helpmenuIndex.label;" 
                accesskey="&helpmenuIndex.accesskey;" 
                observes="cmd_unimp"/>
      <menuseparator/>
      <menuitem id="helpmenuWebsite" 
                label="&helpmenuWebsite.label;" 
                accesskey="&helpmenuWebsite.accesskey;" 
                observes="cmd_unimp"/>
      <menuseparator/>
      <menuitem id="helpmenuRegister" 
                label="&helpmenuRegister.label;" 
                accesskey="&helpmenuRegister.accesskey;" 
                observes="cmd_unimp"/>
      <menuitem id="helpmenuFeatures" 
                label="&helpmenuFeatures.label;" 
                accesskey="&helpmenuFeatures.accesskey;" 
                observes="cmd_unimp"/>
      <menuitem id="helpmenuLicense" 
                label="&helpmenuLicense.label;" 
                accesskey="&helpmenuLicense.accesskey;" 
                observes="cmd_unimp"/>
      <menuseparator id="aboutSeparator"/>
      <menuitem accesskey="&aboutCmd.accesskey;" 
                label="&aboutCmd.label;" 
                id="aboutName" 
                oncommand="goAboutDialog();"/>
    </menupopup>
  </menu>
  
  <menu id="viewMenu" label="&viewMenu.label;" accesskey="&viewMenu.accesskey;" >
    <menupopup id="viewMenuPopup">
      <menuitem id="viewNormalMode"   
                type="radio" 
                group="mode" 
                accesskey="&NormalMode.accesskey;"     
                observes="cmd_NormalMode"
                label="&NormalMode.label;"/>
      <menuitem id="viewAllTagsMode"  
                type="radio" 
                group="mode" 
                accesskey="&TagsMode.accesskey;"    
                observes="cmd_AllTagsMode"
                label="&TagsMode.label;"/>
      <menuitem id="viewSourceMode"   
                type="radio" 
                group="mode" 
                accesskey="&SourceMode.accesskey;" 
                observes="cmd_HTMLSourceMode"
                label="&SourceMode.label;"/>
      <menuitem id="viewPreviewMode"  
                type="radio" 
                group="mode" 
                accesskey="&PreviewMode.accesskey;"    
                observes="cmd_PreviewMode"
                  label="&PreviewMode.label;"/>
      <menuseparator/>
      <menuitem id="viewTeXLog"  
                accesskey="&viewTeXLog.accesskey;"    
                observes="cmd_showTeXLog" 
                label="&viewTeXLog.label;"/>
      <menuitem id="viewTeXFile"  
                accesskey="&viewTeXFile.accesskey;"    
                observes="cmd_showTeXFile" 
                label="&viewTeXFile.label;"/>
      <menuseparator/>
      <menu id="sidebar-menu" label="&viewSidebars.label;" accesskey="&viewsidebars.accesskey;" >
        <menupopup>
          <menuitem id="viewsidebarleft" 
                    type="checkbox" 
                    checked="true" 
                    observes="cmd_viewStatusBar"
                    accesskey="&viewStatusBar.accesskey;"
                    label="&viewsidebarleft.label;" />
          <menuitem id="viewsidebarright" 
                    type="checkbox" 
                    checked="true" 
                    observes="cmd_viewStatusBar"
                    accesskey="&viewStatusBar.accesskey;"
                    label="&viewsidebarright.label;" />
        </menupopup>
      </menu>
      <menu id="toolbars-menu" label="&viewToolbars.label;" accesskey="&viewToolbars.accesskey;" >
        <menupopup id="toolbars-menu-popup" onpopupshowing="initCustomizeMenu(this,'Toolbox');">
          <menuitem id="customizeItem-menu" oncommand="CustomizeMainToolbar('Toolbox');"
            label="&viewToolbarsCustomize.label;" />
        </menupopup>
      </menu>
      <menuseparator/>
      <menuitem id="viewFootnotes"
                type="checkbox"
                checked="true"
                persist="checked"
                accesskey="&viewFootnotes.accesskey;"
                observes="cmd_viewInvisibles"
                label="&viewFootnotes.label;"/>
      <menuitem id="viewOtherNotes" 
                type="checkbox"
                checked="true"
                persist="checked"
                accesskey="&viewOtherNotes.accesskey;"
                observes="cmd_viewInvisibles"
                label="&viewOtherNotes.label;"/>
      <menuitem id="viewInvisibles"
                type="checkbox"
                accesskey="&viewInvisibles.accesskey;"
                observes="cmd_viewInvisibles"
                label="&viewInvisibles.label;"/>
      <menuitem id="viewHelperLines" 
                type="checkbox"
                accesskey="&viewHelperLines.accesskey;"
                checked="true"
                observes="cmd_viewInvisibles"
                label="&viewHelperLines.label;"/>
      <menuitem id="viewInputBoxes"
                type="checkbox"
                accesskey="&viewInputBoxes.accesskey;"
                checked="true"
                observes="cmd_viewInvisibles"
                label="&viewInputBoxes.label;"/>
      <menuitem id="viewIndexEntries" 
                type="checkbox"
                accesskey="&viewIndexEntries.accesskey;"
                checked="true"
                observes="cmd_viewInvisibles"
                label="&viewIndexEntries.label;"/>
      <menuitem id="viewMarkers"  
                type="checkbox"
                accesskey="&viewMarkers.accesskey;"
                checked="true"
                observes="cmd_viewInvisibles"
                label="&viewMarkers.label;"/>
      <menuseparator/>
      <menu id="viewZoom" accesskey="&viewZoom.accesskey;" label="&viewZoom.label;" >
        <menupopup id="viewZoomPopup" >
          <menuitem id="viewZoomEnlarge" 
                    accesskey="&viewZoomEnlarge.accesskey;" 
                    label="&viewZoomEnlarge.label;" 
                    observes="cmd_textZoomEnlarge"/>
          <menuitem id="viewZoomReduce" 
                    accesskey="&viewZoomReduce.accesskey;" 
                    label="&viewZoomReduce.label;" 
                    observes="cmd_textZoomReduce"/>
          <menuitem id="viewZoomReset" 
                    accesskey="&viewZoomReset.accesskey;" 
                    label="&viewZoomReset.label;" 
                    observes="cmd_textZoomReset"/>
        </menupopup>
      </menu>
    </menupopup>
  </menu>
  
  <!-- commands updated when the editor gets created -->
  <commandset id="commonEditorMenuItems"
          commandupdater="true"
          events="create"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)"
  >
    <command id="cmd_newDocument"  oncommand="msiGoDoCommand('cmd_new');"/>
    <command id="cmd_open"         oncommand="msiGoDoCommand('cmd_open')"/>
    <command id="cmd_close"        label="&closeCmd.label;"         oncommand="msiGoDoCommand('cmd_close')"/>
    <command id="cmd_printSetup"   oncommand="msiGoDoCommand('cmd_printSetup')"/>
<!--
    <command id="cmd_printPreview" label="printPreviewCmd.label;"  oncommand="msiGoDoCommand('cmd_printPreview')"/>
-->
    <command id="cmd_openTeX" oncommand="openTeX();" />
    <command id="cmd_exportTeX" oncommand="exportTeX();" />
    <command id="cmd_exportToWeb" oncommand="exportToWeb();" />
    
    <command id="cmd_printDirect"    oncommand="msiGoDoCommand('cmd_printDirect');event.stopPropagation();"/>
    <command id="cmd_printPdf"    oncommand="msiGoDoCommand('cmd_printPdf');;event.stopPropagation();"/>
    <command id="cmd_printDvi"    oncommand="msiGoDoCommand('cmd_printDvi');;event.stopPropagation();"/>
    <command id="cmd_previewDirect"  oncommand="msiGoDoCommand('cmd_previewDirect');event.stopPropagation();"/>
    <command id="cmd_previewPdf"  oncommand="msiGoDoCommand('cmd_previewPdf');event.stopPropagation();" />
    <command id="cmd_previewDvi"  oncommand="msiGoDoCommand('cmd_previewDvi');event.stopPropagation();"/>
    <command id="cmd_compilePdf"  oncommand="msiGoDoCommand('cmd_compilePdf')"/>
    <command id="cmd_compileDvi"  oncommand="msiGoDoCommand('cmd_compileDvi')"/>
    <command id="cmd_documentInfo" oncommand="msiGoDoCommand('cmd_documentInfo')"/>
    <command id="cmd_documentStyle" oncommand="msiGoDoCommand('cmd_documentStyle')"/>
    <command id="cmd_quit"        oncommand="msiGoDoCommand('cmd_quit')"/>
    <command id="cmd_textZoomReduce" oncommand="ZoomManager.reduce();"/>
    <command id="cmd_textZoomEnlarge" oncommand="ZoomManager.enlarge();"/>
    <command id="cmd_textZoomReset" oncommand="ZoomManager.reset();"/>
  </commandset>

  <commandset id="composerMenuItems"
          commandupdater="true"
          events="create, mode_switch"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)"
  >
    <!-- format menu -->
    <command id="cmd_listProperties"  oncommand="msiGoDoCommand('cmd_listProperties')"/>
    <command id="cmd_pageProperties"  oncommand="msiGoDoCommand('cmd_pageProperties')"/>
    <command id="cmd_colorProperties" oncommand="msiGoDoCommand('cmd_colorProperties')"/>

    <command id="cmd_link"             oncommand="msiGoDoCommand('cmd_link')"/>
    <command id="cmd_anchor"           oncommand="msiGoDoCommand('cmd_anchor')"/>
    <command id="cmd_image"            oncommand="msiGoDoCommand('cmd_image')"/>
    <command id="cmd_line"             oncommand="msiGoDoCommand('cmd_line')"/>
    <command id="cmd_table"            oncommand="msiGoDoCommand('cmd_table')"/>
    <command id="cmd_form"             oncommand="msiGoDoCommand('cmd_form')"/>
    <command id="cmd_inputtag"         oncommand="msiGoDoCommand('cmd_inputtag')"/>
    <command id="cmd_inputimage"       oncommand="msiGoDoCommand('cmd_inputimage')"/>
    <command id="cmd_textarea"         oncommand="msiGoDoCommand('cmd_textarea')"/>
    <command id="cmd_select"           oncommand="msiGoDoCommand('cmd_select')"/>
    <command id="cmd_button"           oncommand="msiGoDoCommand('cmd_button')"/>
    <command id="cmd_label"            oncommand="msiGoDoCommand('cmd_label')"/>
    <command id="cmd_fieldset"         oncommand="msiGoDoCommand('cmd_fieldset')"/>
    <command id="cmd_isindex"          oncommand="msiGoDoCommand('cmd_isindex')"/>
    <command id="cmd_objectProperties" oncommand="msiGoDoCommand('cmd_objectProperties')"/>
    <command id="cmd_insertChars"      oncommand="msiGoDoCommand('cmd_insertChars')"    label="&insertCharsCmd.label;"/>
    <command id="cmd_insertHTMLWithDialog" oncommand="msiGoDoCommand('cmd_insertHTMLWithDialog')"  label="&insertHTMLCmd.label;"/>

    <command id="cmd_insertBreak"      oncommand="msiGoDoCommand('cmd_insertBreak')"/>
    <command id="cmd_insertBreakAll"   oncommand="msiGoDoCommand('cmd_insertBreakAll')"/>

    <command id="cmd_insertHorizontalSpaces"   oncommand="msiGoDoCommand('cmd_insertHorizontalSpaces')"/>
    <command id="cmd_insertVerticalSpaces"     oncommand="msiGoDoCommand('cmd_insertVerticalSpaces')"/>
    <command id="cmd_msiInsertRules"   oncommand="msiGoDoCommand('cmd_msiInsertRules')"/>
    <command id="cmd_msiInsertBreaks"             oncommand="msiGoDoCommand('cmd_msiInsertBreaks')"/>
    <command id="cmd_note"             oncommand="msiGoDoCommand('cmd_note')"/>
    <command id="cmd_footnote"         oncommand="msiGoDoCommand('cmd_footnote')"/>
    <command id="cmd_frame"            oncommand="msiGoDoCommand('cmd_frame')"/>
    <command id="cmd_citation"             oncommand="msiGoDoCommand('cmd_MSIinsertCitationCmd')"/>

    <command id="cmd_NormalMode"       oncommand="msiGoDoCommand('cmd_NormalMode')"/>
    <command id="cmd_AllTagsMode"      oncommand="msiGoDoCommand('cmd_AllTagsMode')"/>
    <command id="cmd_HTMLSourceMode"   oncommand="msiGoDoCommand('cmd_HTMLSourceMode')"/>
    <command id="cmd_PreviewMode"      oncommand="msiGoDoCommand('cmd_PreviewMode')"/>
    <command id="cmd_viewInvisibles"   oncommand="msiGoDoCommand('cmd_viewInvisibles')"/>
    <command id="cmd_viewStatusBar"    oncommand="setStatusBarVisibility();" />

    <!-- only used in context popup menu -->
    <command id="cmd_editLink"                 oncommand="msiGoDoCommand('cmd_editLink')"/>
    <command id="cmd_msiReviseHyperlink"       oncommand="msiGoDoCommand('cmd_msiReviseHyperlink')"/>
    <command id="cmd_reviseAnchor"             oncommand="msiGoDoCommand('cmd_reviseAnchor')"/>
    <command id="cmd_reviseImage"              oncommand="msiGoDoCommand('cmd_reviseImage')"/>
    <command id="cmd_reviseLine"               oncommand="msiGoDoCommand('cmd_reviseLine')"/>
    <!-- command id="cmd_reviseTable"            oncommand="msiGoDoCommand('cmd_reviseTable')"/ -->
    <command id="cmd_reviseForm"               oncommand="msiGoDoCommand('cmd_reviseForm')"/>
    <!-- command id="cmd_inputtag"         oncommand="msiGoDoCommand('cmd_inputtag')"/>
    <command id="cmd_inputimage"       oncommand="msiGoDoCommand('cmd_inputimage')"/ -->
    <command id="cmd_reviseTextarea"           oncommand="msiGoDoCommand('cmd_reviseTextarea')"/>
    <command id="cmd_reviseButton"             oncommand="msiGoDoCommand('cmd_reviseButton')"/>
    <command id="cmd_reviseLabel"              oncommand="msiGoDoCommand('cmd_reviseLabel')"/>
    <command id="cmd_reviseFieldset"           oncommand="msiGoDoCommand('cmd_reviseFieldset')"/>
    <!-- command id="cmd_isindex"          oncommand="msiGoDoCommand('cmd_isindex')"/ -->
    <command id="cmd_reviseChars"              oncommand="msiGoDoCommand('cmd_reviseChars')"/>
    <command id="cmd_reviseHTML"               oncommand="msiGoDoCommand('cmd_reviseHTML')"/>

    <command id="cmd_reviseBreak"              oncommand="msiGoDoCommand('cmd_reviseBreak')"/>
    <!-- command id="cmd_insertBreakAll"   oncommand="msiGoDoCommand('cmd_insertBreakAll')"/ -->

    <command id="cmd_reviseHorizontalSpaces"   oncommand="msiGoDoCommand('cmd_reviseHorizontalSpaces')"/>
    <command id="cmd_reviseVerticalSpaces"     oncommand="msiGoDoCommand('cmd_reviseVerticalSpaces')"/>
    <command id="cmd_msiReviseRules"           oncommand="msiGoDoCommand('cmd_msiReviseRules')"/>
    <command id="cmd_msiReviseBreaks"          oncommand="msiGoDoCommand('cmd_msiReviseBreaks')"/>

    <!-- dummy command used just to disable things in non-HTML modes -->
    <command id="cmd_renderedHTMLEnabler"/>
  </commandset>
  
  <commandset id="composerSaveMenuItems"
          commandupdater="true"
          events="create, save"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)"
  >
    <command id="cmd_save"           oncommand="msiGoDoCommand('cmd_save')"/>
    <command id="cmd_saveAs"         oncommand="msiGoDoCommand('cmd_saveAs')"/>
    <command id="cmd_saveCopyAs"     oncommand="msiGoDoCommand('cmd_saveCopyAs')"/>
    <command id="cmd_saveAsDir"      oncommand="msiGoDoCommand('cmd_saveAsDir')"/>
    <command id="cmd_saveCopyAsDir"  oncommand="msiGoDoCommand('cmd_saveCopyAsDir')"/>
    <command id="cmd_exportToText"   label="&exportToTextCmd.label;"   oncommand="msiGoDoCommand('cmd_exportToText')"/>
    <command id="cmd_saveAndChangeEncoding"  label="&saveAndChangeEncodingCmd.label;"  oncommand="msiGoDoCommand('cmd_saveAndChangeEncoding')"/>
    <command id="cmd_publish"        label="&publishCmd.label;"        oncommand="msiGoDoCommand('cmd_publish')"/>
    <command id="cmd_publishAs"      label="&publishAsCmd.label;"      oncommand="msiGoDoCommand('cmd_publishAs')"/>
    <command id="cmd_revert"         label="&fileRevert.label;"        oncommand="msiGoDoCommand('cmd_revert')"/>
    <command id="cmd_preview"                                          oncommand="msiGoDoCommand('cmd_preview')"/>
    <command id="cmd_editSendPage"   label="&sendPageCmd.label;"
                                     accesskey="&sendPage.accesskey;"  oncommand="msiGoDoCommand('cmd_editSendPage')"/>
  </commandset>


  <!-- edit menu commands. These get updated by code in globalOverlay.js -->
  <commandset id="composerEditMenuItems"
          commandupdater="true"
          events="create, mode_switch, undo"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)"
  >
    <command id="cmd_undo" 
             oncommand="msiGoDoCommand('cmd_undo')"
             acceltext="&undoCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_redo" 
             oncommand="msiGoDoCommand('cmd_redo')"
             acceltext="&redoCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_cut" 
             oncommand="msiGoDoCommand('cmd_cut')"
             acceltext="&cutCmd.acceltext;"
             />
    <command id="cmd_copy" 
             oncommand="msiGoDoCommand('cmd_copy')"
             acceltext="&copyCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_paste" 
             oncommand="msiGoDoCommand('cmd_paste')"
             acceltext="&pasteCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_pasteNoFormatting" oncommand="msiGoDoCommand('cmd_pasteNoFormatting')"
               label="&pasteNoFormattingCmd.label;" accesskey="&pasteNoFormattingCmd.accesskey;"/>
    <command id="cmd_delete"
             oncommand="msiGoDoCommand('cmd_delete')"
             valueDefault="&deleteCmd.label;"
             valueDefaultAccessKey="&deleteCmd.accesskey;"
             acceltext="&deleteCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_selectAll"
             oncommand="msiGoDoCommand('cmd_selectAll')"
             acceltext="&selectAllCmd.acceltext;"
             disabled="true"/>
    <command id="cmd_preferences"   oncommand="msiGoDoCommand('cmd_preferences')"/>
    <command id="cmd_find"          oncommand="msiGoDoCommand('cmd_find')"/>
    <command id="cmd_findNext"      oncommand="msiGoDoCommand('cmd_findNext')"     label="&findAgainCmd.label;" />
    <command id="cmd_findPrev"      oncommand="msiGoDoCommand('cmd_findPrev')"     label="&findPrevCmd.label;"/>
    <command id="cmd_spelling"      oncommand="msiGoDoCommand('cmd_spelling')"/>
    <command id="cmd_validate"      label="&validateCmd.label;" accesskey="&validate.accesskey;" oncommand="msiGoDoCommand('cmd_validate')"/>
    <command id="cmd_checkLinks"    oncommand="msiGoDoCommand('cmd_checkLinks')"/>
    <command id="cmd_pasteQuote"    oncommand="msiGoDoCommand('cmd_pasteQuote')" label="&pasteAsQuotationCmd.label;"/>
    <command id="cmd_publishSettings" label="&publishSettings.label;" accesskey="&publishSettings.accesskey;" oncommand="msiGoDoCommand('cmd_publishSettings')"/>
  </commandset>

  <!-- style related commands that update on creation, and on selection change -->
  <commandset id="composerStyleMenuItems"
          commandupdater="true"
          events="create, style, mode_switch"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)"
  >

    <!-- command id="cmd_ul"            state="false"     oncommand="msiDoStyleUICommand('cmd_ul')"/ -->
    <!-- command id="cmd_ol"            state="false"     oncommand="msiDoStyleUICommand('cmd_ol')"/ -->

    <command id="cmd_indent"                          oncommand="msiGoDoCommand('cmd_indent')"/>
    <command id="cmd_outdent"                         oncommand="msiGoDoCommand('cmd_outdent')"/>


    <command id="cmd_absPos"          state=""        oncommand="msiGoDoCommand('cmd_absPos')"/>
    <command id="cmd_increaseZIndex"  state=""        oncommand="msiGoDoCommand('cmd_increaseZIndex')"/>
    <command id="cmd_decreaseZIndex"  state=""        oncommand="msiGoDoCommand('cmd_decreaseZIndex')"/>

    <command id="cmd_advancedProperties"              oncommand="msiGoDoCommand('cmd_advancedProperties')"/>

    <command id="cmd_increaseFont"                    oncommand="msiGoDoCommand('cmd_increaseFont')"/>
    <command id="cmd_decreaseFont"                    oncommand="msiGoDoCommand('cmd_decreaseFont')"/>
    
    <command id="cmd_removeStyles"                    oncommand="msiGoDoCommand('cmd_removeStyles')"/>
    <command id="cmd_removeLinks"                     oncommand="msiGoDoCommand('cmd_removeLinks')"/>
    <command id="cmd_removeNamedAnchors"              oncommand="msiGoDoCommand('cmd_removeNamedAnchors')"/>
    <command id="cmd_updateStructToolbar"             oncommand="msiGoDoCommand('cmd_updateStructToolbar')"/>
    <command id="cmd_texttag"          state=""   />
    <command id="cmd_paratag"          state=""   />
    <command id="cmd_structtag"        state=""     />
    <command id="cmd_frontmtag"        state=""     />
    <!--command id="cmd_othertag"         state=""    / -->
  </commandset>

  <commandset id="princegotoitems">
    <command id="cmd_gotoparagraph" oncommand="msiGoDoCommand('cmd_gotoparagraph')"/>
    <command id="cmd_countwords" disabled="false" oncommand="msiGoDoCommand('cmd_countwords')"/>
  </commandset><!-- commands updated only when the menu gets created -->
  <commandset id="composerListMenuItems"
          commandupdater="true"
          events="create, mode_switch"
          oncommandupdate="msiGoUpdateComposerMenuItems(this)">
    <!-- List menu  -->
    <command id="cmd_dt"                  oncommand="msiDoStyleUICommand('cmd_dt')"/>
    <command id="cmd_dd"                  oncommand="msiDoStyleUICommand('cmd_dd')"/>
    <command id="cmd_removeList"          oncommand="msiGoDoCommand('cmd_removeList')"/>
    <!-- cmd_ul and cmd_ol are shared with toolbar and are in composerStyleMenuItems commandset -->
  </commandset>

  <commandset id="composerTableMenuItems"
          commandupdater="true"
          events="create, mode_switch"
          oncommandupdate="msiGoUpdateTableMenuItems(this)">
    <!-- Table menu -->
    <command id="cmd_SelectTable"         oncommand="msiGoDoCommand('cmd_SelectTable')"/>
    <command id="cmd_SelectRow"           oncommand="msiGoDoCommand('cmd_SelectRow')"/>
    <command id="cmd_SelectColumn"        oncommand="msiGoDoCommand('cmd_SelectColumn')"/>
    <command id="cmd_SelectCell"          oncommand="msiGoDoCommand('cmd_SelectCell')"/>
    <command id="cmd_SelectAllCells"      oncommand="msiGoDoCommand('cmd_SelectAllCells')"/>
    <command id="cmd_InsertTable"         oncommand="msiGoDoCommand('cmd_InsertTable')"/>
    <command id="cmd_InsertRowAbove"      oncommand="msiGoDoCommand('cmd_InsertRowAbove')"/>
    <command id="cmd_InsertRowBelow"      oncommand="msiGoDoCommand('cmd_InsertRowBelow')"/>
    <command id="cmd_InsertColumnBefore"  oncommand="msiGoDoCommand('cmd_InsertColumnBefore')"/>
    <command id="cmd_InsertColumnAfter"   oncommand="msiGoDoCommand('cmd_InsertColumnAfter')"/>
    <command id="cmd_InsertCellBefore"    oncommand="msiGoDoCommand('cmd_InsertCellBefore')"/>
    <command id="cmd_InsertCellAfter"     oncommand="msiGoDoCommand('cmd_InsertCellAfter')"/>
    <command id="cmd_DeleteTable"         oncommand="msiGoDoCommand('cmd_DeleteTable')"/>
    <command id="cmd_DeleteRow"           oncommand="msiGoDoCommand('cmd_DeleteRow')"/>
    <command id="cmd_DeleteColumn"        oncommand="msiGoDoCommand('cmd_DeleteColumn')"/>
    <command id="cmd_DeleteCell"          oncommand="msiGoDoCommand('cmd_DeleteCell')"/>
    <command id="cmd_DeleteCellContents"  oncommand="msiGoDoCommand('cmd_DeleteCellContents')"/>
    <command id="cmd_NormalizeTable"      oncommand="msiGoDoCommand('cmd_NormalizeTable')"/>
    <command id="cmd_JoinTableCells"      oncommand="msiGoDoCommand('cmd_JoinTableCells')"/>
    <command id="cmd_SplitTableCell"      oncommand="msiGoDoCommand('cmd_SplitTableCell')"/>
    <command id="cmd_ConvertToTable"      oncommand="msiGoDoCommand('cmd_ConvertToTable')"/>
    <command id="cmd_TableOrCellColor"    oncommand="msiGoDoCommand('cmd_TableOrCellColor')"/>
    <command id="cmd_editTable"           oncommand="msiGoDoCommand('cmd_editTable')"/>
  </commandset>
  <commandset id="tasksCommands">
    <command id="Tasks:Inspector" oncommand="inspectDOMDocument();"/>
    <command id="Tasks:InspectPage" oncommand="inspectDOMDocument(_content.document);"/>
    <command id="Tools:Extensions" oncommand="OpenExtensions('extensions');"/>
    <command id="Tools:Themes" oncommand="OpenExtensions('themes');"/>
    <command id="Cascades" oncommand="window.openDialog('chrome://cascades/content/EdCssProps.xul','_blank', 'chrome,close,titlebar');window.content.focus();"/>
    <command id="cmd_MSIAutoSubDlg"       oncommand="msiGoDoCommand('cmd_MSIAutoSubDlg')"/>
  </commandset>
  <commandset id="tagsMenuCommands">
    <command id="cmd_otfont" oncommand="callOTFontDialog();"/>
    <command id="cmd_fontsize" oncommand="callFontSizeDialog();"/>
    <command id="cmd_color" oncommand="msiGoDoCommand('cmd_fontcolor');"/>
    <command id="cmd_tagkeyassignments" oncommand="callFunctionKeyDialog();"/>
  </commandset>

  <keyset id="tasksKeys">
    <key id="key_inspectPage" key="i" modifiers="accel,shift" command="Tasks:InspectPage"/>
  </keyset>
  <keyset id="MSIEditorKeys">
    <!-- key keycode="VK_TAB" oncommand="return msiEditorDoTab(event, false);"/>
    <key keycode="VK_TAB" modifiers="shift" oncommand="return msiEditorDoTab(event, true);"/ -->
  </keyset>
  
#ifdef DEBUG
  <!-- DEBUG only -->
  <menu id="debugMenu" label="&debugMenu.label;" accesskey="&debugMenu.accesskey;">
  <menupopup id="menu_debugPopup">
    <!-- menuitem label="printPDF" oncommand="PrintUtils.printPDF();"/>
    <menuitem label="extendSelection" oncommand="extendSelection();"/>
    <menuitem label="&newEditorTestPage.label;" oncommand="window.openDialog('chrome://editor/content','_blank','chrome,all,dialog=no','chrome://editor/content/EditorInitPage.html')"/>
    <menuitem label="&textEditorCmd.label;"     oncommand="msiEditorNewPlaintext();" />
    <menuitem label="&outputTextCmd.label;"
           oncommand="msiEditorGetText()"/>
    <menuitem label="&outputHTMLCmd.label;"
           oncommand="msiEditorGetHTML()"/>
    <menuitem label="Execute JavaScript"
           oncommand='window.openDialog("chrome://prince/content/ExecuteJS.xul","Execute JavaScript", 
      "chrome,close,titlebar,resizable,modal=false");' />                                  
    <menuseparator />
    <menuitem label="&pasteAsQuotationCmd.label;"
           accesskey="&editpastequotation.accesskey;"
           oncommand="msiGoDoCommand('cmd_pasteQuote')"/>
    <menuitem label="&editRewrapCmd.label;"
           oncommand="msiDoRewrap();"/>
    <menuitem label="&editStripQuotesCmd.label;"
           oncommand="try { msiGetCurrentEditor().stripCites(); } catch (e) {}"/>
    <menuitem label="&insertTextCmd.label;"
           oncommand="msiEditorInsertText('All good things come to those who wait. ')"/>
    <menuitem id="menu_checkLinks" observes="cmd_checkLinks"
     label="&checkLinksCmd.label;"/>
    <menuseparator / -->
    <menuitem label="&testSelectionCmd.label;" accesskey="&testSelectionCmd.accesskey;"
           oncommand="msiEditorTestSelection()"/>
    <!--menuitem label="&testTableLayoutCmd.label;"
           oncommand="msiEditorTestTableLayout()"/>
    <menuitem label="&showEmbeddedCmd.label;"
           oncommand="msiEditorShowEmbeddedObjects()"/>
    <menuitem label="&dumpContentCmd.label;"
           oncommand="msiEditorDumpContent()"/>
    <menuitem label="&testDocumentCmd.label;"
           oncommand="msiEditorTestDocument()"/>
    <menuitem label="Dump clipboard contents" oncommand="msiDumpClipboard();" />
    <menuitem label="&runUnitTestsCmd.label;"
           oncommand="msiEditorUnitTests()"/>
    <menuseparator / -->
    <menuitem label="&dumpUndoStack.label;" accesskey="&dumpUndoStack.accesskey;"
           oncommand="msiDumpUndoStack()"/>
    <menuitem label="&dumpRedoStack.label;" accesskey="&dumpRedoStack.accesskey;"
           oncommand="msiDumpRedoStack()"/>
    <!--menuitem label="&executeJSTransactionViaTxmgr.label;"
           oncommand="ExecuteJSTransactionViaTxmgr()"/>
    <menuitem label="&executeJSTransactionViaEditor.label;"
           oncommand="ExecuteJSTransactionViaEditor()"/>
    <menuseparator />
    <menuitem label="&startLogCmd.label;"
           oncommand="msiEditorStartLog()"/>
    <menuitem label="&stopLogCmd.label;"
           oncommand="msiEditorStopLog()"/>
    <menuitem label="&runLogCmd.label;"
           oncommand="EditorRunLog()"/>
    <menuseparator />
    <menuitem label="&setFocusCmd.label;"
            accesskey="&toolsetfocus.accesskey;"
            oncommand="window.focus()"/>
    <menuseparator />
    <menuitem label="Prepare Plot"              oncommand="msiTestPreparePlotAll();"/>
    <menuitem label="Prepare Plot and Graph"	oncommand="msiTestPreparePlotGraph();"/>
    <menuitem label="Plot Tests"				oncommand="msiTestGraphScript();"/>
    <menuseparator / -->
    <menuitem label="&Configuration.label;" accesskey="&Configuration.accesskey;"
            oncommand='window.openDialog("chrome://global/content/config.xul","Configure Prince", "chrome ");'/>
    <menuitem label="&plugins.label;" accesskey="&plugins.accesskey;"
            oncommand='window.openDialog("chrome://prince/content/plugins.html","Installed plugins", "chrome ");'/>
    <!--menuitem label="Stop animation"
            oncommand='msiStopAnimation();' />
    <menuitem label="Start animation"
            oncommand='msiStartAnimation();' />
    <menuitem label="Test ChamWindow" oncommand='window.openDialog("chrome://prince/content/chamtest.xul","Cham Test", 
      "chrome,close,titlebar,resizable,modal=false");' /> 
    <menuitem label="Charset" oncommand="msiGoDoCommand('cmd_saveAndChangeEncoding');"/>
    <menuitem label="Test XPath Find" oncommand="msiTestSearch();"/ -->
    <menuitem label="&OpenAllSubdocs.label;" accesskey="&OpenAllSubdocs.accesskey;" oncommand="openAllSubdocs();"/>
    <!-- menuitem label="Prettyprint" oncommand="prettyprint();"/ -->
    </menupopup>
  </menu>
  <!-- end DEBUG only -->
#endif
  
</overlay>
