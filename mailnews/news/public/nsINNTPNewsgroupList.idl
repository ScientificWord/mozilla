/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* this interface is basically for the old ListNewsGroupState class
 * (the implementation of this class probably wants to also implement
 * or contain ChangeListener so that it can react to OnAnnouncerGoingAway()
 * to destroy the DBView)
 */
#include "nsISupports.idl"

interface nsIMsgNewsFolder;
interface nsINntpUrl;
interface nsIMsgWindow;

[scriptable, uuid(E628ED19-9452-11d2-B7EA-00805F05FFA5)]
interface nsINNTPNewsgroupList : nsISupports {
  
  void initialize(in nsINntpUrl runningURL, in nsIMsgNewsFolder newsFolder);
  
  long getRangeOfArtsToDownload(in nsIMsgWindow aMsgWindow, in long first_message,
                                in long last_message,
                                in long maxextra,
                                out long real_first_message,
                                out long real_last_message);
  
  void addToKnownArticles(in long first_message, in long last_message);


  /* The NNTP module of netlib calls these to feed XOVER data to the message
     library, in response to a news:group.name URL having been opened.
     If MSG_FinishXOVER() returns a message ID, that message will be loaded
     next (used for selecting the first unread message in a group after
     listing that group.)

     deprecated:
     The "out" arguments are (if non-NULL) a file descriptor to write the XOVER
     line to, followed by a "\n".  This is used by the XOVER-caching code.
  */
  /* the XOVER Sink should maintain the ListNewsGroupState */
  void initXOVER(in long first_message, in long last_message);  
  void processXOVERLINE(in string line, out unsigned long status);
  void processNonXOVER(in string line);
  void resetXOVER();
  void finishXOVERLINE(in long status, out long newstatus);
  void clearXOVERState();

  attribute boolean getOldMessages;
};

