/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/*
 * The mail session is a replacement for the old 4.x MSG_Master object. It
 * contains mail session generic information such as the account manager, etc
 * I'm starting this off as an empty interface and as people feel they need to
 * add more information to it, they can. I think this is a better approach
 * than trying to port over the old MSG_Master in its entirety as that had a
 * lot of cruft in it....
 */

#include "nsISupports.idl"
#include "nsIAbListener.idl"
#include "nsIAbDirectory.idl"
#include "nsIAbCard.idl"

interface nsILocalFile;

[scriptable, uuid(90533607-7205-473f-b688-ffb50eeb5d57)]
interface nsIAddrBookSession : nsISupports {
  /**
   * Adds a nsIAbListener to receive notifications of address book updates
   * according to the specified notifyFlags.
   *
   * @param  listener     The listener that is to receive updates.
   *
   * @param  notifyFlags  A bitwise-or of abListenerNotifyFlagValue items
   *                       specifying which notifications to receive.
   *
   */
  void addAddressBookListener(in nsIAbListener listener, in abListenerNotifyFlagValue notifyFlags);

  /**
   * These flags specify when to receive notifications of address book updates
   * to be passed to addAddressBookListener.
   */

  /**
   * An address book, mailing list or card is added.
   */
  const abListenerNotifyFlagValue added = 0x1;
  /**
   * A mailing list or card is removed from an address book.
   */
  const abListenerNotifyFlagValue directoryItemRemoved = 0x2;
  /**
   * An address book is removed
   */
  const abListenerNotifyFlagValue directoryRemoved = 0x4;
  /**
   * An address book, mailing list or card is changed.
   */
  const abListenerNotifyFlagValue changed = 0x8;
  /**
   * All of the above notifications are to be received.
   */
  const abListenerNotifyFlagValue all = 0xFFFFFFFF;

  /**
   * Removes a nsIAbListener from receive notifications of address book
   * updates.
   *
   * @param  listener     The listener that is to no longer receive updates.
   *
   */
  void removeAddressBookListener(in nsIAbListener listener);
  void notifyItemPropertyChanged(in nsISupports item,
                                 in string property,
                                 in wstring oldValue,
                                 in wstring newValue);
  void notifyDirectoryItemAdded(in nsIAbDirectory directory, in nsISupports item);
  
  /**
   * when a card is deleted 
   */
  void notifyDirectoryItemDeleted(in nsIAbDirectory directory, in nsISupports item);
  
  /**
   * when a directory is deleted 
   */
  void notifyDirectoryDeleted(in nsIAbDirectory directory, in nsISupports item);

  readonly attribute nsILocalFile userProfileDirectory;

  /** 
   * generate the name from the card, using the firstName and lastName and the displayName
   *
   * format follows the "mail.addr_book.lastnamefirst" pref values
   *
   * 0 = generated name is displayName
   * 1 = lastFirst, formatted following lastFirstFormat (see addressBook.properties)
   * 2 = firstLast, formatted following firstLastFormat (see addressBook.properties)
   *
   * we allow the caller to cache the pref value, so we don't have to go to prefs every time.
   */
  wstring generateNameFromCard(in nsIAbCard card, in long generateFormat);

  /** 
   * generate the phonetic name from the card, using the firstName and lastName
   *
   */
  wstring generatePhoneticNameFromCard(in nsIAbCard aCard, in boolean aLastNameFirst);
};

