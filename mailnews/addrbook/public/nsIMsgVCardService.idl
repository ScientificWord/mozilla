/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is vCard service interface.
 *
 * The Initial Developer of the Original Code is
 * Seth Spitzer <sspitzer@mozilla.org>.
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

%{C++
#include "nsVCardObj.h"
%}

[ptr] native VObject_ptr(VObject);
[ptr] native VObjectIterator_ptr(VObjectIterator);
[ptr] native const_char_ptr(const char);

[uuid(45539703-94b4-47fb-afd0-14dfe174899f)]
interface nsIMsgVCardService : nsISupports {
  [noscript, notxpcom] void cleanVObject(in VObject_ptr o);
  [noscript, notxpcom] VObject_ptr nextVObjectInList(in VObject_ptr o);
  [noscript, notxpcom] VObject_ptr parse_MIME(in string input, in unsigned long len);
  [noscript, notxpcom] string fakeCString(in VObject_ptr o);
  [noscript, notxpcom] VObject_ptr isAPropertyOf(in VObject_ptr o, in string id);
  [noscript, notxpcom] string writeMemoryVObjects(in string s, out long len, in VObject_ptr list, in boolean expandSpaces);
  [noscript, notxpcom] VObject_ptr nextVObject(in VObjectIterator_ptr i);
  [noscript, notxpcom] void initPropIterator(in VObjectIterator_ptr i, in VObject_ptr o);
  [noscript, notxpcom] long moreIteration(in VObjectIterator_ptr i);
  [noscript, notxpcom] const_char_ptr vObjectName(in VObject_ptr o);
  [noscript, notxpcom] string vObjectAnyValue(in VObject_ptr o);
};
