/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Rajiv Dayal <rdayal@netscape.com>
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIWebProgressListener;
interface nsILDAPURL;
interface nsILDAPConnection;
interface nsILDAPOperation;
interface nsIAbLDAPDirectory;

/**
 * this interface provides methods to perform LDAP Replication Queries
 */
[scriptable, uuid(91c213f7-a381-4b1d-adf3-af58a2bb95d2)]
interface nsIAbLDAPReplicationQuery : nsISupports {

   readonly attribute nsILDAPURL replicationURL;
   readonly attribute nsILDAPConnection connection;
   readonly attribute nsILDAPOperation operation;

   readonly attribute nsIAbLDAPDirectory lDAPDirectory;

   /**
     * initialize for the query
     */
    void init (in ACString aPrefName, in nsIWebProgressListener aProgressListener);
     
   /**
     * Starts an LDAP query to do replication as needed
     */
    void doReplicationQuery();

  /**
     * connects to an LDAP Server using a DN
	 */
	void connectToLDAPServer(in nsILDAPURL aURL, in AUTF8String aAuthDN);

  /**
    * Starts an LDAP query to replicate all entries
    */
    void queryAllEntries();
   
   /**
     * Cancels the currently executing query
     */
    void cancelQuery();

   /**
     * this method is the callback when query is done, failed or successful
     */
    void done(in boolean aSuccess);
};


[scriptable, uuid(126202D1-4460-11d6-B7C2-00B0D06E5F27)]
interface nsIAbLDAPChangeLogQuery : nsISupports {
  /**
    * Starts an LDAP query to find auth DN
    */
    void queryAuthDN(in AUTF8String aValueUsedToFindDn);

  /**
    * Starts an LDAP query to search server's Root DSE
    */
    void queryRootDSE();

  /**
    * Starts an LDAP ChangeLog query to find changelog entries
    */
    void queryChangeLog(in AUTF8String aChangeLogDN, in PRInt32 aLastChangeNo);
      
  /**
    * Starts an LDAP query to find changed entries
    */
    void queryChangedEntries(in AUTF8String aChangedEntryDN);
};

