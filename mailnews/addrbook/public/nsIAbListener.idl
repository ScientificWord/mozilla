/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Seth Spitzer <sspitzer@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIEnumerator.idl"

typedef unsigned long abListenerNotifyFlagValue;

/**
  * nsIAbListener
  *
  * Implement this interface to receive notifications of address book
  * items being added, removed or changed with loaded address books.
  *
  * Subscribe to events by using nsIAddrBookSession. See nsIAddrBookSession.idl
  * for details of individual types of events that may be subscribed to.
  *
  */
[scriptable, uuid(8c5b1f3d-983a-4854-a0e2-3719dba1a920)]
interface nsIAbListener : nsISupports {
  /**
   * Called when an address book item (book, card or list) is added
   *
   * @param       parentDir       The parent of the item being added.
   *
   * @param       item            The item being added to the database (a
   *                              directory or card).
   *
   */
  void onItemAdded(in nsISupports parentDir, in nsISupports item);

  /**
   * Called when an address book, mailing list or card is removed. This
   * is partially configurable when setting up the listener via
   * nsIAddrBookSession
   *
   * @param       parentDir       The parent of the item being removed, this
   *                              may be an empty directory in the case of a
   *                              top level address book.
   *
   * @param       item            The item being removed from the database.
   *
   */
  void onItemRemoved(in nsISupports parentDir, in nsISupports item);

  /**
   * Called when an address book item is changed. Note the current
   * implementation means that property is either the literal string "DirName"
   * or null, with oldValue and newValue being specified if the property is
   * "DirName" otherwise they are null.
   *
   * @param       item            The item being updated (a directory or a
   *                              card).
   *
   * @param       property        The property of the item being changed.
   *                              
   * @param       oldValue        The old value of the item property being
   *                              changed if it is known, null otherwise.
   *                              
   * @param       newValue        The new value of the item property being
   *                              changed.
   *                              
   */
  void onItemPropertyChanged(in nsISupports item, in string property, in wstring oldValue, in wstring newValue);
};
