/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "MailNewsTypes2.idl"

[scriptable, uuid(5cb11c00-cb8b-11d2-8d67-00805f8a6617)]
interface  nsIDBFolderInfo : nsISupports {
  attribute long Flags;
  long  OrFlags(in long flags);
  long  AndFlags(in long flags);
  void  SetHighWater(in nsMsgKey highwater, in boolean force);
  attribute nsMsgKey HighWater;
  attribute nsMsgKey ExpiredMark;
  attribute unsigned long FolderSize;
  attribute unsigned long FolderDate;
  void ChangeNumUnreadMessages(in long delta);
  void ChangeNumMessages(in long delta);

  // NumUnreadMessages and NumMessages will never return negative numbers. 0 means 'no msgs'.
  attribute long NumUnreadMessages;
  attribute long NumMessages;

  attribute long expungedBytes;
  attribute long ImapUidValidity;
  attribute unsigned long Version;
  attribute long ImapTotalPendingMessages;
  attribute long ImapUnreadPendingMessages;
  attribute wchar IMAPHierarchySeparator;

  attribute nsMsgViewTypeValue viewType;
  attribute nsMsgViewFlagsTypeValue viewFlags;
  attribute nsMsgViewSortTypeValue sortType;
  attribute nsMsgViewSortOrderValue sortOrder;

  void ChangeExpungedBytes(in long delta);

  string getCharPtrProperty(in string propertyName);
  void setCharPtrProperty(in string aPropertyName, in string aPropertyValue);
  void setUint32Property(in string propertyName, in unsigned long propertyValue);
  unsigned long getUint32Property(in string propertyName, in unsigned long defaultValue);
  boolean getBooleanProperty(in string propertyName, in boolean defaultValue);
  void setBooleanProperty(in string propertyName, in boolean aPropertyValue);
  nsIDBFolderInfo	GetTransferInfo();
  void	initFromTransferInfo(in nsIDBFolderInfo transferInfo);

  void getCharacterSet(out ACString charSet, out boolean overriden);
  void setCharacterSet(in string charSet);

  attribute boolean characterSetOverride;

  string getCharPtrCharacterSet();

  attribute AString locale;
  attribute AString mailboxName;


  AString getProperty(in string propertyName);
  void setProperty(in string propertyName, in AString propertyStr);

  attribute string knownArtsSet;
  attribute string folderName;
};


