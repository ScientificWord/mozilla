/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alec Flett <alecf@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsMsgSearchCore.idl"
interface nsISupportsArray;

[scriptable, uuid(b07f1cb6-fae9-4d92-9edb-03f9ad249c66)]
interface nsIMsgSearchValidityTable : nsISupports {
    
    void setAvailable(in nsMsgSearchAttribValue attrib,
                      in nsMsgSearchOpValue op, in boolean active);
    void setEnabled(in nsMsgSearchAttribValue attrib,
                    in nsMsgSearchOpValue op, in boolean enabled);
    void setValidButNotShown(in nsMsgSearchAttribValue attrib,
                             in nsMsgSearchOpValue op, in boolean valid);
    
    boolean getAvailable(in nsMsgSearchAttribValue attrib,
                         in nsMsgSearchOpValue op);
    boolean getEnabled(in nsMsgSearchAttribValue attrib,
                       in nsMsgSearchOpValue op);
    boolean getValidButNotShown(in nsMsgSearchAttribValue attrib,
                                in nsMsgSearchOpValue op);

    [noscript] void validateTerms(in nsISupportsArray terms);

    readonly attribute long numAvailAttribs;

    void getAvailableAttributes(out unsigned long length,
                                [retval, array, size_is(length)]
                                out nsMsgSearchAttribValue attrs);

    void getAvailableOperators(in nsMsgSearchAttribValue attrib,
                               out unsigned long length,
                               [retval, array, size_is(length)]
                               out nsMsgSearchOpValue operators);

	void setDefaultAttrib(in nsMsgSearchAttribValue defaultAttrib);
};
