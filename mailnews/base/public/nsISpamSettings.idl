/* -*- Mode: idl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */

/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corp.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Seth Spitzer <sspitzer@netscape.com>
 *   Dan Mosedale <dmose@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

interface nsIOutputStream;
interface nsIMsgIncomingServer;
interface nsIMsgDBHdr;

[scriptable, uuid(A2C3A171-5A1B-41e2-AB43-3C4F22E96638)]
interface nsISpamSettings: nsISupports {
  /**
   * 0 for nothing, 100 for highest
   */
  attribute long level; 

  attribute boolean moveOnSpam;
  readonly attribute boolean markAsReadOnSpam;

  /**
   * Most consumers will just use spamFolderURI rather than accessing any of
   * target attributes directly.
   */
  attribute long moveTargetMode;
  const long MOVE_TARGET_MODE_ACCOUNT = 0;
  const long MOVE_TARGET_MODE_FOLDER = 1;
  attribute string actionTargetAccount;
  attribute string actionTargetFolder;

  /**
   * built from moveTargetMode, actionTargetAccount, actionTargetFolder
   */
  readonly attribute string spamFolderURI;

  attribute boolean purge;
  /**
   * interval, in days
   */
  attribute long purgeInterval;

  attribute boolean useWhiteList;
  attribute string whiteListAbURI;

  /**
   * should we do something (move or delete)
   * when the user manually marks a message as junk?
   */
  readonly attribute boolean manualMark;
  readonly attribute long manualMarkMode;
  const long MANUAL_MARK_MODE_MOVE = 0;
  const long MANUAL_MARK_MODE_DELETE = 1;

  /**
   * integrate with server-side spam detection programs
   */
  attribute boolean useServerFilter;
  attribute ACString serverFilterName;
  const long TRUST_POSITIVES = 1;
  const long TRUST_NEGATIVES = 2;
  attribute long serverFilterTrustFlags;

  // for logging
  readonly attribute boolean loggingEnabled;
  attribute nsIOutputStream logStream;
  void logJunkHit(in nsIMsgDBHdr aMsgHdr, in boolean aMoveMessage);
  void logJunkString(in string aLogText);
  void clone(in nsISpamSettings aSpamSettings); 

  // aServer -> spam settings are associated with a particular server
  void initialize(in nsIMsgIncomingServer aServer);
};
