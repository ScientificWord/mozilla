/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsrootidl.idl"
#include "nsISupports.idl"
#include "nsIMsgFolder.idl"
#include "nsIMsgCopyServiceListener.idl"
#include "nsISupportsArray.idl"

interface nsIMsgDBHdr;
%{C++
#include "nsITransactionManager.h"
%}

interface nsITransactionManager;
interface nsIMsgWindow;
interface nsIFileSpec;

[scriptable, uuid(c9255b88-5e0f-4614-8fdc-ebb97a0f333e)]
interface nsIMsgCopyService : nsISupports {

    /**
     *
     */
	void CopyMessages(in nsIMsgFolder srcFolder,
	                  in nsISupportsArray messages,
					          in nsIMsgFolder dstFolder,
					          in boolean isMove,
                    in nsIMsgCopyServiceListener listener,
					          in nsIMsgWindow msgWindow,
					          in boolean allowUndo);

    /**
     *
     */
	void CopyFolders( in nsISupportsArray folders,
                      in nsIMsgFolder dstFolder,
                      in boolean isMove,
                      in nsIMsgCopyServiceListener listener,
                      in nsIMsgWindow msgWindow);

    void CopyFileMessage(in nsIFileSpec fileSpec,
                         in nsIMsgFolder dstFolder,
                         in nsIMsgDBHdr msgToReplace,
                         in boolean isDraftOrTemplate,
                         in unsigned long aMsgFlags,
                         in nsIMsgCopyServiceListener listener,
                         in nsIMsgWindow msgWindow);

    /**
     * Notify the message copy service that the destination folder has finished
     * it's messages copying operation so that the copy service can continue
     * copying the rest of the messages if there are more to copy with.
     * aSupport and dstFolder uniquely identify a copy service request.
     *
     * aSupport -- the originator of CopyMessages or CopyFileMessage; it can
     *             be either a nsIMsgFolder or a nsIFileSpec
     * dstFolder -- the destination folder which performs the copy operation
     * result -- the result of the copy operation
     */
	void NotifyCompletion(in nsISupports aSupport,
						            in nsIMsgFolder dstFolder,
                        in nsresult result);

};
