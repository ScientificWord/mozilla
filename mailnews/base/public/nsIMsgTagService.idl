/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * The Mozilla Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   David Bienvenu <bienvenu@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIStringEnumerator.idl"

/* 
 * Keys are the internal representation of tags, and use a limited range of 
 * characters, basically the characters allowed in imap keywords, which are
 * alphanumeric characters, but don't include spaces. Keys are stored on
 * the imap server, in local mail messages, and in summary files.
 * 
 * Tags are the user visible representation of keys, and are full unicode
 * strings. Tags should allow any unicode character.
 *
 * This service will do the mapping between keys and tags. When a tag
 * is added, we'll need to "compute" the corresponding key to use. This
 * will probably entail replacing illegal ascii characters (' ', '/', etc)
 * with '_' and then converting to imap mod utf7. We'll then need to make
 * sure that no other keyword has the same value since that algorithm
 * doesn't guarantee a unique mapping.
 *
 */
[scriptable, uuid(ad04db53-cfcc-47eb-b409-b24b3a0b6130)]
interface nsIMsgTagService : nsISupports {
  AString getTagForKey(in ACString key); // look up the tag for a key.
  void setTagForKey(in ACString key, in AString tag); // this can be used to "rename" a tag
  ACString getKeyForTag(in AString tag); // get the key representation of a given tag
  void addTagForKey(in ACString key, in AString tag, in ACString color);
  void addTag(in AString tag, in ACString color);
  ACString getColorForKey(in ACString key);
  void deleteTag(in AString tag);
  // we need some way to enumerate all tags. Or return a list of all tags.
  readonly attribute nsIStringEnumerator tagEnumerator;
  readonly attribute nsIUTF8StringEnumerator keyEnumerator;
};

