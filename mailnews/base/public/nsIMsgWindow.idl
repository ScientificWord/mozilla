/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIMsgStatusFeedback.idl"
#include "nsIMsgFolder.idl"

interface nsITransactionManager;
interface nsIDocShell;
interface nsIDOMWindowInternal;
interface nsIMsgHeaderSink;
interface nsIPrompt;
interface nsIAuthPrompt;

/*
 *  This interface can be used to set data specific to a window.
 */

/* nsIMsgMessagePaneController is used to control the visiblity of the message pane
   including the header overlay and the body. 
*/

[scriptable, uuid(923DE63D-EEB9-4574-850B-322C1A4667ED)]
interface nsIMsgMessagePaneController : nsISupports {
    void clearMsgPane();
};


[scriptable, uuid(BCE0AB71-11FF-428E-9EDC-69ABAD73b697)]
interface nsIMsgWindow : nsISupports {

  attribute nsIMsgMessagePaneController messagePaneController;
  attribute nsIMsgStatusFeedback statusFeedback;
  attribute nsIMsgHeaderSink msgHeaderSink;
  attribute nsITransactionManager transactionManager;
  attribute nsIMsgFolder openFolder;
  attribute nsIDocShell rootDocShell;
  void displayHTMLInMessagePane(in wstring title, in wstring body, in boolean clearMsgHdr);

  readonly attribute nsIPrompt promptDialog;
  attribute string mailCharacterSet;
  // Remember the message's charaset was overridden, so it can be inherited (e.g for quoting). 
  attribute boolean charsetOverride;

  /* has a running url been stopped? If you care about checking 
      this flag, you need to clear it before you start your operation since 
      there's no convenient place to clear it.
  */
  attribute boolean stopped;
  	
  void SetDOMWindow(in nsIDOMWindowInternal window);
  void StopUrls();

  void SelectFolder(in string folderUri);
  void SelectMessage(in string messageUri);
  /* when the msg window is being unloaded from the content window,
   * we can use this notification to force a flush on anything the 
   * msg window hangs on too. For some reason xpconnect is still hanging
   * onto the msg window even though all of our objects have let go of it
   * this forces a release...
   */
  void closeWindow();
};

[scriptable, uuid(FAD93C80-1AC6-11d4-A8F6-006097222B83)]
interface nsIMsgWindowCommands : nsISupports {

    void SelectFolder(in string folderUri);
    void SelectMessage(in string messageUri);
};
