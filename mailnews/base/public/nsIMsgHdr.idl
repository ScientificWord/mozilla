/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

%{C++
#include "MailNewsTypes.h"
%}

#include "MailNewsTypes2.idl"

[ptr] native octetPtr(PRUint8);

interface nsIMsgFolder;

[scriptable, uuid(B5212A60-F93F-11d2-951C-006097222B83)]
interface nsIMsgDBHdr : nsISupports
{
    /* general property routines - I think this can retrieve any
       header in the db */
    AString getProperty(in string propertyName);
    void setProperty(in string propertyName, in AString propertyStr);
    void setStringProperty(in string propertyName, in string propertyValue);
    string getStringProperty(in string propertyName);
    unsigned long getUint32Property(in string propertyName);
    void setUint32Property(in string propertyName,
                           in unsigned long propertyVal);
 
    // accessors, to make our JS cleaner
    readonly attribute boolean isRead;
    readonly attribute boolean isFlagged;

    // Mark message routines
    void markRead(in boolean read);
    void markFlagged(in boolean flagged);
    void markHasAttachments(in boolean hasAttachments);
    
    attribute nsMsgPriorityValue priority;
    void setPriorityString(in string priority);
    
    /* flag handling routines */
    attribute unsigned long flags;
    unsigned long OrFlags(in unsigned long flags);
    unsigned long AndFlags(in unsigned long flags);

    /* various threading stuff */
    attribute nsMsgKey threadId;
    attribute nsMsgKey messageKey;
    attribute nsMsgKey threadParent;

    /* meta information about the message, learned from reading the message */
    attribute unsigned long messageSize;
    attribute unsigned long lineCount;
    attribute unsigned long statusOffset;
    attribute unsigned long messageOffset;
    attribute unsigned long offlineMessageSize;
    /* common headers */
    attribute PRTime date;
    readonly attribute unsigned long dateInSeconds;
    attribute string messageId;
    attribute string ccList;
    attribute string author;
    attribute string subject;
    attribute string recipients;
    
    /* anything below here still has to be fixed */
    void setReferences(in string references);
    readonly attribute unsigned short numReferences;
    ACString getStringReference(in long refNum);

    void setRecipientsArray(in string names, in string addresses,
                            in unsigned long numAddresses);
    void setCCListArray(in string names, in string addresses,
                        in unsigned long numAddresses);

    readonly attribute wstring mime2DecodedAuthor;
    readonly attribute wstring mime2DecodedSubject;
    readonly attribute wstring mime2DecodedRecipients;

    [noscript] void getAuthorCollationKey(out octetPtr key, out unsigned long len);
    [noscript] void getSubjectCollationKey(out octetPtr key, out unsigned long len);
    [noscript] void getRecipientsCollationKey(out octetPtr key, out unsigned long len);
    
    attribute string Charset;
    attribute nsMsgLabelValue label;
    attribute string accountKey;
    readonly attribute nsIMsgFolder folder;
};
/* *******************************************************************************/

