/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsrootidl.idl"
#include "nsISupports.idl"

%{C++
#include "nsString.h"
%}
      
[ptr] native nsCString(nsCString);
/* [ptr] native nsString(nsString); */

[scriptable, uuid(1caa10b6-29a6-11d3-afb2-001083002da8)]
interface nsIMsgCopyServiceListener : nsISupports {

    /**
     * Notify the observer that the message has started to be copied. This
     * method is called only once, at the beginning of a message
     * copyoperation. 
     */
    void OnStartCopy();

    /**
     * Notify the observer that progress as occurred for the message copy
     * aProgress -
     * aProgressMax -
     */
    void OnProgress(in PRUint32 aProgress, 
                    in PRUint32 aProgressMax);

    /**
     * Setting newly created message key. This method is taylored specifically
     * for nsIMsgCopyService::CopyFileMessage() when saveing Drafts/Templates.
     * We need to have a way to inform the client what's the key of the newly
     * created message.
     * aKey -
     */
    void SetMessageKey(in PRUint32 aKey);

    /**
     * Getting the file message message ID. This method is taylored
     * specifically for nsIMsgCopyService::CopyFileMessage() when saving
     * Drafts/Templates. In order to work with imap server which doesn't
     * support uidplus we have to use search comman to retrieve the key of
     * newly created message. Message ID generated by the compose gurantee its
     * uniqueness.
     * aMessageId -
     */
    [noscript] void GetMessageId(in nsCString aMessageId);

    /**
     * Notify the observer that the message copied operation has completed.  
     * This method is called regardless of whether the the operation was
     * successful.
     * aStatus - indicate whether the operation was succeeded
     */
    void OnStopCopy(in nsresult aStatus);

};

