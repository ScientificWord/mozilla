/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* This is a private interface used exclusively by SMIME. 
   It provides functionality to the JS UI code,
   that is only accessible from C++.
*/

#include "nsISupports.idl"

interface nsIMsgCompFields;
interface nsIX509Cert;

[scriptable, uuid(a54e3c8f-a000-4901-898f-fafb297b1546)]
interface nsISMimeJSHelper : nsISupports 
{
  /**
   * Obtains detailed information about the certificate availability
   * status of email recipients.
   *
   * @param compFields - Attributes of the composed message
   *
   * @param count - The number of entries in returned arrays
   *
   * @param emailAddresses - The list of all recipient email addresses
   *
   * @param certVerification - The verification/validity status of recipient certs
   *
   * @param certIssuedInfos - If a recipient cert was found, when has it been issued?
   *
   * @param certExpiredInfos - If a recipient cert was found, when will it expire?
   *
   * @param certs - The recipient certificates, which can contain null for not found
   *
   * @param canEncrypt - whether valid certificates have been found for all recipients
   *
   * @exception NS_ERROR_FAILURE - unexptected failure
   *
   * @exception NS_ERROR_OUT_OF_MEMORY - could not create the out list
   *
   * @exception NS_ERROR_INVALID_ARG
   */
  void getRecipientCertsInfo(in nsIMsgCompFields compFields,
                             out unsigned long count,
                             [array, size_is(count)] out wstring emailAddresses,
                             [array, size_is(count)] out long certVerification,
                             [array, size_is(count)] out wstring certIssuedInfos,
                             [array, size_is(count)] out wstring certExpiresInfos,
                             [array, size_is(count)] out nsIX509Cert certs,
                             out PRBool canEncrypt);

  /**
   * Obtains a list of email addresses where valid email recipient certificates
   * are not yet available.
   *
   * @param compFields - Attributes of the composed message
   *
   * @param count - The number of returned email addresses
   *
   * @param emailAddresses - The list of email addresses without valid certs
   *
   * @exception NS_ERROR_FAILURE - unexptected failure
   *
   * @exception NS_ERROR_OUT_OF_MEMORY - could not create the out list
   *
   * @exception NS_ERROR_INVALID_ARG
   */
  void getNoCertAddresses(in nsIMsgCompFields compFields,
                          out unsigned long count,
                          [array, size_is(count)] out wstring emailAddresses);
};
