/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Richard L. Walsh.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Rich Walsh <dragtext@e-vertise.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK *****
 */

#include "nsILocalFile.idl"

interface nsIArray;

[scriptable, uuid(26de2089-239d-4697-818b-bae1fe8e8e0d)]
interface nsILocalFileOS2 : nsILocalFile
{
   /**
    * getFileTypes
    *
    * Returns the file's .TYPE extended attribute as an array of
    * nsISupportsCStrings.
    *
    */
    nsIArray getFileTypes( );

   /**
    * setFileTypes
    *
    * Sets the file's .TYPE extended attribute from a comma-separated
    * list of types (this format is used because clients are unlikely
    * to write more than a single type).
    *   @param fileTypes
    *       a string in the filesystem's native character set
    *
    */
    void setFileTypes( in ACString fileTypes );

   /**
    * isFileType
    *
    * Returns TRUE if the file has a .TYPE extended attribute that
    * matches the string passed in.  The comparison is case-sensitive.
    *   @param fileType
    *       a string in the filesystem's native character set
    *
    */
    PRBool isFileType( in ACString fileType );

   /**
    * setFileSource
    *
    * Identifies the origin of a downloaded file by writing the
    * source URI's spec to the .SUBJECT extended attribute.
    *
    *   @param aURI
    *       the source URI
    *
    */
    void setFileSource( in AUTF8String aURI );
};
