#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= xpcom
INTERNAL_TOOLS	= 1

SIMPLE_PROGRAMS	= xpt_dump$(BIN_SUFFIX) xpt_link$(BIN_SUFFIX)

CSRCS		= xpt_dump.c xpt_link.c

SDK_BINARY     =                   \
		$(SIMPLE_PROGRAMS) \
		$(NULL)

ifdef CROSS_COMPILE
HOST_SIMPLE_PROGRAMS	= $(addprefix host_, $(SIMPLE_PROGRAMS:$(BIN_SUFFIX)=$(HOST_BIN_SUFFIX)))
HOST_CSRCS		= $(CSRCS)
endif

include $(topsrcdir)/config/rules.mk

# Compile directly against the static lib, so we can use the tools
# during the build without the shared library path being set.
ifeq (,$(filter-out WINNT WINCE,$(OS_ARCH)))
DEFINES		+= -DEXPORT_XPT_API
endif

LIBS		= $(DIST)/lib/$(LIB_PREFIX)xpt.$(LIB_SUFFIX)

# Tell the $(SIMPLE_PROGRAMS) target that we need to be recompiled
# when libxpt changes.
EXTRA_DEPS	= $(wildcard $(DIST)/lib/$(LIB_PREFIX)xpt.*)

ifdef CROSS_COMPILE
HOST_LIBS		= $(DIST)/host/lib/$(LIB_PREFIX)hostxpt.$(LIB_SUFFIX)
HOST_EXTRA_DEPS		= $(wildcard $(DIST)/host/lib/$(LIB_PREFIX)hostxpt.*)

ifdef HOST_NSPR_MDCPUCFG
HOST_CFLAGS	+= -DMDCPUCFG=$(HOST_NSPR_MDCPUCFG)
endif

ifdef WINCE
# Compile directly against the static lib, so we can use the tools
# during the build without the shared library path being set.
HOST_CFLAGS +=  -DEXPORT_XPT_API
LDFLAGS += -NODEFAULTLIB:MSVCRT
endif

endif


# Build xpt_link and xpt_dump early.  (libs creates .deps used by libs.)
export::
	@$(MAKE) libs



