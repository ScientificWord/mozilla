#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../../../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= xpcom
LIBRARY_NAME	= xptcmd
MOZILLA_INTERNAL_API = 1

#
# The default is this buildable, but non-functioning code.
#
ifdef GNU_CXX
CPPSRCS		= \
		../unix/xptcinvoke_gcc_x86_unix.cpp \
		xptcstubs.cpp \
		$(NULL)
LOCAL_INCLUDES	= -I$(srcdir)/../unix
DEFINES		+= -DMOZ_USE_STDCALL -DMOZ_NEED_LEADING_UNDERSCORE
else

# FIXME: bug 413019
OS_COMPILE_CXXFLAGS += -GL-

CPPSRCS		= xptcinvoke.cpp xptcstubs.cpp

endif

REQUIRES = string

LOCAL_INCLUDES += -I$(srcdir)/../../../../xptinfo/src

# Force use of PIC
FORCE_USE_PIC	= 1

include $(topsrcdir)/config/config.mk

ifeq ($(CPU),ALPHA)
CPPSRCS 	:= xptcinvoke_alpha.cpp xptcstubs_alpha.cpp
ASFILES		:= xptcinvoke_asm_alpha.s xptcstubs_asm_alpha.s
AS		:= asaxp
ASFLAGS		+= /I../../..public
endif

ifeq ($(TARGET_CPU),x86_64)
CPPSRCS 	:= xptcinvoke_x86_64.cpp xptcstubs_x86_64.cpp
ASFILES		:= xptcinvoke_asm_x86_64.asm xptcstubs_asm_x86_64.asm
endif

ifeq ($(OS_ARCH),WINCE)

ifeq ($(TARGET_DEVICE),)
TARGET_DEVICE=device
endif

ifeq ($(TARGET_DEVICE),device)
ifeq ($(TARGET_CPU),arm)
CPPSRCS 	= xptcinvokece.cpp xptcstubsce.cpp 
ASFILES		= xptc_arm_ceppc.asm
AS			= $(CYGWIN_WRAPPER) arm-wince-as
ASFLAGS		+= -I ../../../public
AS_DASH_C_FLAG = 
endif
endif

ifeq ($(TARGET_DEVICE),emulator)
CPPSRCS 	= xptcinvoke.cpp xptcstubs.cpp 
ASFILES		= 
AS		= $(CYGWIN_WRAPPER) arm-wince-as
ASFLAGS		+= -I ../../../public
AS_DASH_C_FLAG	= 
endif
endif

# we don't want the shared lib, but we want to force the creation of a static lib.
FORCE_STATIC_LIB = 1

include $(topsrcdir)/config/rules.mk

DEFINES		+= -DEXPORT_XPTC_API -D_IMPL_NS_COM

LOCAL_INCLUDES	+= -I$(srcdir)/../..

libs:: $(LIBRARY)
	$(INSTALL) $(LIBRARY) ../..
