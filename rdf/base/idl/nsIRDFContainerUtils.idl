/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIRDFContainer.idl"
#include "nsIRDFResource.idl"


// Container utilities
[scriptable, uuid(D4214E91-FB94-11D2-BDD8-00104BDE6048)]
interface nsIRDFContainerUtils : nsISupports {
    /**
     * Returns 'true' if the property is an RDF ordinal property.
     */
    boolean IsOrdinalProperty(in nsIRDFResource aProperty);

    /**
     * Convert the specified index to an ordinal property.
     */
    nsIRDFResource IndexToOrdinalResource(in long aIndex);

    /**
     * Convert the specified ordinal property into an index
     */
    long OrdinalResourceToIndex(in nsIRDFResource aOrdinal);

    /**
     * Return 'true' if the specified resource is a container
     */
    boolean IsContainer(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a container and it is empty
     */
    boolean IsEmpty(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a bag
     */
    boolean IsBag(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is a sequence
     */
    boolean IsSeq(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Return 'true' if the specified resource is an alternation
     */
    boolean IsAlt(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty bag in the specified data source.
     */
    nsIRDFContainer MakeBag(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty sequence in the specified data source.
     */
    nsIRDFContainer MakeSeq(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Decorates the specified resource appropriately to make it
     * usable as an empty alternation in the specified data source.
     */
    nsIRDFContainer MakeAlt(in nsIRDFDataSource aDataSource, in nsIRDFResource aResource);

    /**
     * Retrieve the index of element in the container. Returns -1 if
     * the element is not in the container.
     */
    long indexOf(in nsIRDFDataSource aDataSource, in nsIRDFResource aContainer, in nsIRDFNode aElement);
};

%{C++
extern nsresult
NS_NewRDFContainerUtils(nsIRDFContainerUtils** aResult);
%}
