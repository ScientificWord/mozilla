/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIRDFNode.idl"

%{C++
#include "nscore.h" // for PRUnichar
%}

[ptr] native const_octet_ptr(const PRUint8);

/**
 * A literal node in the graph, whose value is a string.
 */
[scriptable, uuid(E0C493D2-9542-11d2-8EB8-00805F29F370)]
interface nsIRDFLiteral : nsIRDFNode {
    /**
     * The Unicode string value of the literal.
     */
    readonly attribute wstring Value;

    /**
     * An unscriptable version used to avoid a string copy. Meant
     * for use as a performance optimization.
     */
    [noscript] void GetValueConst([shared] out wstring aConstValue);
};

/**
 * A literal node in the graph, whose value is a date
 */
[scriptable, uuid(E13A24E1-C77A-11d2-80BE-006097B76B8E)]
interface nsIRDFDate : nsIRDFNode {
    /**
     * The date value of the literal
     */
    readonly attribute long long Value;
};

/**
 * A literal node in the graph, whose value is an integer
 */
[scriptable, uuid(E13A24E3-C77A-11d2-80BE-006097B76B8E)]
interface nsIRDFInt : nsIRDFNode {
    /**
     * The integer value of the literal
     */
    readonly attribute long Value;
};

/**
 * A literal node in the graph, whose value is arbitrary
 * binary data.
 */
[scriptable, uuid(237f85a2-1dd2-11b2-94af-8122582fc45e)]
interface nsIRDFBlob : nsIRDFNode {
    /**
     * The binary data.
     */
    [noscript] readonly attribute const_octet_ptr value;

    /**
     * The data's length.
     */
    readonly attribute long length;
};
