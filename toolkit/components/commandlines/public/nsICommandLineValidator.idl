/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla toolkit.
 *
 * The Initial Developer of the Original Code is
 * Robert Strong <robert.bugzilla@gmail.com>
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsICommandLine;

/**
 * Validates arguments on the command line of an XUL application.
 *
 * Each validator is registered in the category "command-line-validator".
 * The entries in this category are read in alphabetical order, and each
 * category value is treated as a service contractid implementing this
 * interface.
 *
 * By convention, validator with ordinary priority should begin with "m".
 *
 * Example:
 * Category               Entry          Value
 * command-line-validator b-browser      @mozilla.org/browser/clh;1
 * command-line-validator m-edit         @mozilla.org/composer/clh;1
 * command-line-validator m-irc          @mozilla.org/chatzilla/clh;1
 *
 */

[scriptable, uuid(5ecaa593-7660-4a3a-957a-92d5770671c7)]
interface nsICommandLineValidator : nsISupports
{
  /**
   * Process the command-line validators in the proper order, calling
   * "validate()" on each.
   *
   * @throws NS_ERROR_ABORT if any validator throws NS_ERROR_ABORT. All other
   *         errors thrown by validators will be silently ignored.
   */
  void validate(in nsICommandLine aCommandLine);
};
