/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2001
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Joe Hewitt <hewitt@netscape.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(d2fcba9a-3f5c-40fc-a9fc-4adc87dc61ef)]
interface nsIAutoCompleteResult : nsISupports
{
  /**
   * Possible values for the searchResult attribute
   */
  const unsigned short RESULT_IGNORED = 1; /* indicates invalid searchString */
  const unsigned short RESULT_FAILURE = 2; /* indicates failure */
  const unsigned short RESULT_NOMATCH = 3; /* indicates success with no matches
                                              and that the search is complete */
  const unsigned short RESULT_SUCCESS = 4; /* indicates success with matches
                                              and that the search is complete */
  const unsigned short RESULT_NOMATCH_ONGOING = 5; /* indicates success 
                                                      with no matches
                                                      and that the search 
                                                      is still ongoing */
  const unsigned short RESULT_SUCCESS_ONGOING = 6; /* indicates success 
                                                      with matches
                                                      and that the search 
                                                      is still ongoing */
  /**
   * The original search string
   */
  readonly attribute AString searchString;

  /**
   * The result of the search
   */
  readonly attribute unsigned short searchResult;

  /**
   * Index of the default item that should be entered if none is selected
   */
  readonly attribute long defaultIndex;

  /**
   * A string describing the cause of a search failure
   */
  readonly attribute AString errorDescription;

  /**
   * The number of matches
   */
  readonly attribute unsigned long matchCount;

  /**
   * Get the value of the result at the given index
   */
  AString getValueAt(in long index);

  /**
   * Get the comment of the result at the given index
   */
  AString getCommentAt(in long index);

  /**
   * Get the style hint for the result at the given index
   */
  AString getStyleAt(in long index);

  /**
   * Get the image of the result at the given index
   */
  AString getImageAt(in long index);

  /**
   * Remove the value at the given index from the autocomplete results.
   * If removeFromDb is set to true, the value should be removed from
   * persistent storage as well.
   */
  void removeValueAt(in long rowIndex, in boolean removeFromDb);
};
