/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/*
 * browser-specific interface to global history
 */

#include "nsISupports.idl"
#include "nsIGlobalHistory2.idl"

[scriptable, uuid(c43079c3-3d8d-4b7c-af14-0e30ab46865f)]
interface nsIBrowserHistory : nsIGlobalHistory2
{
    /** 
     * addPageWithDetails
     * Adds a page to history with specific time stamp information. This is used in
     * the History migrator. 
     */
    void addPageWithDetails(in nsIURI aURI, in wstring aTitle, in long long aLastVisited);

    /**
     * lastPageVisited
     * The last page that was visited in a top-level window.
     */
    readonly attribute AUTF8String lastPageVisited;

    /**
     * count
     * The number of entries in global history
     */
    readonly attribute PRUint32 count;

    /**
     * remove a page from history
     */
    void removePage(in nsIURI aURI);

    /**
     * removePagesFromHost
     * Remove all pages from the given host.
     * If aEntireDomain is true, will assume aHost is a domain,
     * and remove all pages from the entire domain.
     */
    void removePagesFromHost(in AUTF8String aHost, in boolean aEntireDomain);

    /**
     * removeAllPages
     * Remove all pages from global history
     */
    void removeAllPages();

    /**
     * hidePage
     * Hide the specified URL from being enumerated (and thus
     * displayed in the UI)
     *
     * if the page hasn't been visited yet, then it will be added
     * as if it was visited, and then marked as hidden
     */
    void hidePage(in nsIURI aURI);

    /**
     * markPageAsTyped
     * Designate the url as having been explicitly typed in by
     * the user, so it's okay to be an autocomplete result.
     */
    void markPageAsTyped(in nsIURI aURI);
};
