<?xml version="1.0"?> 

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://global/content/commonDialog.css" type="text/css"?>

<!DOCTYPE dialog SYSTEM "chrome://global/locale/commonDialog.dtd">

<dialog id="commonDialog"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" 
        role="alert"
        onload="commonDialogOnLoad();"
        ondialogaccept="return commonDialogOnAccept();"
        ondialogextra1="return commonDialogOnExtra1();"
        ondialogextra2="return commonDialogOnExtra2();"
        buttonpack="center"
        style="min-width: 29em; min-height: 8.5em; -moz-user-focus: ignore;"> 
    
  <script type="application/javascript" src="chrome://global/content/commonDialog.js"/>
  <script type="application/x-javascript" src="chrome://global/content/globalOverlay.js"/>

  <commandset id="selectEditMenuItems">
    <command id="cmd_copy" oncommand="goDoCommand('cmd_copy')" disabled="true"/>
    <command id="cmd_selectAll" oncommand="goDoCommand('cmd_selectAll')"/>
  </commandset>

  <popupset id="contentAreaContextSet">
    <popup id="contentAreaContextMenu"
           onpopupshowing="goUpdateCommand('cmd_copy')">
      <menuitem id="context-copy"
                label="&copyCmd.label;"
                accesskey="&copyCmd.accesskey;"
                command="cmd_copy"
                disabled="true"/>
      <menuitem id="context-selectall"
                label="&selectAllCmd.label;"
                accesskey="&selectAllCmd.accesskey;"
                command="cmd_selectAll"/>
    </popup>
  </popupset>


  <grid>
    <columns>
      <column/>
      <column flex="1"/>
    </columns>

    <rows>
      <row>
        <hbox align="start">
          <image id="info.icon" class="spaced"/>
        </hbox>
        <vbox id="infoContainer">
#ifdef XP_MACOSX
          <!-- Dialog title is inside dialog for OS X -->
          <description id="info.title" class="dialogTitle"/>
#endif
          <description id="info.header" class="header"/>
          <description id="info.body" context="contentAreaContextMenu" tabindex="-1"/>
        </vbox>
      </row>
      <row id="loginContainer" hidden="true" align="center">
        <label id="loginLabel" value="&editfield0.label;" control="loginTextbox"/>
        <textbox id="loginTextbox"/>
      </row>
      <row id ="password1Container" hidden="true" align="center">
        <label id="password1Label" value="&editfield1.label;" control="password1Textbox"/>
        <textbox type="password" id="password1Textbox"/>
      </row>
      <row id="password2Container" hidden="true" align="center">
        <label id="password2Label" value="&editfield2.label;" control="password2Textbox"/>
        <textbox type="password" id="password2Textbox"/>
      </row>
      <row id="checkboxContainer" hidden="true">
        <spacer/>
        <checkbox id="checkbox" oncommand="onCheckboxClick(this);"/>
      </row>
    </rows>
  </grid>


  <!-- This method is called inline because it may unset hidden="true" on the
       above boxes, causing their frames to be build and bindings to load.  
       So, by calling this inline, we guarantee the textboxes and checkboxes 
       above will have their bindings before initButtons is called, and the
       dialog will be intrinsically sized correctly. -->
  <script type="application/javascript">showControls();</script>
</dialog>
