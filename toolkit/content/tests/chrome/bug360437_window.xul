<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Findbar Test code
   -
   - The Initial Developer of the Original Code is
   - Mozilla Corporation.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Asaf Romano <mano@mozilla.com>
   -   Gavin Sharp <gavin@gavinsharp.com>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>

<window id="360437Test"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        width="600"
        height="600"
        onload="onLoad();"
        title="360437 test">

  <script type="application/javascript"><![CDATA[
    const Ci = Components.interfaces;
    const Cc = Components.classes;
    const Cr = Components.results;

    var gFindBar = null;
    var gBrowser;

    function ok(condition, message) {
      window.opener.wrappedJSObject.SimpleTest.ok(condition, message);
    }
    function finish() {
      window.close();
      window.opener.wrappedJSObject.SimpleTest.finish();
    }

    function onLoad() {
      var _delayedOnLoad = function() {
        gFindBar = document.getElementById("FindToolbar");
        gBrowser = document.getElementById("content");
        gBrowser.addEventListener("pageshow", onPageShow, false);
        gBrowser.loadURI("data:text/html,<form><input id='input' type='text' value='text inside an input element'></form>");
      }
      setTimeout(_delayedOnLoad, 1000);
    }

    function onPageShow() {
      testNormalFind();
    }

    function enterStringIntoFindField(aString) {
      for (var i=0; i < aString.length; i++) {
        var event = document.createEvent("KeyEvents");
        event.initKeyEvent("keypress", true, true, null, false, false,
                           false, false, 0, aString.charCodeAt(i));
        gFindBar._findField.inputField.dispatchEvent(event);
      }
    }

    function testNormalFind() {
      gFindBar.onFindCommand();

      // Make sure the findfield is correctly focused on open
      var searchStr = "text inside an input element";
      enterStringIntoFindField(searchStr);
      ok(document.commandDispatcher.focusedElement ==
         gFindBar._findField.inputField, "Find field isn't focused");

      // Make sure "find again" correctly transfers focus to the content element
      // when the find bar is closed.
      gFindBar.close();
      gFindBar.onFindAgainCommand(false);
      ok(document.commandDispatcher.focusedElement ==
         gBrowser.contentDocument.getElementById("input"),
             "Input Element isn't focused");

      // Make sure "find again" doesn't focus the content element if focus
      // isn't in the content document.
      var textbox = document.getElementById("textbox");
      textbox.focus();
      gFindBar.close();
      gFindBar.onFindAgainCommand(false);
      ok(textbox.hasAttribute("focused"),
         "Focus was stolen from a chrome element");
      finish();
    }
  ]]></script>
  <textbox id="textbox"/>
  <browser type="content-primary" flex="1" id="content" src="about:blank"/>
  <findbar id="FindToolbar" browserid="content"/>
</window>
