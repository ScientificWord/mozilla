#!/bin/sh
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is the MPI Arbitrary Precision Integer Arithmetic library.
#
# The Initial Developer of the Original Code is
# Michael J. Fromberger <sting@linguist.dartmouth.edu>.
# Portions created by the Initial Developer are Copyright (C) 1997
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

ECHO=/bin/echo
MAKE=gmake

$ECHO "\n** Running unit tests for MPI library\n"

# Build the mpi-test program, which comprises all the unit tests for
# the MPI library...

$ECHO "Bringing mpi-test up to date ... "
if $MAKE mpi-test ; then
  :
else
  $ECHO " "
  $ECHO "Make failed to build mpi-test."
  $ECHO " "
  exit 1
fi

if [ ! -x mpi-test ] ; then
  $ECHO " "
  $ECHO "Cannot find 'mpi-test' program, testing cannot continue."
  $ECHO " "
  exit 1
fi

# Get the list of available test suites...
tests=`mpi-test list | awk '{print $1}'`
errs=0

# Run each test suite and check the result code of mpi-test
for test in $tests ; do
  $ECHO "$test ... \c"
  if mpi-test $test ; then
    $ECHO "passed"
  else
    $ECHO "FAILED"
    errs=1
  fi
done

# If any tests failed, we'll stop at this point
if [ "$errs" = "0" ] ; then
  $ECHO "All unit tests passed"
else
  $ECHO "One or more tests failed"
  exit 1
fi

# Now try to build the 'pi' program, and see if it can compute the
# first thousand digits of pi correctly
$ECHO "\n** Running other tests\n"

$ECHO "Bringing 'pi' up to date ... "
if $MAKE pi ; then
    :
else
    $ECHO "\nMake failed to build pi.\n"
    exit 1
fi

if [ ! -x pi ] ; then
    $ECHO "\nCannot find 'pi' program; testing cannot continue.\n"
    exit 1
fi

./pi 2000 > /tmp/pi.tmp.$$
if cmp tests/pi2k.txt /tmp/pi.tmp.$$ ; then
    $ECHO "Okay!  The pi test passes."
else
    $ECHO "Oops!  The pi test failed. :("
    exit 1
fi

rm -f /tmp/pi.tmp.$$

exit 0

# Here there be dragons
