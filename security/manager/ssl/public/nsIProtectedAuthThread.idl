/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Petr Kostka.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIObserver.idl"
#include "nsIPKCS11Slot.idl"

/**
 * nsIProtectedAuthThread
 *  This is used to communicate with the thread login on to 
 *  a token with CKF_PROTECTED_AUTHENTICATION_PATH set.
 */
[scriptable, uuid(4bb27cb7-8984-4cee-8ce7-9b014c3d091b)]
interface nsIProtectedAuthThread : nsISupports
{
  /**
   * login - run the thread
   *   A user interface implementing this interface needs to
   *   call this method as soon as the message to the user is
   *   displayed. This will trigger login operation. No user 
   *   cancellation is possible during login operation.
   *
   *   When the login is done, the observe method of @observer will
   *   be called on the UI thread with a topic of "login-finished"
   *   and null data and subject.
   */
  void login(in nsIObserver observer);

  /**
   * The PKCS11 slot
   */
  readonly attribute nsIPKCS11Slot slot;

  /**
   * Gets token to be logged in name.
   */
  AString getTokenName();
};

%{ C++
// {45334489-3D30-47c6-920B-0A55A313AEBF}
#define NS_PROTECTEDAUTHTHREAD_CID \
{ 0x45334489, 0x3d30, 0x47c6, { 0x92, 0x0b, 0x0a, 0x55, 0xa3, 0x13, 0xae, 0xbf } }
#define NS_PROTECTEDAUTHTHREAD_CONTRACTID "@mozilla.org/security/protectedauththread;1"
%}
