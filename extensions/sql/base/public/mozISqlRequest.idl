/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Jan Varga
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Neil Deakin <enndeakin@sympatico.ca>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface mozISqlConnection;
interface mozISqlRequestObserver;
interface mozISqlResult;

/**
 * A request interface used during an asynchronous SQL query or update operation.
 *
 * @status UNDER_REVIEW
 */

[scriptable, uuid(f67cb817-5e07-49ff-aacc-5c80585c5031)]
interface mozISqlRequest : nsISupports
{
  /**
   * The most recent error message.
   */
  readonly attribute AString errorMessage;

  /**
   * The result of the operation.
   */
  readonly attribute mozISqlResult result;

  /**
   * The number of rows that were affected during an update.
   */
  readonly attribute long affectedRows;

  /**
   * The ID of the most recently added record.
   */
  readonly attribute long lastID;

  /**
   * The SQL query
   */
  readonly attribute AString query;

  /**
   * The context passed to the connection's asyncExecuteQuery or
   * asyncExecuteUpdate method.
   */
  readonly attribute nsISupports ctxt;

  /**
   * The observer that listens for when the request is finished.
   * Methods of the observer should be called by the request.
   */
  readonly attribute mozISqlRequestObserver observer;

  /**
   * Status codes
   */
  const long STATUS_NONE        = 0;
  const long STATUS_EXECUTED    = 1;
  const long STATUS_COMPLETE    = 2;
  const long STATUS_ERROR       = 3;
  const long STATUS_CANCELLED   = 4;
  
  /**
   * The status of the request.
   */
  readonly attribute long status;
  
  /**
   * Cancels the operation.
   */
  void cancel();

};
