<?xml version="1.0"?>

<!--
   -
   - ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is The JavaScript Debugger.
   -
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation.
   - Portions created by the Initial Developer are Copyright (C) 1998
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Robert Ginda, <rginda@netscape.com>, original author
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE window SYSTEM "chrome://venkman/locale/venkman.dtd">

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:xul=
          "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="floatingview">
    <content>
      <xul:vbox id="view-frame-p" flex="1"
        ondragover="console.dnd.dragOver(event, console.viewDropProxy);"
        ondragexit="console.dnd.dragExit(event, console.viewDropProxy);"
        ondragdrop="console.dnd.drop(event, console.viewDropProxy);">
        <xul:vbox class="view-outer"
          ondraggesture="console.dnd.startDrag(event, console.viewDragProxy);">
          <xul:hbox id="view-title" flex="1">
            <xul:image class="view-title-pop"
              tooltiptext="&ViewFloat.tooltip;"
              xbl:inherits="parentid=id"
              onclick="console.dispatch('toggle-float', { viewId: this.getAttribute('parentid')});"/>
            <xul:hbox class="view-title-grippy" flex="1"
              tooltiptext="&ViewGrippy.tooltip;">
              <xul:hbox flex="1" class="view-title-margin-left"/>
              <xul:label id="view-title-text" xbl:inherits="value=title"
                tooltiptext="&ViewGrippy.tooltip;"
                crop="center" flex="1"/>
              <xul:hbox flex="1" class="view-title-margin-right"/>
            </xul:hbox>
            <xul:image class="view-title-close"
              xbl:inherits="parentid=id"
              tooltiptext="&ViewClose.tooltip;"
              onclick="console.dispatch('toggle-view', { viewId: this.getAttribute('parentid')});"/>
          </xul:hbox>
        </xul:vbox>
        <children/>
      </xul:vbox>
    </content>

    <implementation>
      <property name="ownerWindow" onget="return window;"/>
      <property name="proxyIcon" onget="return document.getAnonymousNodes(this)[0].firstChild.firstChild.firstChild;"/>
    </implementation>
  </binding>

  <binding id="viewcontainer-box">
    <content>
      <xul:box xbl:inherits="orient=type" class="view-container" flex="1">
        <children/>
      </xul:box>
    </content>

    <implementation>
      <property name="ownerWindow" onget="return window;"/>
    </implementation>
  </binding>

  <binding id="viewcontainer-tab">
    <content>
      <xul:tabbox flex="1">
        <xul:tabpanels flex="1">
          <children/>
        </xul:tabpanels>
        <xul:tabs class="tabs-bottom">
          <xul:little-tab needinit="true"/>
        </xul:tabs>
      </xul:tabbox>
    </content>

    <implementation>
      <property name="ownerWindow" onget="return window;"/>
      <property name="tabs"
        onget="return document.getAnonymousNodes(this)[0].childNodes[1]"/>
      <property name="deck"
        onget="return document.getAnonymousNodes(this)[0].childNodes[0]"/>
    </implementation>
  </binding>

  <binding id="little-tab">
    <content>
      <xul:hbox flex="1"
        ondraggesture="console.dnd.startDrag(event, console.viewDragProxy);"
        ondragover="console.dnd.dragOver(event, console.viewDropProxy);"
        ondragdrop="console.dnd.drop(event, console.viewDropProxy);"
        ondragexit="console.dnd.dragExit(event, console.viewDropProxy);">
        <xul:label xbl:inherits="value=label" crop="right" flex="1"/>
      </xul:hbox>
    </content>
  </binding>

</bindings>
