/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla XForms support.
 *
 * The Initial Developer of the Original Code is
 * Novell, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Allan Beaufour <abeaufour@novell.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsIXFormsControlBase.idl"

interface nsIDOMNode;
interface nsIDOMElement;
interface nsIXFormsControl;

/**
 * Interface for elements that sets the XPath context of its children.
 */
[uuid(35660a75-86f0-4eaf-9da9-f47e2f5466da)]
interface nsIXFormsContextControl : nsIXFormsControlBase
{
  /**
   * Used by children to retrieve the context of their parent.
   *
   * @param aModelID          The modelID
   * @param aContextNode      The context node
   * @param aContextPosition  The context position
   * @param aContextSize      The context size
   * 
   * @note The actual model ID must be returned. An empty |aModelID| should
   * only be returned if the default model has an id="".
   */
  void getContext(out AString aModelID, out nsIDOMNode aContextNode,
                  out long aContextPosition, out long aContextSize);

  /**
   * Used by parents to set the context for children.
   *
   * @param aContextNode      The context node
   * @param aContextPosition  The context position
   * @param aContextSize      The context size
   */
  void setContext(in nsIDOMNode aContextNode, in long aContextPosition,
                  in long aContextSize);

  /**
   * Each context control maintains an 'aborted bind' list.  This list is
   * used to track xforms controls that this context control contains
   * which have tried to bind but couldn't because this context control
   * wasn't bound yet, either.
   *
   * @param aControl          The XForms control that couldn't bind because
   *                          this context control wasn't ready.
   * @param addControl        If true, aControl is added to the list.  If false
   *                          aControl will be removed from the list and also
   *                          aControl will lose its link to this control.
   */
  void addRemoveAbortedControl(in nsIXFormsControl aControl,
                               in boolean aAddControl);

};
