/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla XForms support.
 *
 * The Initial Developer of the Original Code is
 * Novell, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Allan Beaufour <abeaufour@novell.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIDOMNode.idl"

/**
 * Interface exposing the states of an XForms control.
 *
 * For more information on this interface please see
 * http://developer.mozilla.org/en/docs/XForms:Custom_Controls
 */
[scriptable, uuid(74992960-42a9-4479-a1ff-f7f1b37e187a)]
interface nsIXFormsAccessors : nsISupports
{
  /**
   * Get the value bound to the XForms control.
   */
  DOMString getValue();

  /**
   * Set the value bound to the XForms control.
   */
  void setValue(in DOMString value);

  /**
   * @see http://www.w3.org/TR/xforms/slice6.html#model-prop-readOnly
   */
  boolean isReadonly();

  /**
   * @see http://www.w3.org/TR/xforms/slice6.html#model-prop-relevant
   */
  boolean isRelevant();

  /**
   * @see http://www.w3.org/TR/xforms/slice6.html#model-prop-required
   */
  boolean isRequired();

  /**
   * @see http://www.w3.org/TR/xforms/slice6.html#model-prop-validate
   */
  boolean isValid();

  /**
   * true, if XForms control is bound to a node in a data model.
   */
  boolean hasBoundNode();

  /**
   * Node that the control is bound to in its data model.
   */
  nsIDOMNode getBoundNode();

  /**
   * Used to set the complete contents of the bound node.  This function is
   * meant to be used like setValue() except that it can be used to set more
   * than just the first textnode contained under the bound node.  If there
   * is nothing contained under aNode, then all children of the bound node
   * will be eliminated.
   *
   * @param aNode         setContent will take the contents of aNode and copy
   *                      them under the control's bound node.
   * @param aForceUpdate  Indicates whether setContent should rebuild,
   *                      recalculate, revalidate and refresh the model that
   *                      this control is bound to prior to returning
   */
  void setContent(in nsIDOMNode aNode, in boolean aForceUpdate);
};
