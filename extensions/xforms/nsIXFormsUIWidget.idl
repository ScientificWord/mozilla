/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla XForms support.
 *
 * The Initial Developer of the Original Code is
 * Novell, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Allan Beaufour <abeaufour@novell.com>
 *  Olli Pettay <Olli.Pettay@helsinki.fi>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIDOMElement.idl"

/**
 * Interface implemented by XForms UI widgets.
 *
 * For more information on this interface please see
 * http://developer.mozilla.org/en/docs/XForms:Custom_Controls
 *
 */
[scriptable, uuid(0448d5cd-c69c-4279-9dab-eeaee47dbc1a)]
interface nsIXFormsUIWidget : nsIDOMElement
{
  /**
   * Called, when UI Widget should refresh itself.
   */
  void refresh();

  /**
   * Tries to focus the UI Widget. Returns true, if focusing succeeded.
   */
  boolean focus();

  /**
   * The method focuses (or activates) element that accesskey is bound to. It is
   * called when accesskey is activated.
   */
  void performAccesskey();

  /**
   * During submission, the \<submit\> should be disabled.
   */
  void disable(in boolean disable); // for <submit>

  /**
   * Return "string" value of xforms element that element actually shows.
   *
   * From time to time current element value can be different from current value
   * of instance node that element is bound to. For example:
   * 1) When a XForms control has non-incremental update and its value is
   * changed due to user interaction, then getCurrentValue will return the
   * control's new value even though the bound node has not been updated yet.
   * 2) If instace value is out of range then xforms element can't show it.
   * Therefore it shows default value and getCurrentValue will return showed
   * value.
   */
  AString getCurrentValue();
};

