/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is cookie manager code.
 *
 * The Initial Developer of the Original Code is
 * Michiel van Leeuwen (mvl@exedo.nl).
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/**
 * An interface to open a dialog to ask to permission to accept the cookie.
 */

interface nsIDOMWindow;
interface nsICookie;

[scriptable, uuid(72f8bb14-2810-4f38-8d0d-290c5401f54e)]
interface nsICookiePromptService : nsISupports
{
  const PRUint32 DENY_COOKIE = 0;
  const PRUint32 ACCEPT_COOKIE = 1;
  const PRUint32 ACCEPT_SESSION_COOKIE = 2;

  /* Open a dialog that asks for permission to accept a cookie
   * 
   * @param parent
   * @param cookie
   * @param hostname          the host that wants to set the cookie, 
   *                           not the domain: part of the cookie
   * @param cookiesFromHost   the number of cookies there are already for this host
   * @param changingCookie    are we changing this cookie?
   * @param rememberDecision  should we set the matching permission for this host?
   * @returns                 0 == deny cookie
   *                          1 == accept cookie
   *                          2 == accept cookie for current session
   */

  long cookieDialog(in nsIDOMWindow parent,
                    in nsICookie cookie,
                    in ACString hostname,
                    in long cookiesFromHost,
                    in boolean changingCookie,
                    out boolean rememberDecision);
};

%{C++
#define NS_COOKIEPROMPTSERVICE_CONTRACTID "@mozilla.org/embedcomp/cookieprompt-service;1"
%}
