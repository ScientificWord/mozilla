/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Platform for Privacy Preferences.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s): Harish Dhurvasula <harishd@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIURI;

[scriptable,uuid(8C51E90D-CBE7-4a2c-B9F3-77BF3AF12694)]
interface nsIPolicyReference : nsISupports {
  /**
   * Main URI or a URI with the same host as the main URI.
   */
  const unsigned long IS_MAIN_URI         = (1<<0);
  /**
   * URI with a domain different from the main URI.
   */
  const unsigned long IS_EMBEDDED_URI     = (1<<1);
  /**
   * URI referenced via LINK tag
   */
  const unsigned long IS_LINKED_URI       = (1<<2);
  /**
   * Signals a successful policy load
   */
  const unsigned long POLICY_LOAD_SUCCESS = (1<<3);
  /**
   * Signals a policy load failure
   */
  const unsigned long POLICY_LOAD_FAILURE = (1<<4);
  /**
   * Signals obsolete policy
   */
  const unsigned long POLICY_LIFE_EXPIRED = (1<<5);
  /**
   * Signals a syntax error ( Ex. xml error ) in the policy.
   */
  const unsigned long POLICY_SYNTAX_ERROR = (1<<6);  

  /**
   * Initialize the object with the document's URI.
   *
   * @param aMailURI -> Current document's URI
   *
   */
  void initialize(in nsIURI aMainURI);

  /**
   * Call this method to locate the policy reference file for the current uri.
   *
   * @param aCurrentURI -> URI that requests a privacy policy
   * @paran aFlag       -> IS_SELECTED_URI | IS_EMBEDDED_URI | IS_LINKED_URI
   *
   */
  void loadPolicyReferenceFileFor(in nsIURI aCurrentURI, in unsigned long aFlag);

  /**
   * This method releases all the objects used for policy reference.
   *
   */
  void finalize();
};
