/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* The nsIGenericInterfaceInfo/nsIGenericInterfaceInfoSet public declarations.*/


#include "nsISupports.idl"
#include "nsIInterfaceInfo.idl"
#include "nsIInterfaceInfoManager.idl"

// forward declaration of non-XPCOM types

[ptr] native XPTMethodDescriptorPtr(XPTMethodDescriptor);
[ptr] native XPTConstDescriptorPtr(XPTConstDescriptor);
[ptr] native XPTParamDescriptorPtr(XPTParamDescriptor);
[ptr] native XPTTypeDescriptorPtr(XPTTypeDescriptor);

/* this is NOT intended to be scriptable */
[uuid(8344a200-18ed-4538-8d44-e50b5156b564)]
interface nsIGenericInterfaceInfo : nsIInterfaceInfo
{
    /**
    * All members except params* and result* copied
    */

    PRUint16 appendMethod(in XPTMethodDescriptorPtr aMethod);
    
    /**
    * All members copied
    */
    PRUint16 appendConst(in XPTConstDescriptorPtr aConst);
};

/* this is NOT intended to be scriptable */
[uuid(8cc674ee-52ba-45fa-b897-bb88d35eaa91)]
interface nsIGenericInterfaceInfoSet : nsIInterfaceInfoManager
{
    /**
    * Methods include pointers to param arrays allocated here.
    */ 
    XPTParamDescriptorPtr allocateParamArray(in PRUint16 aCount);
    
    /**
    * Used for type that is in an array.
    */ 
    XPTTypeDescriptorPtr allocateAdditionalType(out PRUint16 aIndex);

    PRUint16 createAndAppendInterface(in string aName, in nsIIDRef aIID,
                                      in PRUint16 aParent, in PRUint8 aFlags,
                                      out nsIGenericInterfaceInfo aInfo);
    PRUint16 appendExternalInterface(in nsIInterfaceInfo aInfo);
    PRUint16 indexOf(in nsIIDRef aIID);
    PRUint16 indexOfByName(in string aName);
    nsIInterfaceInfo interfaceInfoAt(in PRUint16 aIndex);
};

%{C++
// The contractID for the implementation built into iiextras
#define NS_GENERIC_INTERFACE_INFO_SET_CONTRACTID "@mozilla.org/genericInterfaceInfoSet;1"
%}

