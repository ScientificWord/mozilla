/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2001
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   John Bandhauer (jband@netscape.com)
 *   Vidur Apparao (vidur@netscape.com)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIWebServiceProxy.idl"

[scriptable, uuid(f8127804-529d-4f9f-90cc-e7447491ed42)]
interface nsIWSPProxyTestListener : nsISupports {
  void onIsPrimeProxyTestComplete(in AString result);
};

[scriptable, uuid(fd25b392-f435-4aea-bbbc-0886f8239dce)]
interface nsIWSPProxyTest : nsISupports {
  AString testComplexTypeWrapper();
  AString testPropertyBagWrapper();
  void testIsPrimeProxy(in nsIWSPProxyTestListener aListener);
};

[uuid(6de70ec8-46fb-49d5-8dac-9d2eae42ea5a)]
interface nsIWSPTestComplexType : nsISupports {
  readonly attribute PRUint8 i8;
  readonly attribute PRInt16 i16;
  readonly attribute PRInt32 i32;
  readonly attribute PRInt64 i64;
  readonly attribute PRUint8 u8;
  readonly attribute PRUint16 u16;
  readonly attribute PRUint32 u32;
  readonly attribute PRUint64 u64;
  readonly attribute PRBool b;
  readonly attribute float f;
  readonly attribute double d;
  readonly attribute char c;
  readonly attribute wchar wc;
  readonly attribute AString s;
  readonly attribute nsIWSPTestComplexType p;
  readonly attribute nsIWSPTestComplexType p2;
  void array1(out PRUint32 length, [array, retval, size_is(length)] out PRUint32 array1);
  void array2(out PRUint32 length, [array, retval, size_is(length)] out double array2);
  void array3(out PRUint32 length, [array, retval, size_is(length)] out nsIWSPTestComplexType array3);
};

%{ C++
#define NS_WSPPROXYTEST_CONTRACTID "@mozilla.org/xmlextras/proxy/webserviceproxytest;1"
#define NS_WSPPROXYTEST_CID                        \
{ /* cdb03ec6-4a5e-4461-996e-16f517e53b87 */       \
  0xcdb03ec6, 0x4a5e, 0x4461,                      \
 {0x99, 0x6e, 0x16, 0xf5, 0x17, 0xe5, 0x3b, 0x87} }
%} 

[scriptable, uuid(5d557963-b082-4f93-b96d-8e4d6b7cd5cd)]
interface statisticStruct : nsISupports {
  readonly attribute double average;
  readonly attribute double standardDeviation;
};

[scriptable, uuid(4814fb14-d081-4cb9-995d-fd6472913c6c)]
interface SpheonJSAOPStatisticsPortType : nsISupports {
  statisticStruct getStatistics(in PRUint32 valsLength, [array, size_is(valsLength)] in double vals);
  boolean isPrimeNumber(in PRInt32 prime);
  PRInt32 crossSum(in PRInt32 sum);
};

[scriptable, uuid(7b7b9508-8a0a-4b41-bf35-167804376c40)]
interface SpheonJSAOPStatisticsPortTypeListener : nsISupports {
  void onError(in nsIException error, in nsIWebServiceCallContext cx);
  void getStatisticsCallback(in statisticStruct retval, in nsIWebServiceCallContext cx);
  void isPrimeNumberCallback(in boolean retval, in nsIWebServiceCallContext cx);
  void crossSumCallback(in PRInt32 retval, in nsIWebServiceCallContext cx);
};

[scriptable, uuid(bbae3748-d7eb-453c-8b48-7b760f7075f6)]
interface SpheonJSAOPStatisticsPortTypeAsync : nsISupports {
  void setListener(in SpheonJSAOPStatisticsPortTypeListener listener);
  nsIWebServiceCallContext getStatistics(in PRUint32 valsLength,
            [array, size_is(valsLength)] in double vals);
  nsIWebServiceCallContext isPrimeNumber(in PRInt32 prime);
  nsIWebServiceCallContext crossSum(in PRInt32 sum);
};

